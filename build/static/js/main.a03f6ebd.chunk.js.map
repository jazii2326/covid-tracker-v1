{"version":3,"sources":["variables/Variables.jsx","../node_modules/jspdf/dist sync","assets/img/reactlogo.png","assets/img/faces/face-3.jpg","assets/img/faces/virus.png","assets/img/faces/patient.png","assets/img/faces/toxic.png","assets/img/faces/chemistry.png","assets/img/faces/virus2.png","assets/img/sidebar-3.jpg","components/Navbars/AdminNavbarLinks.jsx","components/Navbars/AdminNavbar.jsx","components/Footer/Footer.jsx","components/Sidebar/Sidebar.jsx","components/Card/Card.jsx","components/CustomCheckbox/CustomCheckbox.jsx","components/CustomButton/CustomButton.jsx","components/Tasks/Tasks.jsx","components/CardTrend/CardTrend.jsx","components/LineGraph/LineGraph.js","components/DailyChart/DailyChart.jsx","components/MainStatsCard/MainStatsCard.jsx","components/HeaderStats/HeaderStats.jsx","components/Table/Table3.jsx","components/Table/Table2.jsx","components/Table/sortedTable.jsx","components/Table/TableContainer2.jsx","components/PieChart/PieChart.jsx","components/PieChart/PieChartContainer.jsx","components/PieChart/CaseDistPie.jsx","components/PieChart/CaseDistPieContain.jsx","views/Dashboard.jsx","components/CalenderCharts/CalenderTotalCases.jsx","components/CalenderCharts/CalenderTotalDeaths.jsx","components/CalenderCharts/CalenderTotalRecovered.jsx","components/CalenderCharts/utils.js","components/CalenderCharts/CalenderTotalContainer.jsx","components/CalenderCharts/TodayCasesGraph.jsx","components/CalenderCharts/TodayDeathsGraph.jsx","components/CalenderCharts/TodayRecoveredGraph.jsx","components/CalenderCharts/TodayCalenderContainer.jsx","components/PieChartForCountry/PieChartForTotals.jsx","components/PieChartForCountry/PieChartForToday.jsx","components/PieChartForCountry/PieChartForCountryContainer.jsx","components/CountryLineGraph/CountryLineGraphForToday.jsx","components/CountryLineGraph/CountryLineGraphForTotal.jsx","components/CountryLineGraph/DailyChartsForCountry.jsx","views/CovidCountryTracker.jsx","components/GeoAnalysis/InfoBox.jsx","components/GeoAnalysis/util.js","components/GeoAnalysis/Map.jsx","components/GeoAnalysis/MapContainer.jsx","components/NivoMap/NivoMap.jsx","components/NivoMap/NivoMapContainer.jsx","routes.js","views/GeoAnalysis.jsx","layouts/Admin.jsx","index.js"],"names":["defaultWidth","window","screen","width","style","Wrapper","Containers","DefaultStyle","position","padding","zIndex","WebkitBoxSizing","MozBoxSizing","boxSizing","height","display","border","fontSize","WebkitFontSmoothing","fontFamily","fontWeight","color","tl","top","bottom","left","right","tr","tc","margin","marginLeft","bl","br","bc","NotificationItem","cursor","borderRadius","opacity","transition","WebkitTransform","transform","willChange","isHidden","isVisible","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","Title","marginTop","MessageWrapper","marginRight","maxWidthwidth","Dismiss","float","lineHeight","outline","textAlign","Action","background","ActionWrapper","module","exports","thArray","tdArray","iconsArray","dataPie","labels","series","legendPie","names","types","dataSales","optionsSales","low","high","showArea","axisX","showGrid","lineSmooth","showLine","showPoint","fullWidth","chartPadding","responsiveSales","labelInterpolationFnc","value","legendSales","dataBar","optionsBar","seriesBarDistance","responsiveBar","legendBar","webpackEmptyContext","req","e","Error","code","keys","resolve","id","AdminNavbarLinks","Nav","pullRight","Component","Header","props","mobileSidebarToggle","bind","state","sidebarExists","this","setState","preventDefault","document","documentElement","classList","toggle","node","createElement","onclick","parentElement","removeChild","body","appendChild","Navbar","fluid","Brand","href","brandText","Toggle","onClick","Collapse","Footer","className","Grid","Date","getFullYear","Sidebar","innerWidth","routeName","location","pathname","indexOf","updateDimensions","addEventListener","sidebarBackground","backgroundImage","image","data-color","data-image","hasImage","src","logo","alt","routes","map","prop","key","redirect","upgrade","activeRoute","layout","path","to","activeClassName","icon","name","CustomCheckbox","is_checked","isChecked","handleClick","number","label","inline","rest","classes","undefined","type","onChange","checked","htmlFor","CustomButton","fill","simple","round","block","btnClasses","cx","Button","CardTrend","plain","hCenter","img_url","vir","death","pat","deathrate","virus2","title","category","ctAllIcons","ctTableFullWidth","ctTableResponsive","ctTableUpgrade","content","legend","stats","statsIcon","options","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","tooltipItem","data","numeral","format","scales","xAxes","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildDeathRate","chartData1","date","cases","newDataPoint","x","y","push","console","log","buildChartData","casesType","lastDataPoint","chartData","LineGraph","noOfDays","useState","setData","useEffect","deathRate","a","fetch","then","response","json","fetchData","length","datasets","lineCh_bgColor","borderColor","lineCh_brColor","DailyChart","setNoOfDays","FormControl","Select","variant","noOfDaySelected","target","maxHeight","MenuItem","Row","Col","md","MainStatsCard","cases1","cases2","cases3","subheading1","subheading2","subheading3","imageUrl","percentage1","percentage2","isRed","isGreen","CardContent","HeaderStats","countryInfo","setCountryInfo","mildCases","parseInt","active","critical","casesWithOutcome","mildPercentage","recoveredPercentage","recovered","deathsPercentage","deaths","criticalPercentage","lg","sm","xs","todayCases","todayRecovered","todayDeaths","casesPerOneMillion","recoveredPerOneMillion","deathsPerOneMillion","makeStyles","theme","tableFont","root","container","descendingComparator","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","order","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","headCell","TableCell","align","sortDirection","TableSortLabel","direction","property","event","visuallyHidden","useToolbarStyles","paddingLeft","spacing","paddingRight","highlight","palette","secondary","main","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","Toolbar","clsx","Typography","component","IconButton","aria-label","useStyles","paper","marginBottom","table","minWidth","clip","overflow","EnhancedTable","rows","React","setOrder","setOrderBy","selected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","Paper","aria-labelledby","size","TableBody","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","slice","row","isItemSelected","hover","role","aria-checked","tabIndex","country","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Switch","columns","TableContainer","setRows","searchResult","setSearchResult","filteredData","filter","cty","toLowerCase","includes","getCountriesData","placeholder","MyResponsivePie","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","from","modifiers","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","defs","stagger","rotation","lineWidth","match","legends","anchor","translateY","translateX","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","PieChartContainer","continents","setcontinents","continentColors","Asia","Europe","Africa","cont","continent","CaseDistPieContain","severityDistState","setSeverityDistState","severityDist","Dashboard","i","paddingTop","TableContainer2","MyResponsiveCalendar","maxVal","emptyColor","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","minValue","maxValue","xFormat","justify","itemCount","itemsSpacing","itemDirection","CalenderCountryDeaths","CalendarCountryRecovered","casesTypes","convertDate","d","month","getMonth","day","getDate","year","join","findMax","max","apply","o","CalenderCountriesContainer","setInputCountry","countries","setCountries","countryData","setCountryData","countryDeaths","setCountryDeaths","countryRecovered","setCountryRecovered","timeline","dataArr","Object","dataArrDeaths","dataArrRecovered","getCountryData","onCountryChange","countryCode","message","alert","maxValCases","maxValDeaths","maxValRecovered","iso2","TodayCasesCalendar","TodayDeathsCalendar","TodayRecoveredCalendar","TodayCalenderContainer","setTodayCases","setTodayDeaths","setTodayRecovered","maxCases","setMaxCases","maxDeaths","setMaxDeaths","maxRecovered","setMaxRecovered","dataForToday","formatedTodayCases","formatedTodayDeaths","formatedTodayRecovered","PieChartForTotals","PieChartForToday","PieChartForCountryContainer","totalCaseDistState","setTotalCaseDistState","todayCaseDistState","setTodayCaseDistState","totalCaseDist","todayCaseDist","allData","buildChartDataForTotal","LineGraphForTotal","CovidCountryTracker","InfoBox","total","gutterBottom","casesTypeColors","hex","rgb","half_op","multiplier","sortData","sortedData","prettyPrintStat","stat","Map","center","zoom","TileLayer","url","attribution","Circle","lat","long","fillColor","fillOpacity","sqrt","Popup","flag","showDataOnMap","MapContainer","mapCountries","setMapCountries","setCasesType","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","MyResponsiveChoropleth","domainValue","colorScheme","features","domain","unknownColor","valueFormat","projectionTranslation","projectionRotation","enableGraticule","graticuleLineColor","projectionType","projectionScale","itemOpacity","NivoMapContainer","setDomainValue","setColorScheme","iso3","onCaseTypeChange","dashboardRoutes","Admin","handleNotificationClick","level","floor","random","_notificationSystem","addNotification","data-notify","autoDismiss","getRoutes","render","getBrandText","handleImageClick","handleColorClick","handleHasImage","handleFixedClick","fixedClasses","history","action","scrollTop","scrollingElement","refs","mainPanel","ref","AdminNavbar","ReactDOM","getElementById"],"mappings":"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kBACA,aACA,mBACA,aACA,cACA,eACA,qBACA,iBACA,cACA,cACA,eACA,kBACA,eACA,iBACA,eACA,cACA,YACA,eACA,aACA,qBACA,aACA,cACA,kBACA,uBACA,YACA,qBACA,WACA,iBACA,mBACA,wBACA,cACA,oBACA,eACA,2BACA,cACA,mBACA,oBACA,0BACA,iBACA,mBACA,eACA,0BACA,iBACA,eACA,aACA,gBACA,gBACA,kBACA,cACA,aACA,eACA,eACA,iBACA,cACA,cACA,cACA,eACA,eACA,YACA,cACA,kBACA,aACA,gBACA,eACA,gBACA,gBACA,cACA,eACA,eACA,aACA,gBACA,aACA,eACA,eACA,gBACA,iBACA,sBACA,kBACA,cACA,cACA,cACA,gBACA,aACA,aACA,cACA,cACA,kBACA,cACA,aACA,mBACA,aACA,YACA,cACA,YACA,sBACA,YACA,cACA,aACA,YACA,oBACA,oBACA,oBACA,cACA,qBACA,iBACA,aACA,aACA,mBACA,kBACA,cACA,cACA,aACA,aACA,gBACA,cACA,aACA,YACA,mBACA,aACA,kBACA,uBACA,eACA,aACA,aACA,aACA,gBACA,aACA,aACA,cACA,aACA,eACA,aACA,aACA,aACA,cACA,cACA,eACA,eACA,eACA,cACA,eACA,cACA,gBACA,aACA,eACA,aACA,eACA,aACA,gBACA,gBACA,aACA,aACA,eACA,iBACA,iBACA,iBACA,iBACA,aACA,YACA,gBACA,aACA,eACA,kBACA,eACA,gBACA,gBACA,eACA,cACA,cACA,cACA,aACA,aACA,eACA,aACA,mBACA,gBACA,aACA,aACA,kBACA,gBACA,aACA,gBACA,aACA,aACA,kBACA,eACA,eACA,cACA,iBAwHAC,QA/GY,CACZC,OAAQ,CAAC,MAAO,MAAO,OACvBC,OAAQ,CAAC,GAAI,GAAI,KA8GjBC,UA5Gc,CACdC,MAAO,CAAC,OAAQ,SAAU,eAC1BC,MAAO,CAAC,OAAQ,SAAU,YA2G1BC,UAvGc,CACdL,OAAQ,CACN,SACA,UACA,SACA,SACA,SACA,UACA,SACA,UAEFC,OAAQ,CACN,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpC,CAAC,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACnC,CAAC,GAAI,IAAK,GAAI,IAAK,IAAK,IAAK,IAAK,OA0FpCK,aAvFiB,CACjBC,IAAK,EACLC,KAAM,IACNC,UAAU,EACVnE,OAAQ,QACRoE,MAAO,CACLC,UAAU,GAEZC,YAAY,EACZC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,aAAc,CACZ9D,MAAO,KA2ET+D,gBAxEoB,CACpB,CACE,gCACA,CACEP,MAAO,CACLQ,sBAAuB,SAAUC,GAC/B,OAAOA,EAAM,QAmErBC,YA7DgB,CAChBjB,MAAO,CAAC,OAAQ,QAAS,qBACzBC,MAAO,CAAC,OAAQ,SAAU,YA4D1BiB,QAxDY,CACZrB,OAAQ,CACN,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,OAAQ,CACN,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACxD,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAwC1DqB,WArCe,CACfC,kBAAmB,GACnBb,MAAO,CACLC,UAAU,GAEZrE,OAAQ,SAiCRkF,cA/BkB,CAClB,CACE,gCACA,CACED,kBAAmB,EACnBb,MAAO,CACLQ,sBAAuB,SAAUC,GAC/B,OAAOA,EAAM,QAyBrBM,UAnBc,CACdtB,MAAO,CAAC,gBAAiB,gBACzBC,MAAO,CAAC,OAAQ,a,wCC/jBlB,SAASsB,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BhC,EAAOC,QAAU+B,EACjBA,EAAoBO,GAAK,K,0CCRzBvC,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,szsPCA3CD,EAAOC,QAAU,IAA0B,uC,qoBCc5BuC,E,uKATX,OACE,6BACE,kBAACC,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAKC,WAAS,S,GALSC,aC2ChBC,E,kDAxCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAC3B,EAAKC,MAAQ,CACXC,eAAe,GAJA,E,gEAOCf,IACe,IAA7BgB,KAAKF,MAAMC,eACbC,KAAKC,SAAS,CACZF,eAAe,IAGnBf,EAAEkB,iBACFC,SAASC,gBAAgBC,UAAUC,OAAO,YAC1C,IAAIC,EAAOJ,SAASK,cAAc,OAClCD,EAAKlB,GAAK,YACVkB,EAAKE,QAAU,WACbT,KAAKU,cAAcC,YAAYX,MAC/BG,SAASC,gBAAgBC,UAAUC,OAAO,aAE5CH,SAASS,KAAKC,YAAYN,K,+BAG1B,OACE,kBAACO,EAAA,EAAD,CAAQC,OAAK,GACX,kBAACD,EAAA,EAAOpB,OAAR,KACE,kBAACoB,EAAA,EAAOE,MAAR,KACE,uBAAGC,KAAK,UAAUjB,KAAKL,MAAMuB,YAE/B,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,QAASpB,KAAKJ,uBAE/B,kBAACkB,EAAA,EAAOO,SAAR,KACE,kBAAC,EAAD,Y,GAlCW5B,a,SCaN6B,E,uKAbX,OACE,4BAAQC,UAAU,UAChB,kBAACC,EAAA,EAAD,CAAMT,OAAK,GACT,uBAAGQ,UAAU,wBAAb,SACU,IAAIE,MAAOC,cADrB,IACoC,uBAAGT,KAAK,KAAR,WADpC,kC,GALWxB,a,2BCkFNkC,E,kDA5Eb,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACX/G,MAAOF,OAAO+I,YAHC,E,wDAMPC,GACV,OAAO7B,KAAKL,MAAMmC,SAASC,SAASC,QAAQH,IAAc,EAAI,SAAW,K,yCAGzE7B,KAAKC,SAAS,CAAElH,MAAOF,OAAO+I,e,0CAG9B5B,KAAKiC,mBACLpJ,OAAOqJ,iBAAiB,SAAUlC,KAAKiC,iBAAiBpC,KAAKG,S,+BAErD,IAAD,OACDmC,EAAoB,CACxBC,gBAAiB,OAASpC,KAAKL,MAAM0C,MAAQ,KAE/C,OACE,yBACEhD,GAAG,UACHkC,UAAU,UACVe,aAAYtC,KAAKL,MAAM1F,MACvBsI,aAAYvC,KAAKL,MAAM0C,OAEtBrC,KAAKL,MAAM6C,SACV,yBAAKjB,UAAU,qBAAqBvI,MAAOmJ,IACzC,KACJ,yBAAKZ,UAAU,QACb,uBAAGN,KAAK,IAAIM,UAAU,yBACpB,yBAAKA,UAAU,YACb,yBAAKkB,IAAKC,IAAMC,IAAI,iBAGxB,uBAAG1B,KAAK,IAAIM,UAAU,2BACpB,yBAAKA,UAAU,aACb,0BAAMvI,MAAO,CAAEa,SAAU,IAAzB,cACA,0BAAM0H,UAAU,WAAhB,cAIN,yBAAKA,UAAU,mBACb,wBAAIA,UAAU,OACXvB,KAAKF,MAAM/G,OAAS,IAAM,kBAAC,EAAD,MAAuB,KACjDiH,KAAKL,MAAMiD,OAAOC,KAAI,SAACC,EAAMC,GAC5B,OAAKD,EAAKE,SAoBH,KAlBH,wBACEzB,UACEuB,EAAKG,QACD,oBACA,EAAKC,YAAYJ,EAAKK,OAASL,EAAKM,MAE1CL,IAAKA,GAEL,kBAAC,IAAD,CACEM,GAAIP,EAAKK,OAASL,EAAKM,KACvB7B,UAAU,WACV+B,gBAAgB,UAEhB,uBAAG/B,UAAWuB,EAAKS,OACnB,2BAAIT,EAAKU,kB,GAhET/D,a,kECHIA,Y,mCC4CXgE,E,kDA7Bb,WAAY9D,GAAQ,IAAD,8BACjB,cAAMA,IACDG,MAAQ,CACX4D,aAAY/D,EAAMgE,WAEpB,EAAKC,YAAc,EAAKA,YAAY/D,KAAjB,gBALF,E,0DAQjBG,KAAKC,SAAS,CAAEyD,YAAa1D,KAAKF,MAAM4D,e,+BAEhC,IAAD,EAC+C1D,KAAKL,MAAxCkE,GADZ,EACCF,UADD,EACYE,QAAQC,EADpB,EACoBA,MAAOC,EAD3B,EAC2BA,OAAWC,EADtC,uDAEDC,OACOC,IAAXH,EAAuB,2BAA6B,WACtD,OACE,yBAAKxC,UAAW0C,GACd,yCACE5E,GAAIwE,EACJM,KAAK,WACLC,SAAUpE,KAAK4D,YACfS,QAASrE,KAAKF,MAAM4D,YAChBM,IAEN,2BAAOM,QAAST,GAASC,Q,GAxBJrE,a,2BC2Bd8E,E,uKAvBH,IAAD,EACoDvE,KAAKL,MAAxD6E,EADD,EACCA,KAAMC,EADP,EACOA,OAAQjF,EADf,EACeA,UAAWkF,EAD1B,EAC0BA,MAAOC,EADjC,EACiCA,MAAUX,EAD3C,6DAGDY,EAAaC,IAAG,CACpB,WAAYL,EACZ,aAAcC,EACd,aAAcjF,EACd,YAAamF,EACb,YAAaD,IAGf,OAAO,kBAACI,EAAA,EAAD,eAAQvD,UAAWqD,GAAgBZ,Q,GAZnBvE,a,GCjBAA,Y,0GC8DZsF,EA3DG,SAAC,GAAD,IAAMpF,EAAN,2BAChB,yBAAK4B,UAAW,QAAU5B,EAAMqF,MAAQ,cAAgB,KACtD,yBAAKzD,UAAW,UAAY5B,EAAMsF,QAAU,eAAiB,KAC3D,yBAAK1D,UAAU,gBACM,UAAlB5B,EAAMuF,QACL,yBACElM,MAAO,CAAEU,OAAQ,GAAIX,MAAO,GAAIM,QAAS,EAAGoB,OAAQ,GACpDgI,IAAK0C,MAEa,UAAlBxF,EAAMuF,QACR,yBACElM,MAAO,CAAEU,OAAQ,GAAIX,MAAO,GAAIM,QAAS,EAAGoB,OAAQ,GACpDgI,IAAK2C,MAEa,QAAlBzF,EAAMuF,QACR,yBACElM,MAAO,CAAEU,OAAQ,GAAIX,MAAO,GAAIM,QAAS,EAAGoB,OAAQ,GACpDgI,IAAK4C,MAEa,cAAlB1F,EAAMuF,QACR,yBACElM,MAAO,CAAEU,OAAQ,GAAIX,MAAO,GAAIM,QAAS,EAAGoB,OAAQ,GACpDgI,IAAK6C,MAEa,WAAlB3F,EAAMuF,QACR,yBACElM,MAAO,CAAEU,OAAQ,GAAIX,MAAO,GAAIM,QAAS,EAAGoB,OAAQ,GACpDgI,IAAK8C,MAEL,KAEJ,6BACE,wBAAIhE,UAAU,SAAS5B,EAAM6F,OAC7B,uBAAGjE,UAAU,YAAY5B,EAAM8F,aAIrC,yBACElE,UACE,WACC5B,EAAM+F,WAAa,aAAe,KAClC/F,EAAMgG,iBAAmB,oBAAsB,KAC/ChG,EAAMiG,kBAAoB,oBAAsB,KAChDjG,EAAMkG,eAAiB,iBAAmB,KAG5ClG,EAAMmG,QAEP,yBAAKvE,UAAU,UACZ5B,EAAMoG,OACS,MAAfpG,EAAMqG,MAAgB,6BAAS,GAChC,yBAAKzE,UAAU,SACb,uBAAGA,UAAW5B,EAAMsG,YADtB,IACqCtG,EAAMqG,W,uDCvD7CE,I,OAAU,CACdH,OAAQ,CACNpM,SAAS,GAEXwM,SAAU,CACRC,MAAO,CACLC,OAAQ,IAGZC,qBAAqB,EACrBC,SAAU,CACRC,KAAM,QACNC,WAAW,EACXC,UAAW,CACT5C,MAAO,SAAU6C,EAAaC,GAC5B,OAAOC,KAAQF,EAAYpI,OAAOuI,OAAO,WAI/CC,OAAQ,CACNC,MAAO,CACL,CACE7C,KAAM,OACN8C,KAAM,CACJH,OAAQ,WACRI,cAAe,QAIrBC,MAAO,CACL,CACEC,UAAW,CACTzN,SAAS,GAEX0N,MAAO,CAELC,SAAU,SAAU/I,EAAOgJ,EAAOC,GAChC,OAAOX,KAAQtI,GAAOuI,OAAO,aAQnCW,GAAiB,SAACb,GACtB,IAAIc,EAAa,GACjB,IAAK,IAAIC,KAAQf,EAAKgB,MAAO,CAC3B,IAAIC,EAAe,CACjBC,EAAGH,EACHI,EAAInB,EAAI,OAAWe,GAAQf,EAAI,UAAce,GAAS,KAExDD,EAAWM,KAAKH,GAGlB,OADAI,QAAQC,IAAIR,GACLA,GAGHS,GAAiB,SAACvB,EAAMwB,GAC5B,IACIC,EADAC,EAAY,GAEhB,IAAK,IAAIX,KAAQf,EAAKgB,MAAO,CAC3B,GAAIS,EAAe,CACjB,IAAIR,EAAe,CACjBC,EAAGH,EACHI,EAAGnB,EAAKwB,GAAWT,GAAQU,GAE7BC,EAAUN,KAAKH,GAEjBQ,EAAgBzB,EAAKwB,GAAWT,GAElC,OAAOW,GAgEMC,OA7Df,YAAuD,IAAlCH,EAAiC,EAAjCA,UAAWI,EAAsB,EAAtBA,SAAa7I,EAAS,0CAC5B8I,mBAAS,IADmB,mBAC7C7B,EAD6C,KACvC8B,EADuC,KAyCpD,OAvCAT,QAAQC,IAAIvI,GACZgJ,qBAAU,WACJhJ,EAAMiJ,UACO,uCAAG,sBAAAC,EAAA,sEACVC,MAAM,0DAAD,OACiDN,IAEzDO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACnC,GACL,IAAI0B,EAAYb,GAAeb,GAC/B8B,EAAQJ,GACRL,QAAQC,IAAII,MAVA,2CAAH,oDAefY,GAEe,uCAAG,sBAAAL,EAAA,sEACVC,MAAM,0DAAD,OACiDN,IAEzDO,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACnC,GACL,IAAI0B,EAAYH,GAAevB,EAAMwB,GACrCM,EAAQJ,GACRL,QAAQC,IAAII,MAVA,2CAAH,oDAefY,KAED,CAACd,EAAWI,IAGb,yBAAKjH,UAAW5B,EAAM4B,YACf,OAAJqF,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,QAAS,GACd,kBAAC,QAAD,CACEvC,KAAM,CACJwC,SAAU,CACR,CACE1N,gBAAgB,GAAD,OAAKiE,EAAM0J,gBAC1BC,YAAY,GAAD,OAAK3J,EAAM4J,gBACtB3C,KAAMA,KAIZV,QAASA,O,uCCAJsD,GA7HI,WAAO,IAAD,EACSf,mBAAS,OADlB,mBAChBD,EADgB,KACNiB,EADM,KAQvB,OACE,6BACE,yBAAKlI,UAAU,qBACb,0BAAMA,UAAU,oBAAhB,sBACA,kBAACmI,GAAA,EAAD,CAAanI,UAAU,uBACrB,kBAACoI,GAAA,EAAD,CACEC,QAAQ,WACRrL,MAAOiK,EACPpE,SAbc,SAACpF,GACvB,IAAM6K,EAAkB7K,EAAE8K,OAAOvL,MACjCkL,EAAYI,IAYJ7Q,MAAO,CAAE+Q,UAAW,SAEpB,kBAACC,GAAA,EAAD,CAAUzL,MAAM,MAAhB,MACA,kBAACyL,GAAA,EAAD,CAAUzL,MAAM,MAAhB,MACA,kBAACyL,GAAA,EAAD,CAAUzL,MAAM,MAAhB,MACA,kBAACyL,GAAA,EAAD,CAAUzL,MAAM,OAAhB,OACA,kBAACyL,GAAA,EAAD,CAAUzL,MAAM,OAAhB,OACA,kBAACyL,GAAA,EAAD,CAAUzL,MAAM,OAAhB,OACA,kBAACyL,GAAA,EAAD,CAAUzL,MAAM,OAAhB,OACA,kBAACyL,GAAA,EAAD,CAAUzL,MAAM,OAAhB,OACA,kBAACyL,GAAA,EAAD,CAAUzL,MAAM,OAAhB,UAKN,kBAAC0L,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CACElE,UAAU,gBACV5G,GAAG,aACHmG,MAAM,oBACNC,SAAS,gBACTO,MAAM,yBACNd,QAAQ,QACRY,QACE,yBAAKvE,UAAU,YACb,kBAAC,GAAD,CACEA,UAAU,aACV6G,UAAU,QACViB,eAAe,yBACfE,eAAe,UACff,SAAUA,QAMpB,kBAAC0B,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CACElE,UAAU,gBACV5G,GAAG,aACHmG,MAAM,eACNC,SAAS,iBACTO,MAAM,yBACNd,QAAQ,QACRY,QACE,yBAAKvE,UAAU,YACb,kBAAC,GAAD,CACEA,UAAU,aACV6G,UAAU,SACViB,eAAe,yBACfE,eAAe,UACff,SAAUA,SAOtB,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CACElE,UAAU,gBACV5G,GAAG,aACHmG,MAAM,2BACNC,SAAS,uBACTO,MAAM,yBACNd,QAAQ,MACRY,QACE,yBAAKvE,UAAU,YACb,kBAAC,GAAD,CACEA,UAAU,aACV6G,UAAU,YACViB,eAAe,0BACfE,eAAe,UACff,SAAUA,QAMpB,kBAAC0B,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,EAAD,CACElE,UAAU,gBACV5G,GAAG,aACHmG,MAAM,aACNC,SAAS,gCACTO,MAAM,yBACNd,QAAQ,YACRY,QACE,yBAAKvE,UAAU,YACb,kBAAC,GAAD,CACEA,UAAU,aACV6G,UAAU,QACVQ,WAAS,EACTS,eAAe,0BACfE,eAAe,UACff,SAAUA,W,6BCtEb4B,GA/CO,SAAC,GAAD,IACpBC,EADoB,EACpBA,OACAC,EAFoB,EAEpBA,OACAC,EAHoB,EAGpBA,OACA/E,EAJoB,EAIpBA,MACAgF,EALoB,EAKpBA,YACAC,EANoB,EAMpBA,YACAC,EAPoB,EAOpBA,YACAC,EARoB,EAQpBA,SACAC,EAToB,EASpBA,YACAC,EAVoB,EAUpBA,YACAC,EAXoB,EAWpBA,MACAC,EAZoB,EAYpBA,QAZoB,8JAepB,kBAAC,KAAD,CAAMxJ,UAAU,eACd,kBAACyJ,GAAA,EAAD,KACE,yBAAKzJ,UAAU,kBACb,yBAAKA,UAAU,gBAAgBkB,IAAKkI,EAAUhI,IAAI,SAClD,wBAAIpB,UAAU,eAAevI,MAAO,CAAEkD,UAAW,IAC9CsJ,IAGL,6BACA,yBAAKjE,UAAU,gBAAgB8I,GAC/B,yBAAK9I,UAAU,cAAciJ,GAE7B,yBAAKjJ,UAAU,QACb,6BACE,0BAAMA,UAAS,iBAAYwJ,EAAU,QAAU,KAAOT,GACrDM,EAAc,0BAAMrJ,UAAU,WAAhB,IAA4BqJ,EAA5B,KAAmD,IAEpE,yBAAKrJ,UAAU,cAAckJ,IAG/B,yBAAKlJ,UAAU,SACb,6BACE,0BAAMA,UAAS,iBAAYuJ,EAAQ,MAAQ,KAAOP,EAAlD,KACCM,EAAc,0BAAMtJ,UAAU,WAAhB,IAA4BsJ,EAA5B,KAAmD,IAGpE,yBAAKtJ,UAAU,cAAcmJ,OCsDtBO,GA/FK,WAAO,IAAD,EACcxC,mBAAS,IADvB,mBACjByC,EADiB,KACJC,EADI,KAGxBxC,qBAAU,WACRG,MAAM,sCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACLuE,EAAevE,QAElB,IAEH,IAAMwE,EACJC,SAASH,EAAYI,QAAUD,SAASH,EAAYK,UAChDC,EACJH,SAASH,EAAYtD,OAASyD,SAASH,EAAYI,QAE/CG,EAAiBJ,SAASD,GAAaC,SAASH,EAAYI,QAC5DI,EACJL,SAASH,EAAYS,WAAaN,SAASG,GACvCI,EACJP,SAASH,EAAYW,QAAUR,SAASG,GAEpCM,EACJT,SAASH,EAAYK,UAAYF,SAASH,EAAYI,QACxDrD,QAAQC,IAAI4D,GAKZ,OACE,kBAAC7B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6B,GAAI,EAAG5B,GAAI,EAAG6B,GAAI,EAAGC,GAAI,IAC5B,kBAAC,GAAD,CACEzG,MAAM,qBACN6E,OAAQxD,KAAQqE,EAAYI,QAAQxE,OAAO,OAC3C0D,YAAY,0BACZF,OAAQzD,KAAQuE,GAAWtE,OAAO,OAClC2D,YAAY,oBACZF,OAAQ1D,KAAQqE,EAAYK,UAAUzE,OAAO,OAC7C4D,YAAY,mBACZC,SAAS,oCACTC,YAAa/D,KAAQ4E,GAAgB3E,OAAO,MAC5C+D,YAAahE,KAAQiF,GAAoBhF,OAAO,MAChDgE,OAAK,EACLC,SAAO,KAGX,kBAACb,EAAA,EAAD,CAAK6B,GAAI,EAAG5B,GAAI,EAAG6B,GAAI,EAAGC,GAAI,IAC5B,kBAAC,GAAD,CACEzG,MAAM,qBACN6E,OAAQxD,KAAQ2E,GAAkB1E,OAAO,OACzC0D,YAAY,wBACZF,OAAQzD,KAAQqE,EAAYS,WAAW7E,OAAO,OAC9C2D,YAAY,YACZF,OAAQ1D,KAAQqE,EAAYW,QAAQ/E,OAAO,OAC3C4D,YAAY,SACZC,SAAS,yCACTC,YAAa/D,KAAQ6E,GAAqB5E,OAAO,MACjD+D,YAAahE,KAAQ+E,GAAkB9E,OAAO,MAC9CgE,OAAK,EACLC,SAAO,KAGX,kBAACb,EAAA,EAAD,CAAK6B,GAAI,EAAG5B,GAAI,EAAG6B,GAAI,EAAGC,GAAI,IAC5B,kBAAC,GAAD,CACEzG,MAAM,cACN6E,OAAQxD,KAAQqE,EAAYgB,YAAYpF,OAAO,OAC/C0D,YAAY,eACZF,OAAQzD,KAAQqE,EAAYiB,gBAAgBrF,OAAO,OACnD2D,YAAY,kBACZF,OAAQ1D,KAAQqE,EAAYkB,aAAatF,OAAO,OAChD4D,YAAY,SACZC,SAAS,yCACTG,OAAK,EACLC,SAAO,KAGX,kBAACb,EAAA,EAAD,CAAK6B,GAAI,EAAG5B,GAAI,EAAG6B,GAAI,EAAGC,GAAI,IAC5B,kBAAC,GAAD,CACEzG,MAAM,sBACN6E,OAAQxD,KAAQqE,EAAYmB,oBAAoBvF,OAAO,OACvD0D,YAAY,aACZF,OAAQzD,KAAQqE,EAAYoB,wBAAwBxF,OAAO,OAC3D2D,YAAY,iBACZF,OAAQ1D,KAAQqE,EAAYqB,qBAAqBzF,OAAO,OACxD4D,YAAY,cACZC,SAAS,uCACTG,OAAK,EACLC,SAAO,O,uBCvFCyB,cAAW,SAACC,GAAD,MAAY,CACrCC,UAAW,CACT7S,SAAU,Q,+ECuBE2S,aAAW,CAC3BG,KAAM,CACJ5T,MAAO,QAET6T,UAAW,CACT7C,UAAW,KAEb2C,UAAW,CACP7S,SAAU,M,sICGhB,SAASgT,GAAqBhE,EAAGiE,EAAGC,GAClC,OAAID,EAAEC,GAAWlE,EAAEkE,IACT,EAEND,EAAEC,GAAWlE,EAAEkE,GACV,EAEF,EAmBT,IAAMC,GAAY,CAChB,CAAE3N,GAAI,UAAW4N,SAAS,EAAOC,gBAAgB,EAAOpJ,MAAO,WAC/D,CACEzE,GAAI,aACJ4N,SAAS,EACTC,gBAAgB,EAChBpJ,MAAO,aAET,CAAEzE,GAAI,QAAS4N,SAAS,EAAMC,gBAAgB,EAAOpJ,MAAO,eAC5D,CAAEzE,GAAI,SAAU4N,SAAS,EAAMC,gBAAgB,EAAOpJ,MAAO,gBAC7D,CACEzE,GAAI,cACJ4N,SAAS,EACTC,gBAAgB,EAChBpJ,MAAO,cAET,CACEzE,GAAI,iBACJ4N,SAAS,EACTC,gBAAgB,EAChBpJ,MAAO,iBAET,CACEzE,GAAI,YACJ4N,SAAS,EACTC,gBAAgB,EAChBpJ,MAAO,mBAET,CAAEzE,GAAI,SAAU4N,SAAS,EAAMC,gBAAgB,EAAOpJ,MAAO,UAC7D,CAAEzE,GAAI,WAAY4N,SAAS,EAAMC,gBAAgB,EAAOpJ,MAAO,aAGjE,SAASqJ,GAAkBxN,GAAQ,IAE/BsE,EAOEtE,EAPFsE,QAEAmJ,GAKEzN,EANF0N,iBAME1N,EALFyN,OACAL,EAIEpN,EAJFoN,QAGAO,GACE3N,EAHF4N,YAGE5N,EAFF6N,SAEE7N,EADF2N,eAMF,OACE,kBAACG,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACGV,GAAUnK,KAAI,SAAC8K,GAAD,OACb,kBAACC,GAAA,EAAD,CACE7K,IAAK4K,EAAStO,GACdwO,MAAO,SACPxU,QAASsU,EAAST,eAAiB,OAAS,UAC5CY,cAAef,IAAYY,EAAStO,IAAK+N,EACzCpU,MAAO,CAAEa,SAAU,GAAII,MAAO,OAAQD,WAAY,SAElD,kBAAC+T,GAAA,EAAD,CACEzC,OAAQyB,IAAYY,EAAStO,GAC7B2O,UAAWjB,IAAYY,EAAStO,GAAK+N,EAAQ,MAC7ChM,SAlBe6M,EAkBYN,EAAStO,GAlBR,SAAC6O,GACvCZ,EAAcY,EAAOD,MAmBVN,EAAS7J,MACTiJ,IAAYY,EAAStO,GACpB,0BAAMkC,UAAW0C,EAAQkK,gBACZ,SAAVf,EAAmB,oBAAsB,oBAE1C,OAzBU,IAACa,OA4C7B,IAAMG,GAAmB5B,cAAW,SAACC,GAAD,MAAY,CAC9CE,KAAM,CACJ0B,YAAa5B,EAAM6B,QAAQ,GAC3BC,aAAc9B,EAAM6B,QAAQ,IAE9BE,UACyB,UAAvB/B,EAAMgC,QAAQtK,KACV,CACElK,MAAOwS,EAAMgC,QAAQC,UAAUC,KAC/BjT,gBAAiBkT,aAAQnC,EAAMgC,QAAQC,UAAUG,MAAO,MAE1D,CACE5U,MAAOwS,EAAMgC,QAAQK,KAAKC,QAC1BrT,gBAAiB+Q,EAAMgC,QAAQC,UAAUM,MAEjDxJ,MAAO,CACLyJ,KAAM,WACNpV,SAAU,GACVG,WAAY,YAIVkV,GAAuB,SAACvP,GAC5B,IAAMsE,EAAUmK,KACRb,EAAgB5N,EAAhB4N,YAER,OACE,kBAAC4B,GAAA,EAAD,CACE5N,UAAW6N,aAAKnL,EAAQ0I,KAAT,eACZ1I,EAAQuK,UAAYjB,EAAc,KAGpCA,EAAc,EACb,kBAAC8B,GAAA,EAAD,CACE9N,UAAW0C,EAAQuB,MACnBvL,MAAM,UACN2P,QAAQ,YACR0F,UAAU,OAET/B,EANH,aASA,kBAAC8B,GAAA,EAAD,CACE9N,UAAW0C,EAAQuB,MACnBoE,QAAQ,KACRvK,GAAG,aACHiQ,UAAU,OAJZ,wCAUD/B,EAAc,EACb,kBAAC,KAAD,CAAS/H,MAAM,UACb,kBAAC+J,GAAA,EAAD,CAAYC,aAAW,UACrB,kBAAC,KAAD,QAIJ,kBAAC,KAAD,CAAShK,MAAM,eACb,kBAAC+J,GAAA,EAAD,CAAYC,aAAW,eACrB,kBAAC,KAAD,UAYNC,GAAYjD,cAAW,SAACC,GAAD,MAAY,CACvCE,KAAM,CACJ5T,MAAO,QAET2W,MAAO,CACL3W,MAAO,OACP4W,aAAclD,EAAM6B,QAAQ,IAE9BsB,MAAO,CACLC,SAAU,KAEZ1B,eAAgB,CACdvU,OAAQ,EACRkW,KAAM,gBACNpW,OAAQ,EACRe,QAAS,EACTsV,SAAU,SACV1W,QAAS,EACTD,SAAU,WACVe,IAAK,GACLpB,MAAO,GAET2T,UAAW,CACT7S,SAAU,GACVI,MAAO,OACPyC,UAAW,YAIA,SAASsT,GAAT,GAAkC,IAATC,EAAQ,EAARA,KAChChM,EAAUwL,KAD8B,EAEpBS,IAAMzH,SAAS,OAFK,mBAEvC2E,EAFuC,KAEhC+C,EAFgC,OAGhBD,IAAMzH,SAAS,YAHC,mBAGvCsE,EAHuC,KAG9BqD,EAH8B,OAIdF,IAAMzH,SAAS,IAJD,mBAIvC4H,EAJuC,aAKtBH,IAAMzH,SAAS,IALO,mBAKvC6H,EALuC,KAKjCC,EALiC,OAMpBL,IAAMzH,UAAS,GANK,mBAMvC+H,EANuC,KAMhCC,EANgC,OAORP,IAAMzH,SAAS,KAPP,mBAOvCiI,EAPuC,KAO1BC,EAP0B,KA8BxCC,EACJF,EAAcG,KAAKC,IAAIJ,EAAaT,EAAK9G,OAASmH,EAAOI,GAE3D,OACE,yBAAKnP,UAAW0C,EAAQ0I,MACtB,kBAACoE,GAAA,EAAD,CAAOxP,UAAW0C,EAAQyL,OACxB,kBAAC,GAAD,CAAsBnC,YAAa8C,EAASlH,SAC5C,kBAAC,KAAD,KACE,kBAAC,KAAD,CACE5H,UAAW0C,EAAQ2L,MACnBoB,kBAAgB,aAChBC,KAAMT,EAAQ,QAAU,SACxBhB,aAAW,kBAEX,kBAACrC,GAAD,CACElJ,QAASA,EACTsJ,YAAa8C,EAASlH,OACtBiE,MAAOA,EACPL,QAASA,EACTO,cAxCc,SAACY,EAAOD,GAEhCkC,EADcpD,IAAYkB,GAAsB,QAAVb,EACrB,OAAS,OAC1BgD,EAAWnC,IAsCDT,SAAUyC,EAAK9G,SAEjB,kBAAC+H,GAAA,EAAD,KA1PZ,SAAoBC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMtO,KAAI,SAACyO,EAAI/J,GAAL,MAAe,CAAC+J,EAAI/J,MAMrD,OALA8J,EAAeE,MAAK,SAAC1I,EAAGiE,GACtB,IAAMM,EAAQgE,EAAWvI,EAAE,GAAIiE,EAAE,IACjC,OAAc,IAAVM,EAAoBA,EACjBvE,EAAE,GAAKiE,EAAE,MAEXuE,EAAexO,KAAI,SAACyO,GAAD,OAAQA,EAAG,MAoPxBE,CAAWvB,EAjQ1B,SAAuB7C,EAAOL,GAC5B,MAAiB,SAAVK,EACH,SAACvE,EAAGiE,GAAJ,OAAUD,GAAqBhE,EAAGiE,EAAGC,IACrC,SAAClE,EAAGiE,GAAJ,OAAWD,GAAqBhE,EAAGiE,EAAGC,IA8PZ0E,CAAcrE,EAAOL,IACpC2E,MAAMpB,EAAOI,EAAaJ,EAAOI,EAAcA,GAC/C7N,KAAI,SAAC8O,EAAKpK,GACT,IA5BI/D,EA4BEoO,GA5BFpO,EA4B8BmO,EAAInO,MA5BG,IAA5B6M,EAASrO,QAAQwB,IA6BjB,kCAA8B+D,GAE3C,OACE,kBAACmG,GAAA,EAAD,CACEmE,OAAK,EACLC,KAAK,WACLC,eAAcH,EACdI,UAAW,EACXjP,IAAK4O,EAAInO,KACT6M,SAAUuB,GAEV,kBAAChE,GAAA,EAAD,CAAWrM,UAAW0C,EAAQyI,UAAWmB,MAAM,QAC5C8D,EAAIM,SAEP,kBAACrE,GAAA,EAAD,CAAWrM,UAAW0C,EAAQyI,UAAWmB,MAAM,QAC5C8D,EAAIzF,YAEP,kBAAC0B,GAAA,EAAD,CAAWrM,UAAW0C,EAAQyI,UAAWmB,MAAM,QAC5C8D,EAAI/J,OAEP,kBAACgG,GAAA,EAAD,CAAWrM,UAAW0C,EAAQyI,UAAWmB,MAAM,QAC5C8D,EAAI9F,QAEP,kBAAC+B,GAAA,EAAD,CAAWrM,UAAW0C,EAAQyI,UAAWmB,MAAM,QAC5C8D,EAAIvF,aAEP,kBAACwB,GAAA,EAAD,CAAWrM,UAAW0C,EAAQyI,UAAWmB,MAAM,QAC5C8D,EAAIxF,gBAEP,kBAACyB,GAAA,EAAD,CAAWrM,UAAW0C,EAAQyI,UAAWmB,MAAM,QAC5C8D,EAAIhG,WAEP,kBAACiC,GAAA,EAAD,CAAWrM,UAAW0C,EAAQyI,UAAWmB,MAAM,QAC5C8D,EAAIrG,QAEP,kBAACsC,GAAA,EAAD,CAAWrM,UAAW0C,EAAQyI,UAAWmB,MAAM,QAC5C8D,EAAIpG,cAKdqF,EAAY,GACX,kBAAClD,GAAA,EAAD,CAAU1U,MAAO,CAAEU,QAAS8W,EAAQ,GAAK,IAAMI,IAC7C,kBAAChD,GAAA,EAAD,CAAWsE,QAAS,QAM9B,kBAACC,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACzC9C,UAAU,MACV+C,MAAOpC,EAAK9G,OACZuH,YAAaA,EACbJ,KAAMA,EACNgC,aAjGiB,SAACpE,EAAOqE,GAC/BhC,EAAQgC,IAiGFC,oBA9FwB,SAACtE,GAC/ByC,EAAetF,SAAS6C,EAAMpE,OAAOvL,MAAO,KAC5CgS,EAAQ,OA+FN,kBAACkC,GAAA,EAAD,CACEC,QAAS,kBAACC,GAAA,EAAD,CAAQtO,QAASmM,EAAOpM,SA7Fb,SAAC8J,GACzBuC,EAASvC,EAAMpE,OAAOzF,YA6FlBP,MAAM,mB,WC/WR8O,GAAU,CACd,CAAEvT,GAAI,UAAWyE,MAAO,UAAW+L,SAAU,IAAKnT,UAAW,SAC7D,CAAE2C,GAAI,aAAcyE,MAAO,YAAa+L,SAAU,KAClD,CAAExQ,GAAI,QAASyE,MAAO,cAAe+L,SAAU,KAC/C,CAAExQ,GAAI,SAAUyE,MAAO,eAAgB+L,SAAU,KACjD,CAAExQ,GAAI,cAAeyE,MAAO,aAAc+L,SAAU,KACpD,CAAExQ,GAAI,iBAAkByE,MAAO,gBAAiB+L,SAAU,KAC1D,CAAExQ,GAAI,YAAayE,MAAO,kBAAmB+L,SAAU,KACvD,CAAExQ,GAAI,SAAUyE,MAAO,SAAU+L,SAAU,KAC3C,CAAExQ,GAAI,WAAYyE,MAAO,WAAY+L,SAAU,MA2BjD,IA2CegD,GA3CQ,WAAO,IAAD,EACH3C,IAAMzH,SAAS,IADZ,mBACpBwH,EADoB,KACd6C,EADc,OAEa5C,IAAMzH,SAAS,IAF5B,mBAEpBsK,EAFoB,KAENC,EAFM,KA8B3B,OA1BArK,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sDACvBC,MAAM,4CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAGL,GAFAf,QAAQC,IAAI6K,GACZ9K,QAAQC,IAAIc,EAAS,GAAGiJ,SACpBc,EAAc,CAChB,IAAME,EAAejK,EAASkK,QAAO,SAACC,GAAD,OACnCA,EAAIlB,QAAQmB,cAAcC,SAASN,MAErC9K,QAAQC,IAAI+K,GACZH,EAAQG,QAERH,EAAQ9J,GAEVf,QAAQC,IAAI6K,GACZ9K,QAAQC,IAAI+H,MAhBO,2CAAH,qDAoBtBqD,KACC,CAACP,IAEJ9K,QAAQC,IAAI+H,GAGV,yBAAK1O,UAAU,aAAavI,MAAO,CAAE+Q,UAAW,IAAKgG,SAAU,WAC7D,2BACE5L,KAAK,SACLoP,YAAY,iBACZnP,SAAU,SAACpF,GAAD,OAAOgU,EAAgBhU,EAAE8K,OAAOvL,QAC1CgD,UAAU,kBAEZ,kBAACyO,GAAD,CAAe4C,QAASA,GAAS3C,KAAMA,M,UCkC9BuD,GA5GS,SAAC,GAAc,IAAZ5M,EAAW,EAAXA,KAEzB,OADAqB,QAAQC,IAAItB,GAEV,kBAAC,KAAD,CACEA,KAAMA,EACNnM,OAAQ,CAAEN,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAChDoZ,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,OAAQ,CAAEC,OAAQ,QAClBC,YAAa,EACbxK,YAAa,CAAEyK,KAAM,QAASC,UAAW,CAAC,CAAC,SAAU,MACrDC,sBAAuB,GACvBC,wBAAyB,EACzBC,sBAAsB,UACtBC,uBAAwB,EACxBC,+BAAgC,GAChCC,iCAAkC,GAClCC,4BAA6B,EAC7BC,sBAAuB,CAAET,KAAM,SAC/BU,sBAAuB,GACvBC,sBAAsB,UACtBC,SAAS,EACTC,gBAAiB,GACjBC,cAAe,GACfC,KAAM,CACJ,CACEzV,GAAI,OACJ8E,KAAM,cACNvH,WAAY,UACZ3C,MAAO,2BACPgX,KAAM,EACN5X,QAAS,EACT0b,SAAS,GAEX,CACE1V,GAAI,QACJ8E,KAAM,eACNvH,WAAY,UACZ3C,MAAO,2BACP+a,UAAW,GACXC,UAAW,EACX3G,QAAS,KAGb9J,KAAM,CACJ,CACE0Q,MAAO,CACL7V,GAAI,iBAENA,GAAI,QAEN,CACE6V,MAAO,CACL7V,GAAI,iBAENA,GAAI,QAEN,CACE6V,MAAO,CACL7V,GAAI,QAENA,GAAI,QAEN,CACE6V,MAAO,CACL7V,GAAI,UAENA,GAAI,QAEN,CACE6V,MAAO,CACL7V,GAAI,UAENA,GAAI,SAEN,CACE6V,MAAO,CACL7V,GAAI,qBAENA,GAAI,UAGR8V,QAAS,CACP,CACEC,OAAQ,cACRpH,UAAW,SACXqH,WAAY,GACZC,YAAa,GACbC,UAAW,IACXC,WAAY,GACZC,cAAe,OACfC,WAAY,GACZC,YAAa,SACbC,QAAS,CACP,CACEC,GAAI,QACJ7c,MAAO,CACLyc,cAAe,eChDhBK,I,OApDW,WAAO,IAAD,EACMrN,mBAAS,IADf,mBACvBsN,EADuB,KACXC,EADW,KAGxBC,EAAkB,CACtB,gBAAiB,qBACjB,gBAAiB,qBACjBC,KAAM,iBACNC,OAAQ,qBACRC,OAAQ,qBACR,oBAAqB,sBAsBvB,OAnBAzN,qBAAU,WAENG,MAAM,6CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,IAAMmP,EAAanP,EAAK/D,KAAI,SAACwT,GAAD,MAAW,CACrChX,GAAIgX,EAAKC,UACTxS,MAAOuS,EAAKC,UACZ/X,MAAO8X,EAAKzO,MACZ3N,MAAOgc,EAAgBI,EAAI,eAG7BL,EAAcD,QAKnB,IAGD,kBAAC,KAAD,CAAMxU,UAAU,SACd,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEkB,IAAI,qCACJE,IAAI,OACJpB,UAAU,eAGd,6BACE,wBAAIA,UAAU,cAAd,8BAGJ,yBAAKA,UAAU,aAAavI,MAAO,CAAEU,OAAQ,MAC3C,kBAAC,GAAD,CAAiBkN,KAAMmP,QCuChBvC,GAnFS,SAAC,GAAc,IAAZ5M,EAAW,EAAXA,KAEzB,OADAqB,QAAQC,IAAItB,GAEV,kBAAC,KAAD,CACEA,KAAMA,EACNnM,OAAQ,CAAEN,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAChDoZ,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,OAAQ,CAAEC,OAAQ,QAClBC,YAAa,EACbxK,YAAa,CAAEyK,KAAM,QAASC,UAAW,CAAC,CAAC,SAAU,MACrDC,sBAAuB,GACvBC,wBAAyB,EACzBC,sBAAsB,UACtBC,uBAAwB,EACxBC,+BAAgC,GAChCC,iCAAkC,GAClCC,4BAA6B,EAC7BC,sBAAuB,CAAET,KAAM,SAC/BU,sBAAuB,GACvBC,sBAAsB,UACtBC,SAAS,EACTC,gBAAiB,GACjBC,cAAe,GACfC,KAAM,CACJ,CACEzV,GAAI,OACJ8E,KAAM,cACNvH,WAAY,UACZ3C,MAAO,2BACPgX,KAAM,EACN5X,QAAS,EACT0b,SAAS,GAEX,CACE1V,GAAI,QACJ8E,KAAM,eACNvH,WAAY,UACZ3C,MAAO,2BACP+a,UAAW,GACXC,UAAW,EACX3G,QAAS,KAGb9J,KAAM,CACJ,CACE0Q,MAAO,CACL7V,GAAI,eAENA,GAAI,QAEN,CACE6V,MAAO,CACL7V,GAAI,YAENA,GAAI,UAGR8V,QAAS,CACP,CACEC,OAAQ,cACRpH,UAAW,MACXqH,WAAY,GACZE,UAAW,IACXC,WAAY,GACZC,cAAe,OACfC,WAAY,GACZC,YAAa,SACbC,QAAS,CACP,CACEC,GAAI,QACJ7c,MAAO,CACLyc,cAAe,eCzBhBc,I,OAlDY,WAAO,IAAD,EACmB9N,mBAAS,IAD5B,mBACxB+N,EADwB,KACLC,EADK,KA6B/B,OA1BA9N,qBAAU,WAENG,MAAM,sCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,IAAM8P,EAAe,CACnB,CACErX,GAAI,WACJyE,MAAO,WACPvF,MAAOqI,EAAK2E,SACZtR,MAAO,qBAET,CACEoF,GAAI,cACJyE,MAAO,eACPvF,MAAOqI,EAAK0E,OAAS1E,EAAK2E,SAC1BtR,MAAO,uBAGXwc,EAAqBC,QAK1B,IAGD,kBAAC,KAAD,CAAMnV,UAAU,SACd,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEkB,IAAI,mCACJE,IAAI,OACJpB,UAAU,gBAGd,6BACE,wBAAIA,UAAU,cAAd,iCAGJ,yBAAKA,UAAU,aAAavI,MAAO,CAAEU,OAAQ,MAC3C,kBAAC,GAAD,CAAiBkN,KAAM4P,QCWhBG,G,2KArCA1N,GAEX,IADA,IAAIlD,EAAS,GACJ6Q,EAAI,EAAGA,EAAI3N,EAAI,MAAUE,OAAQyN,IAAK,CAC7C,IAAIzS,EAAO,qBAAuB8E,EAAI,MAAU2N,GAChD7Q,EAAOiC,KAAK,uBAAGzG,UAAW4C,EAAMpB,IAAK6T,KACrC7Q,EAAOiC,KAAK,KACZjC,EAAOiC,KAAKiB,EAAI,MAAU2N,IAE5B,OAAO7Q,I,+BAGP,OACE,yBAAKxE,UAAU,UAAUvI,MAAO,CAAE6d,WAAY,IAC5C,kBAACrV,EAAA,EAAD,CAAMT,OAAK,GACT,6BACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAACkJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,OAEF,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,GAAD,QAGJ,6BACA,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC2M,GAAD,c,GA7BUrX,a,mBC8BTsX,GA3Cc,SAAC,GAAsB,IAApBnQ,EAAmB,EAAnBA,KAAMoQ,EAAa,EAAbA,OAGpC,OADA/O,QAAQC,IAAItB,GAEV,kBAAC,KAAD,CACEA,KAAMA,EACNmN,KAAK,aACL1Q,GAAG,aACH4T,WAAW,UACXrD,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,WAEFnZ,OAAQ,CAAEN,IAAK,EAAGG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAC/C6c,YAAa,EACbC,iBAAiB,UACjBC,eAAgB,EAChBC,eAAe,UACfC,SAAU,EACVC,SAAUP,EACVQ,QAAQ,gBACRC,SAAS,EACTtC,QAAS,CACP,CACEC,OAAQ,eACRpH,UAAW,MACXqH,WAAY,GACZqC,UAAW,EACXnC,UAAW,GACXC,WAAY,GACZmC,aAAc,GACdC,cAAe,qBCKVC,GAzCe,SAAC,GAAsB,IAApBjR,EAAmB,EAAnBA,KAAMoQ,EAAa,EAAbA,OAErC,OACE,kBAAC,KAAD,CACEpQ,KAAMA,EACNmN,KAAK,aACL1Q,GAAG,aACH4T,WAAW,UACXrD,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,WAEFnZ,OAAQ,CAAEN,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAChD6c,YAAa,EACbC,iBAAiB,UACjBC,eAAgB,EAChBC,eAAe,UACfC,SAAU,EACVC,SAAUP,EACVQ,QAAQ,gBACRrC,QAAS,CACP,CACEC,OAAQ,eACRpH,UAAW,MACXqH,WAAY,GACZqC,UAAW,EACXnC,UAAW,GACXC,WAAY,GACZmC,aAAc,GACdC,cAAe,qBCOVE,GAzCkB,SAAC,GAAsB,IAApBlR,EAAmB,EAAnBA,KAAMoQ,EAAa,EAAbA,OAExC,OACE,kBAAC,KAAD,CACEpQ,KAAMA,EACNmN,KAAK,aACL1Q,GAAG,aACH4T,WAAW,UACXrD,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,WAEFnZ,OAAQ,CAAEN,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAChD6c,YAAa,EACbC,iBAAiB,UACjBC,eAAgB,EAChBC,eAAe,UACfC,SAAU,EACVC,SAAUP,EACVQ,QAAQ,gBACRrC,QAAS,CACP,CACEC,OAAQ,eACRpH,UAAW,MACXqH,WAAY,GACZqC,UAAW,EACXnC,UAAW,GACXC,WAAY,GACZmC,aAAc,GACdC,cAAe,qBC3CZzP,GAAiB,SAACvB,EAAMmR,GACnC9P,QAAQC,IAAItB,GACZ,IACIyB,EADEC,EAAY,GAElB,IAAK,IAAIX,KAAQf,EAAKgB,MAAO,CAC3B,GAAIS,EAAe,CACjB,IAAMR,EAAe,CACnBC,EAAGH,EACHI,EAAGnB,EAAKmR,GAAYpQ,GAAQU,GAE9BC,EAAUN,KAAKH,GAEjBQ,EAAgBzB,EAAKmR,GAAYpQ,GAEnC,OAAOW,GAGF,SAAS0P,GAAYrQ,GAC1B,IAAIsQ,EAAI,IAAIxW,KAAKkG,GACfuQ,EAAQ,IAAMD,EAAEE,WAAa,GAC7BC,EAAM,GAAKH,EAAEI,UACbC,EAAOL,EAAEvW,cAKX,OAHIwW,EAAM/O,OAAS,IAAG+O,EAAQ,IAAMA,GAChCE,EAAIjP,OAAS,IAAGiP,EAAM,IAAMA,GAEzB,CAACE,EAAMJ,EAAOE,GAAKG,KAAK,KAG1B,SAASC,GAAQrH,GACtB,OAAON,KAAK4H,IAAIC,MACd7H,KACAM,EAAMtO,KAAI,SAAU8V,GAClB,OAAOA,EAAEpa,UCvBf,IAwJeqa,GAxJoB,WAAO,IAAD,EACJnQ,mBAAS,OADL,mBAChCwJ,EADgC,KACvB4G,EADuB,OAELpQ,mBAAS,IAFJ,mBAEhCqQ,EAFgC,KAErBC,EAFqB,OAGDtQ,mBAAS,IAHR,mBAGhCuQ,EAHgC,KAGnBC,EAHmB,OAIGxQ,mBAAS,IAJZ,mBAIhCyQ,EAJgC,KAIjBC,EAJiB,OAKS1Q,mBAAS,IALlB,mBAKhC2Q,EALgC,KAKdC,EALc,KAOvC1Q,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sDACrBC,MAAM,8DACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,IAAMgB,EAAQhB,EAAK0S,SAAS1R,MACtB2R,EAAUC,OAAOra,KAAKyI,GAAO/E,KAAI,SAACE,GAAD,MAAU,CAC/CqV,IAAKJ,GAAYjV,GACjBxE,MAAOqJ,EAAM7E,OAEfkW,EAAeM,GAEf,IAAM1N,EAASjF,EAAK0S,SAASzN,OACvB4N,EAAgBD,OAAOra,KAAK0M,GAAQhJ,KAAI,SAACE,GAAD,MAAU,CACtDqV,IAAKJ,GAAYjV,GACjBxE,MAAOsN,EAAO9I,OAGhBoW,EAAiBM,GAEjB,IAAM9N,EAAY/E,EAAK0S,SAAS3N,UAC1B+N,EAAmBF,OAAOra,KAAKwM,GAAW9I,KAAI,SAACE,GAAD,MAAU,CAC5DqV,IAAKJ,GAAYjV,GACjBxE,MAAOoN,EAAU5I,OAGnBsW,EAAoBK,MAzBH,2CAAH,qDA6BpBC,KACC,IAEH,IAAMC,EAAe,uCAAG,WAAO5a,GAAP,eAAA6J,EAAA,sDAChBgR,EAAc7a,EAAE8K,OAAOvL,MAE7BuK,MAAM,6CAAD,OAC0C+Q,EAD1C,kBAGF9Q,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,GAEE,0DADAA,EAAKkT,QAGLC,MAAM,wCACD,CACL,IAAMnS,EAAQhB,EAAK0S,SAAS1R,MACtB2R,EAAUC,OAAOra,KAAKyI,GAAO/E,KAAI,SAACE,GAAD,MAAU,CAC/CqV,IAAKJ,GAAYjV,GACjBxE,MAAOqJ,EAAM7E,OAEf8V,EAAgBgB,GAChBZ,EAAeM,GACftR,QAAQC,IAAI2R,EAAa5H,EAAS+G,GAElC,IAAMgB,EAAcxB,GAAQe,GAC5BtR,QAAQC,IAAI8R,GAEZ,IAAMnO,EAASjF,EAAK0S,SAASzN,OACvB4N,EAAgBD,OAAOra,KAAK0M,GAAQhJ,KAAI,SAACE,GAAD,MAAU,CACtDqV,IAAKJ,GAAYjV,GACjBxE,MAAOsN,EAAO9I,OAGhBoW,EAAiBM,GAEjB,IAAMQ,EAAezB,GAAQiB,GAC7BxR,QAAQC,IAAI+R,GAEZ,IAAMtO,EAAY/E,EAAK0S,SAAS3N,UAC1B+N,EAAmBF,OAAOra,KAAKwM,GAAW9I,KAAI,SAACE,GAAD,MAAU,CAC5DqV,IAAKJ,GAAYjV,GACjBxE,MAAOoN,EAAU5I,OAGnBsW,EAAoBK,GACpB,IAAMQ,EAAkB1B,GAAQkB,GAChCzR,QAAQC,IAAIgS,OA7CI,2CAAH,sDAkErB,OAhBAvR,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sDACvBC,MAAM,4CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,IAAMkS,EAAYlS,EAAK/D,KAAI,SAACoP,GAAD,MAAc,CACvCzO,KAAMyO,EAAQA,QACd1T,MAAO0T,EAAQ/G,YAAYiP,SAE7BpB,EAAaD,MARM,2CAAH,qDAYtBxF,KACC,IAGD,yBAAK/R,UAAU,uBACb,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,kBAAhB,mBACA,kBAACmI,GAAA,EAAD,CAAanI,UAAU,sBACrB,kBAACoI,GAAA,EAAD,CACEC,QAAQ,WACRrL,MAAO0T,EACP7N,SAAUwV,EACVrY,UAAU,oBAEV,kBAACyI,GAAA,EAAD,CAAUzL,MAAM,OAAhB,OACCua,EAAUjW,KAAI,SAACoP,GAAD,OACb,kBAACjI,GAAA,EAAD,CAAUzL,MAAO0T,EAAQ1T,OAAQ0T,EAAQzO,YAKjD,yBAAKjC,UAAU,oBACb,yBAAKvI,MAAO,CAAEU,OAAQ,IAAKiW,aAAc,KACvC,wBAAIpO,UAAU,wBAAd,4CAGA,kBAAC,GAAD,CAAsBqF,KAAMoS,EAAagB,aAAW,KAEtD,6BAEA,yBAAKhhB,MAAO,CAAEU,OAAQ,IAAKiW,aAAc,KACvC,wBAAIpO,UAAU,wBAAd,6CAGA,kBAAC,GAAD,CAAuBqF,KAAMsS,EAAee,cAAY,KAE1D,6BAEA,yBAAKjhB,MAAO,CAAEU,OAAQ,IAAKiW,aAAc,KACvC,wBAAIpO,UAAU,wBAAd,gDAGA,kBAAC,GAAD,CAA0BqF,KAAMwS,EAAkBc,iBAAe,QCxG5DE,GA1CY,SAAC,GAAsB,IAApBxT,EAAmB,EAAnBA,KAAMoQ,EAAa,EAAbA,OAGlC,OADA/O,QAAQC,IAAItB,GAEV,kBAAC,KAAD,CACEA,KAAMA,EACNmN,KAAK,aACL1Q,GAAG,aACH4T,WAAW,UACXrD,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,WAEFnZ,OAAQ,CAAEN,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAChD6c,YAAa,EACbC,iBAAiB,UACjBC,eAAgB,EAChBC,eAAe,UACfC,SAAU,EACVC,SAAUP,EACVQ,QAAQ,gBACRrC,QAAS,CACP,CACEC,OAAQ,eACRpH,UAAW,MACXqH,WAAY,GACZqC,UAAW,EACXnC,UAAW,GACXC,WAAY,GACZmC,aAAc,GACdC,cAAe,qBCOVyC,GA1Ca,SAAC,GAAsB,IAApBzT,EAAmB,EAAnBA,KAAMoQ,EAAa,EAAbA,OAGnC,OADA/O,QAAQC,IAAItB,GAEV,kBAAC,KAAD,CACEA,KAAMA,EACNmN,KAAK,aACL1Q,GAAG,aACH4T,WAAW,UACXrD,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,WAEFnZ,OAAQ,CAAEN,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAChD6c,YAAa,EACbC,iBAAiB,UACjBC,eAAgB,EAChBC,eAAe,UACfC,SAAU,EACVC,SAAUP,EACVQ,QAAQ,gBACRrC,QAAS,CACP,CACEC,OAAQ,eACRpH,UAAW,MACXqH,WAAY,GACZqC,UAAW,EACXnC,UAAW,GACXC,WAAY,GACZmC,aAAc,GACdC,cAAe,qBCOV0C,GA1CgB,SAAC,GAAsB,IAApB1T,EAAmB,EAAnBA,KAAMoQ,EAAa,EAAbA,OAGtC,OADA/O,QAAQC,IAAItB,EAAMoQ,GAEhB,kBAAC,KAAD,CACEpQ,KAAMA,EACNmN,KAAK,aACL1Q,GAAG,aACH4T,WAAW,UACXrD,OAAQ,CACN,UACA,UACA,UACA,UACA,UACA,UACA,WAEFnZ,OAAQ,CAAEN,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAChD6c,YAAa,EACbC,iBAAiB,UACjBC,eAAgB,EAChBC,eAAe,UACfC,SAAU,EACVC,SAAUP,EACVQ,QAAQ,gBACRrC,QAAS,CACP,CACEC,OAAQ,eACRpH,UAAW,MACXqH,WAAY,GACZqC,UAAW,EACXnC,UAAW,GACXC,WAAY,GACZmC,aAAc,GACdC,cAAe,qBC2JV2C,GA9LgB,WAAO,IAAD,EACA9R,mBAAS,OADT,mBAC5BwJ,EAD4B,KACnB4G,EADmB,OAEDpQ,mBAAS,IAFR,mBAE5BqQ,EAF4B,KAEjBC,EAFiB,OAGCtQ,mBAAS,IAHV,mBAG5ByD,EAH4B,KAGhBsO,EAHgB,OAIG/R,mBAAS,IAJZ,mBAI5B2D,EAJ4B,KAIfqO,EAJe,OAKShS,mBAAS,IALlB,mBAK5B0D,EAL4B,KAKZuO,EALY,OAMHjS,qBANG,mBAM5BkS,EAN4B,KAMlBC,EANkB,OAODnS,qBAPC,mBAO5BoS,EAP4B,KAOjBC,EAPiB,OAQKrS,qBARL,mBAQ5BsS,EAR4B,KAQdC,EARc,KAUnCrS,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sDACrBC,MAAM,8DACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,IAAMqU,EAAerU,EAAK0S,SAIpB4B,EAFyB/S,GAAe8S,EAAc,SAEVpY,KAAI,SAAC+D,GAAD,MAAW,CAC/DwR,IAAKJ,GAAYpR,EAAKkB,GACtBvJ,MAAOqI,EAAKmB,MAEdyS,EAAcU,GACd,IAAMlE,EAASwB,GAAQ0C,GACvBN,EAAY5D,GAGZ,IAKMmE,EAL0BhT,GAC9B8S,EACA,UAGkDpY,KAAI,SAAC+D,GAAD,MAAW,CACjEwR,IAAKJ,GAAYpR,EAAKkB,GACtBvJ,MAAOqI,EAAKmB,MAEd0S,EAAeU,GACf,IAAMlB,EAAezB,GAAQ2C,GAC7BL,EAAab,GAEb,IAKMmB,EAL6BjT,GACjC8S,EACA,aAGwDpY,KACxD,SAAC+D,GAAD,MAAW,CACTwR,IAAKJ,GAAYpR,EAAKkB,GACtBvJ,MAAOqI,EAAKmB,MAGhB2S,EAAkBU,GAClB,IAAMlB,EAAkB1B,GAAQ4C,GAChCJ,EAAgBd,MA3CC,2CAAH,qDA+CpBP,KACC,IAEH,IAAMC,EAAe,uCAAG,WAAO5a,GAAP,eAAA6J,EAAA,sDAChBgR,EAAc7a,EAAE8K,OAAOvL,MAE7BuK,MAAM,6CAAD,OAC0C+Q,EAD1C,kBAGF9Q,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,GAEE,0DADAA,EAAKkT,QAGLC,MAAM,wCACD,CACL,IAAMkB,EAAerU,EAAK0S,SAIpB4B,EAFyB/S,GAAe8S,EAAc,SAEVpY,KAAI,SAAC+D,GAAD,MAAW,CAC/DwR,IAAKJ,GAAYpR,EAAKkB,GACtBvJ,MAAOqI,EAAKmB,MAEdyS,EAAcU,GACd,IAAMlE,EAASwB,GAAQ0C,GACvBN,EAAY5D,GAGZ,IAKMmE,EAL0BhT,GAC9B8S,EACA,UAGkDpY,KAAI,SAAC+D,GAAD,MAAW,CACjEwR,IAAKJ,GAAYpR,EAAKkB,GACtBvJ,MAAOqI,EAAKmB,MAEd0S,EAAeU,GACf,IAAMlB,EAAezB,GAAQ2C,GAC7BL,EAAab,GAEb,IAKMmB,EAL6BjT,GACjC8S,EACA,aAGwDpY,KACxD,SAAC+D,GAAD,MAAW,CACTwR,IAAKJ,GAAYpR,EAAKkB,GACtBvJ,MAAOqI,EAAKmB,MAGhB2S,EAAkBU,GAClB,IAAMlB,EAAkB1B,GAAQ4C,GAChCJ,EAAgBd,GAEhBrB,EAAgBgB,OAvDA,2CAAH,sDAkFrB,OArBAlR,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sDACvBC,MAAM,4CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,IAAMkS,EAAYlS,EAAK/D,KAAI,SAACoP,GAAD,MAAc,CACvCzO,KAAMyO,EAAQA,QACd1T,MAAO0T,EAAQ/G,YAAYiP,SAE7BpB,EAAaD,MARM,2CAAH,qDAYtBxF,KACC,IAEHrL,QAAQC,IAAI,wBAAyBgE,EAAYyO,GAEjD1S,QAAQC,IAAI,yBAA0BkE,EAAayO,GACnD5S,QAAQC,IAAI,4BAA6BiE,EAAgB4O,GAGvD,yBAAKxZ,UAAU,uBACb,yBAAKA,UAAU,mBACb,0BAAMA,UAAU,kBAAhB,mBACA,kBAACmI,GAAA,EAAD,CAAanI,UAAU,sBACrB,kBAACoI,GAAA,EAAD,CACEC,QAAQ,WACRrL,MAAO0T,EACP7N,SAAUwV,EACVrY,UAAU,oBAEV,kBAACyI,GAAA,EAAD,CAAUzL,MAAM,OAAhB,OACCua,EAAUjW,KAAI,SAACoP,GAAD,OACb,kBAACjI,GAAA,EAAD,CAAUzL,MAAO0T,EAAQ1T,OAAQ0T,EAAQzO,YAMjD,yBAAKjC,UAAU,oBACb,yBAAKvI,MAAO,CAAEU,OAAQ,IAAKiW,aAAc,GAAItW,QAAS,IACpD,wBAAIkI,UAAU,wBAAd,4CAGA,kBAAC,GAAD,CAAoBqF,KAAMsF,EAAYyO,UAAQ,KAEhD,6BAEA,yBAAK3hB,MAAO,CAAEU,OAAQ,IAAKiW,aAAc,GAAItW,QAAS,IACpD,wBAAIkI,UAAU,wBAAd,6CAGA,kBAAC,GAAD,CAAqBqF,KAAMwF,EAAayO,WAAS,KAEnD,6BAEA,yBAAK7hB,MAAO,CAAEU,OAAQ,IAAKiW,aAAc,GAAItW,QAAS,IACpD,wBAAIkI,UAAU,wBAAd,gDAGA,kBAAC,GAAD,CAAwBqF,KAAMuF,EAAgB4O,cAAY,QCtGrDM,GAnFW,SAAC,GAAc,IAAZzU,EAAW,EAAXA,KAE3B,OADAqB,QAAQC,IAAItB,GAEV,kBAAC,KAAD,CACEA,KAAMA,EACNnM,OAAQ,CAAEN,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAChDoZ,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,OAAQ,CAAEC,OAAQ,iBAClBC,YAAa,EACbxK,YAAa,CAAEyK,KAAM,QAASC,UAAW,CAAC,CAAC,SAAU,MACrDC,sBAAuB,GACvBC,wBAAyB,EACzBC,sBAAsB,UACtBC,uBAAwB,EACxBC,+BAAgC,GAChCC,iCAAkC,GAClCC,4BAA6B,EAC7BC,sBAAuB,CAAET,KAAM,SAC/BU,sBAAuB,GACvBC,sBAAsB,UACtBC,SAAS,EACTC,gBAAiB,GACjBC,cAAe,GACfC,KAAM,CACJ,CACEzV,GAAI,OACJ8E,KAAM,cACNvH,WAAY,UACZ3C,MAAO,2BACPgX,KAAM,EACN5X,QAAS,EACT0b,SAAS,GAEX,CACE1V,GAAI,QACJ8E,KAAM,eACNvH,WAAY,UACZ3C,MAAO,2BACP+a,UAAW,GACXC,UAAW,EACX3G,QAAS,KAGb9J,KAAM,CACJ,CACE0Q,MAAO,CACL7V,GAAI,aAENA,GAAI,QAEN,CACE6V,MAAO,CACL7V,GAAI,UAENA,GAAI,UAGR8V,QAAS,CACP,CACEC,OAAQ,cACRpH,UAAW,MACXqH,WAAY,GACZE,UAAW,IACXC,WAAY,GACZC,cAAe,OACfC,WAAY,GACZC,YAAa,SACbC,QAAS,CACP,CACEC,GAAI,QACJ7c,MAAO,CACLyc,cAAe,eCUhB6F,GAnFU,SAAC,GAAc,IAAZ1U,EAAW,EAAXA,KAE1B,OADAqB,QAAQC,IAAItB,GAEV,kBAAC,KAAD,CACEA,KAAMA,EACNnM,OAAQ,CAAEN,IAAK,GAAIG,MAAO,GAAIF,OAAQ,GAAIC,KAAM,IAChDoZ,YAAa,GACbC,SAAU,GACVC,aAAc,EACdC,OAAQ,CAAEC,OAAQ,oBAClBC,YAAa,EACbxK,YAAa,CAAEyK,KAAM,QAASC,UAAW,CAAC,CAAC,SAAU,MACrDC,sBAAuB,GACvBC,wBAAyB,EACzBC,sBAAsB,UACtBC,uBAAwB,EACxBC,+BAAgC,GAChCC,iCAAkC,GAClCC,4BAA6B,EAC7BC,sBAAuB,CAAET,KAAM,SAC/BU,sBAAuB,GACvBC,sBAAsB,UACtBC,SAAS,EACTC,gBAAiB,GACjBC,cAAe,GACfC,KAAM,CACJ,CACEzV,GAAI,OACJ8E,KAAM,cACNvH,WAAY,UACZ3C,MAAO,2BACPgX,KAAM,EACN5X,QAAS,EACT0b,SAAS,GAEX,CACE1V,GAAI,QACJ8E,KAAM,eACNvH,WAAY,UACZ3C,MAAO,2BACP+a,UAAW,GACXC,UAAW,EACX3G,QAAS,KAGb9J,KAAM,CACJ,CACE0Q,MAAO,CACL7V,GAAI,kBAENA,GAAI,QAEN,CACE6V,MAAO,CACL7V,GAAI,SAENA,GAAI,UAGR8V,QAAS,CACP,CACEC,OAAQ,cACRpH,UAAW,MACXqH,WAAY,GACZE,UAAW,IACXC,WAAY,GACZC,cAAe,OACfC,WAAY,GACZC,YAAa,SACbC,QAAS,CACP,CACEC,GAAI,QACJ7c,MAAO,CACLyc,cAAe,eC0IhB8F,I,OA5MqB,WAAO,IAAD,EACL9S,mBAAS,OADJ,mBACjCwJ,EADiC,KACxB4G,EADwB,OAENpQ,mBAAS,IAFH,mBAEjCqQ,EAFiC,KAEtBC,EAFsB,OAGYtQ,mBAAS,IAHrB,mBAGjC+S,EAHiC,KAGbC,EAHa,OAIYhT,mBAAS,IAJrB,mBAIjCiT,EAJiC,KAIbC,EAJa,KAMxChT,qBAAU,YACY,uCAAG,sBAAAE,EAAA,sDACrBC,MAAM,gDACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,IAAMgV,EAAgB,CACpB,CACEvc,GAAI,QACJyE,MAAO,QACPvF,MAAOqI,EAAKgB,MACZ3N,MAAO,qBAET,CACEoF,GAAI,SACJyE,MAAO,SACPvF,MAAOqI,EAAKiF,OACZ5R,MAAO,sBAET,CACEoF,GAAI,YACJyE,MAAO,YACPvF,MAAOqI,EAAK+E,UACZ1R,MAAO,uBAGXwhB,EAAsBG,GAEtB,IAAMC,EAAgB,CACpB,CACExc,GAAI,aACJyE,MAAO,cACPvF,MAAOqI,EAAKsF,WACZjS,MAAO,qBAET,CACEoF,GAAI,cACJyE,MAAO,eACPvF,MAAOqI,EAAKwF,YACZnS,MAAO,sBAET,CACEoF,GAAI,iBACJyE,MAAO,kBACPvF,MAAOqI,EAAKuF,eACZlS,MAAO,uBAGX0hB,EAAsBE,MA9CL,2CAAH,qDAkDpBlC,KACC,IAEH,IAAMC,EAAe,uCAAG,WAAO5a,GAAP,eAAA6J,EAAA,sDAChBgR,EAAc7a,EAAE8K,OAAOvL,MAE7BuK,MAAM,4CAAD,OAA6C+Q,IAC/C9Q,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACLqB,QAAQC,IAAItB,GACZ,IAAMgV,EAAgB,CACpB,CACEvc,GAAI,QACJyE,MAAO,QACPvF,MAAOqI,EAAKgB,MACZ3N,MAAO,qBAET,CACEoF,GAAI,SACJyE,MAAO,SACPvF,MAAOqI,EAAKiF,OACZ5R,MAAO,sBAET,CACEoF,GAAI,YACJyE,MAAO,YACPvF,MAAOqI,EAAK+E,UACZ1R,MAAO,uBAGXwhB,EAAsBG,GAEtB,IAAMC,EAAgB,CACpB,CACExc,GAAI,aACJyE,MAAO,cACPvF,MAAOqI,EAAKsF,WACZjS,MAAO,qBAET,CACEoF,GAAI,cACJyE,MAAO,eACPvF,MAAOqI,EAAKwF,YACZnS,MAAO,sBAET,CACEoF,GAAI,iBACJyE,MAAO,kBACPvF,MAAOqI,EAAKuF,eACZlS,MAAO,uBAGX0hB,EAAsBE,GAEtBhD,EAAgBgB,MAnDE,2CAAH,sDA4ErB,OAnBA5R,QAAQC,IAAI,2BAA4BsT,GACxCvT,QAAQC,IAAI,2BAA4BwT,GAExC/S,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sDACvBC,MAAM,4CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,IAAMkS,EAAYlS,EAAK/D,KAAI,SAACoP,GAAD,MAAc,CACvCzO,KAAMyO,EAAQA,QACd1T,MAAO0T,EAAQ/G,YAAYiP,SAE7BpB,EAAaD,MARM,2CAAH,qDAYtBxF,KACC,IAGD,yBAAK/R,UAAU,uBACb,yBAAKA,UAAU,2BACb,0BAAMA,UAAU,kBAAhB,sCACsC,KAEtC,kBAACmI,GAAA,EAAD,CAAanI,UAAU,6BACrB,kBAACoI,GAAA,EAAD,CACEC,QAAQ,WACRrL,MAAO0T,EACP7N,SAAUwV,EACVrY,UAAU,2BAEV,kBAACyI,GAAA,EAAD,CAAUzL,MAAM,OAAhB,OACCua,EAAUjW,KAAI,SAACoP,GAAD,OACb,kBAACjI,GAAA,EAAD,CAAUzL,MAAO0T,EAAQ1T,OAAQ0T,EAAQzO,YAMjD,kBAAChC,EAAA,EAAD,CAAMT,OAAK,GACT,kBAACkJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK6B,GAAI,EAAG5B,GAAI,IACd,kBAAC,KAAD,CAAM5I,UAAU,SACd,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEkB,IAAI,qCACJE,IAAI,OACJpB,UAAU,eAGd,6BACE,wBAAIA,UAAU,cAAd,uBAGJ,yBAAKA,UAAU,aAAavI,MAAO,CAAEU,OAAQ,MAC3C,kBAAC,GAAD,CAAmBkN,KAAM4U,OAK/B,kBAACtR,EAAA,EAAD,CAAK6B,GAAI,EAAG5B,GAAI,IACd,kBAAC,KAAD,CAAM5I,UAAU,SACd,yBAAKA,UAAU,eACb,yBAAKA,UAAU,cACb,yBACEkB,IAAI,uCACJE,IAAI,OACJpB,UAAU,eAGd,6BACE,wBAAIA,UAAU,cAAd,uBAGJ,yBAAKA,UAAU,aAAavI,MAAO,CAAEU,OAAQ,MAC3C,kBAAC,GAAD,CAAkBkN,KAAM8U,YC3MlCxV,I,OAAU,CACdH,OAAQ,CACNpM,SAAS,GAEXwM,SAAU,CACRC,MAAO,CACLC,OAAQ,IAGZC,qBAAqB,EACrBC,SAAU,CACRC,KAAM,QACNC,WAAW,EACXC,UAAW,CACT5C,MAAO,SAAU6C,EAAaC,GAC5B,OAAOC,KAAQF,EAAYpI,OAAOuI,OAAO,WAI/CC,OAAQ,CACNC,MAAO,CACL,CACE7C,KAAM,OACN8C,KAAM,CACJH,OAAQ,WACRI,cAAe,QAIrBC,MAAO,CACL,CACEC,UAAW,CACTzN,SAAS,GAEX0N,MAAO,CAELC,SAAU,SAAU/I,EAAOgJ,EAAOC,GAChC,OAAOX,KAAQtI,GAAOuI,OAAO,aAQnCqB,GAAiB,SAACvB,EAAMwB,GAC5B,IACIC,EADAC,EAAY,GAEhB,IAAK,IAAIX,KAAQf,EAAKgB,MAAO,CAC3B,GAAIS,EAAe,CACjB,IAAIR,EAAe,CACjBC,EAAGH,EACHI,EAAGnB,EAAKwB,GAAWT,GAAQU,GAE7BC,EAAUN,KAAKH,GAEjBQ,EAAgBzB,EAAKwB,GAAWT,GAElC,OAAOW,GA8CMC,OA3Cf,YAA0D,IAArCH,EAAoC,EAApCA,UAAWyR,EAAyB,EAAzBA,YAAgBla,EAAS,6CAC/B8I,mBAAS,IADsB,mBAChD7B,EADgD,KAC1C8B,EAD0C,KAuBvD,OArBAT,QAAQC,IAAIvI,EAAOka,GACnBlR,qBAAU,YACO,uCAAG,sBAAAE,EAAA,sEACVC,MAAM,6CAAD,OACoC+Q,EADpC,kBAGR9Q,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACnC,GACL,IAAMkV,EAAUlV,EAAK0S,SACjBhR,EAAYH,GAAe2T,EAAS1T,GACxCM,EAAQJ,GACRL,QAAQC,IAAII,MAXA,2CAAH,qDAgBfY,KACC,CAACd,EAAWyR,IAGb,yBAAKtY,UAAW5B,EAAM4B,YACf,OAAJqF,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,QAAS,GACd,kBAAC,QAAD,CACEvC,KAAM,CACJwC,SAAU,CACR,CACE1N,gBAAgB,GAAD,OAAKiE,EAAM0J,gBAC1BC,YAAY,GAAD,OAAK3J,EAAM4J,gBACtB3C,KAAMA,KAIZV,QAASA,OCjGbA,GAAU,CACdH,OAAQ,CACNpM,SAAS,GAEXwM,SAAU,CACRC,MAAO,CACLC,OAAQ,IAGZC,qBAAqB,EACrBC,SAAU,CACRC,KAAM,QACNC,WAAW,EACXC,UAAW,CACT5C,MAAO,SAAU6C,EAAaC,GAC5B,OAAOC,KAAQF,EAAYpI,OAAOuI,OAAO,WAI/CC,OAAQ,CACNC,MAAO,CACL,CACE7C,KAAM,OACN8C,KAAM,CACJH,OAAQ,WACRI,cAAe,QAIrBC,MAAO,CACL,CACEC,UAAW,CACTzN,SAAS,GAEX0N,MAAO,CAELC,SAAU,SAAU/I,EAAOgJ,EAAOC,GAChC,OAAOX,KAAQtI,GAAOuI,OAAO,YAQnCiV,GAAyB,SAACnV,EAAMwB,GACpC,IAAIE,EAAY,GAChB,IAAK,IAAIX,KAAQf,EAAKgB,MAAO,CAC3B,IAAIC,EAAe,CACjBC,EAAGH,EACHI,EAAGnB,EAAKwB,GAAWT,IAErBW,EAAUN,KAAKH,GAEjB,OAAOS,GA8CM0T,OA3Cf,YAAkE,IAArC5T,EAAoC,EAApCA,UAAWyR,EAAyB,EAAzBA,YAAgBla,EAAS,6CACvC8I,mBAAS,IAD8B,mBACxD7B,EADwD,KAClD8B,EADkD,KAuB/D,OArBAT,QAAQC,IAAIvI,EAAOka,GACnBlR,qBAAU,YACO,uCAAG,sBAAAE,EAAA,sEACVC,MAAM,6CAAD,OACoC+Q,EADpC,iBAGR9Q,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACnC,GACL,IAAMkV,EAAUlV,EAAK0S,SACjBhR,EAAYyT,GAAuBD,EAAS1T,GAChDM,EAAQJ,GACRL,QAAQC,IAAII,MAXA,2CAAH,qDAgBfY,KACC,CAACd,EAAWyR,IAGb,yBAAKtY,UAAW5B,EAAM4B,YACf,OAAJqF,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,QAAS,GACd,kBAAC,QAAD,CACEvC,KAAM,CACJwC,SAAU,CACR,CACE1N,gBAAgB,GAAD,OAAKiE,EAAM0J,gBAC1BC,YAAY,GAAD,OAAK3J,EAAM4J,gBACtB3C,KAAMA,KAIZV,QAASA,OCoGJsD,GA7LI,WAAO,IAAD,EACYf,mBAAS,OADrB,mBAChBwJ,EADgB,KACP4G,EADO,OAEWpQ,mBAAS,IAFpB,mBAEhBqQ,EAFgB,KAELC,EAFK,KAIvBpQ,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sDACvBC,MAAM,4CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,IAAMkS,EAAYlS,EAAK/D,KAAI,SAACoP,GAAD,MAAc,CACvCzO,KAAMyO,EAAQA,QACd1T,MAAO0T,EAAQ/G,YAAYiP,SAE7BpB,EAAaD,MARM,2CAAH,qDAYtBxF,KACC,IASH,OAFArL,QAAQC,IAAI+J,GAGV,6BACE,yBAAK1Q,UAAU,qBACb,0BAAMA,UAAU,oBAAhB,mBACA,kBAACmI,GAAA,EAAD,CAAanI,UAAU,iBACrB,kBAACoI,GAAA,EAAD,CAAQC,QAAQ,WAAWrL,MAAO0T,EAAS7N,SAZ3B,SAACpF,GACvB,IAAM6a,EAAc7a,EAAE8K,OAAOvL,MAC7Bsa,EAAgBgB,KAWR,kBAAC7P,GAAA,EAAD,CAAUzL,MAAM,OAAhB,OACCua,EAAUjW,KAAI,SAACoP,GAAD,OACb,kBAACjI,GAAA,EAAD,CAAUzL,MAAO0T,EAAQ1T,OAAQ0T,EAAQzO,YAMjD,kBAACyG,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,EAAD,CACElE,UAAU,gBACV5G,GAAG,aACHmG,MAAM,oBACNC,SAAS,gBACTO,MAAM,yBACNd,QAAQ,SACRY,QACE,yBAAKvE,UAAU,YACb,kBAAC,GAAD,CACEA,UAAU,aACV6G,UAAU,QACViB,eAAe,yBACfE,eAAe,UACfsQ,YAAa5H,SAOzB,kBAAChI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,EAAD,CACElE,UAAU,gBACV5G,GAAG,aACHmG,MAAM,eACNC,SAAS,iBACTO,MAAM,yBACNd,QAAQ,QACRY,QACE,yBAAKvE,UAAU,YACb,kBAAC,GAAD,CACEA,UAAU,aACV6G,UAAU,SACViB,eAAe,yBACfE,eAAe,UACfsQ,YAAa5H,SAOzB,kBAAChI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,EAAD,CACElE,UAAU,gBACV5G,GAAG,aACHmG,MAAM,2BACNC,SAAS,oBACTO,MAAM,yBACNd,QAAQ,MACRY,QACE,yBAAKvE,UAAU,YACb,kBAAC,GAAD,CACEA,UAAU,aACV6G,UAAU,YACViB,eAAe,0BACfE,eAAe,UACfsQ,YAAa5H,UAQ3B,kBAAC/H,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,EAAD,CACElE,UAAU,gBACV5G,GAAG,aACHmG,MAAM,oBACNC,SAAS,iBACTO,MAAM,yBACNd,QAAQ,SACRY,QACE,yBAAKvE,UAAU,YACb,kBAAC,GAAD,CACEA,UAAU,aACV6G,UAAU,QACViB,eAAe,yBACfE,eAAe,UACfsQ,YAAa5H,SAOzB,kBAAChI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,EAAD,CACElE,UAAU,gBACV5G,GAAG,aACHmG,MAAM,eACNC,SAAS,iBACTO,MAAM,yBACNd,QAAQ,QACRY,QACE,yBAAKvE,UAAU,YACb,kBAAC,GAAD,CACEA,UAAU,aACV6G,UAAU,SACViB,eAAe,yBACfE,eAAe,UACfsQ,YAAa5H,SAOzB,kBAAChI,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,EAAD,CACElE,UAAU,gBACV5G,GAAG,aACHmG,MAAM,2BACNC,SAAS,iBACTO,MAAM,yBACNd,QAAQ,MACRY,QACE,yBAAKvE,UAAU,YACb,kBAAC,GAAD,CACEA,UAAU,aACV6G,UAAU,YACViB,eAAe,0BACfE,eAAe,UACfsQ,YAAa5H,aCxIpBgK,GAxCa,WAC1B,OACE,yBAAK1a,UAAU,yBACb,kBAACC,EAAA,EAAD,CAAMT,OAAK,GACT,6BACA,kBAACkJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,KAAD,KACE,kBAACa,GAAA,EAAD,KACE,kBAAC,GAAD,SAKN,kBAACd,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,KAAD,KACE,kBAACa,GAAA,EAAD,KACE,kBAAC,GAAD,UAKR,6BAEA,kBAACf,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,GAAD,QAGJ,6BACA,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,GAAD,W,cCRG+R,OA7Bf,YAAoE,IAAjD1W,EAAgD,EAAhDA,MAAOoC,EAAyC,EAAzCA,MAAOuU,EAAkC,EAAlCA,MAAO7Q,EAA2B,EAA3BA,OAAQR,EAAmB,EAAnBA,MAAUnL,EAAS,0DAEjE,OADAsI,QAAQC,IAAI1C,EAAO8F,GAEjB,kBAAC,KAAD,CACElK,QAASzB,EAAMyB,QACfG,UAAS,kBAAa+J,GAAU,oBAAvB,YACPR,GAAS,iBAGX,kBAACE,GAAA,EAAD,CAAazJ,UAAU,oBACrB,kBAAC8N,GAAA,EAAD,CACE9N,UAAU,iBACVtH,MAAM,gBACNmiB,cAAY,GAEX5W,GAEH,wBAAIjE,UAAS,0BAAqBuJ,GAAS,0BACxClD,GAGH,kBAACyH,GAAA,EAAD,CAAY9N,UAAU,iBAAiBtH,MAAM,iBAC1CkiB,EADH,a,gCCrBFE,GAAkB,CACtBzU,MAAO,CACL0U,IAAK,UACLC,IAAK,mBACLC,QAAS,yBACTC,WAAY,KAEd9Q,UAAW,CACT2Q,IAAK,UACLC,IAAK,oBACLC,QAAS,0BACTC,WAAY,KAEd5Q,OAAQ,CACNyQ,IAAK,UACLC,IAAK,mBACLC,QAAS,yBACTC,WAAY,OAIHC,GAAW,SAAC9V,GACvB,IAAI+V,EAAU,aAAO/V,GAQrB,OAPA+V,EAAWpL,MAAK,SAAC1I,EAAGiE,GAClB,OAAIjE,EAAEjB,MAAQkF,EAAElF,OACN,EAED,KAGJ+U,GAGIC,GAAkB,SAACC,GAAD,OAC7BA,EAAI,WAAOhW,KAAQgW,GAAM/V,OAAO,SAAY,M,6BCnB/BgW,OAdf,YAAsD,IAAvChE,EAAsC,EAAtCA,UAAW1Q,EAA2B,EAA3BA,UAAW2U,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAC3C,OACE,yBAAKzb,UAAU,OACb,kBAAC,KAAD,CAAYwb,OAAQA,EAAQC,KAAMA,GAChC,kBAACC,GAAA,EAAD,CACEC,IAAI,qDACJC,YAAY,2ED6BO,SAACvW,GAAD,IAAOwB,EAAP,uDAAmB,QAAnB,OAC3BxB,EAAK/D,KAAI,SAACoP,GAAD,OACP,kBAACmL,GAAA,EAAD,CACEL,OAAQ,CAAC9K,EAAQ/G,YAAYmS,IAAKpL,EAAQ/G,YAAYoS,MACtDrjB,MAAOoiB,GAAgBjU,GAAWkU,IAClCiB,UAAWlB,GAAgBjU,GAAWkU,IACtCkB,YAAa,GACbnX,OACEwK,KAAK4M,KAAKxL,EAAQ7J,IAAciU,GAAgBjU,GAAWqU,YAG7D,kBAACiB,GAAA,EAAD,KACE,yBAAKnc,UAAU,kBACb,yBACEA,UAAU,YACVvI,MAAO,CAAEoJ,gBAAgB,OAAD,OAAS6P,EAAQ/G,YAAYyS,KAA7B,QAE1B,yBAAKpc,UAAU,aAAa0Q,EAAQA,SACpC,yBAAK1Q,UAAU,kBAAf,UACUsF,KAAQoL,EAAQrK,OAAOd,OAAO,QAExC,yBAAKvF,UAAU,kBAAf,cACcsF,KAAQoL,EAAQtG,WAAW7E,OAAO,QAEhD,yBAAKvF,UAAU,eAAf,WACWsF,KAAQoL,EAAQpG,QAAQ/E,OAAO,cCpD3C8W,CAAc9E,EAAW1Q,MCqHnByV,I,OAnHM,WAAO,IAAD,EACUpV,mBAAS,aADnB,mBAClBwJ,EADkB,KACT4G,EADS,OAEapQ,mBAAS,IAFtB,mBAElByC,EAFkB,KAELC,EAFK,OAGS1C,mBAAS,IAHlB,mBAGlBqQ,EAHkB,KAGPC,EAHO,OAIetQ,mBAAS,IAJxB,mBAIlBqV,EAJkB,KAIJC,EAJI,OAKStV,mBAAS,IALlB,gCAMSA,mBAAS,UANlB,mBAMlBL,EANkB,KAMP4V,EANO,OAOSvV,mBAAS,CAAE4U,IAAK,SAAUY,KAAM,UAPzC,mBAOlBC,EAPkB,KAOPC,EAPO,OAQK1V,mBAAS,GARd,mBAQlB2V,EARkB,KAQTC,EARS,KAUzB1V,qBAAU,WACRG,MAAM,sCACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACLuE,EAAevE,QAElB,IAEH+B,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sDACvBC,MAAM,4CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,IAAMkS,EAAYlS,EAAK/D,KAAI,SAACoP,GAAD,MAAc,CACvCzO,KAAMyO,EAAQA,QACd1T,MAAO0T,EAAQ/G,YAAYiP,SAEZuC,GAAS9V,GAC1BmS,EAAaD,GACbiF,EAAgBnX,MAVG,2CAAH,qDActB0M,KACC,IAEHrL,QAAQC,IAAIE,GAEZ,IAAMwR,EAAe,uCAAG,WAAO5a,GAAP,iBAAA6J,EAAA,6DAChBgR,EAAc7a,EAAE8K,OAAOvL,MAEvB2e,EACY,cAAhBrD,EACI,qCADJ,mDAEgDA,GAN5B,SAOhB/Q,MAAMoU,GACTnU,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACLiS,EAAgBgB,GAChB1O,EAAevE,GAEXuX,EADY,cAAhBtE,EACiB,CAAC,UAAW,SACZ,CAACjT,EAAKsE,YAAYmS,IAAKzW,EAAKsE,YAAYoS,OAE3Be,EAAd,cAAhBxE,EAAyC,EAAgB,MAhBvC,2CAAH,sDAoBrB,OACE,yBAAKtY,UAAU,yBACb,yBAAKA,UAAU,eACb,oDACA,yBAAKA,UAAU,yBACb,0BAAMA,UAAU,qBAAhB,iCAGA,kBAACmI,GAAA,EAAD,CAAanI,UAAU,wBACrB,kBAACoI,GAAA,EAAD,CACEC,QAAQ,WACRrL,MAAO0T,EACP7N,SAAUwV,GAEV,kBAAC5P,GAAA,EAAD,CAAUzL,MAAM,aAAhB,aACCua,EAAUjW,KAAI,SAACoP,GAAD,OACb,kBAACjI,GAAA,EAAD,CAAUzL,MAAO0T,EAAQ1T,OAAQ0T,EAAQzO,aAMnD,yBAAKjC,UAAU,cACb,kBAAC,GAAD,CACEH,QAAS,SAACpC,GAAD,OAAOgf,EAAa,UAC7BxY,MAAM,oBACNsF,OAAK,EACLQ,OAAsB,UAAdlD,EACRR,MAAOgV,GAAgB1R,EAAYgB,YACnCiQ,MAAOtV,KAAQqE,EAAYtD,OAAOd,OAAO,UAE3C,kBAAC,GAAD,CACE1F,QAAS,SAACpC,GAAD,OAAOgf,EAAa,cAC7BxY,MAAM,YACN8F,OAAsB,cAAdlD,EACRR,MAAOgV,GAAgB1R,EAAYiB,gBACnCgQ,MAAOtV,KAAQqE,EAAYS,WAAW7E,OAAO,UAE/C,kBAAC,GAAD,CACE1F,QAAS,SAACpC,GAAD,OAAOgf,EAAa,WAC7BxY,MAAM,SACNsF,OAAK,EACLQ,OAAsB,WAAdlD,EACRR,MAAOgV,GAAgB1R,EAAYkB,aACnC+P,MAAOtV,KAAQqE,EAAYW,QAAQ/E,OAAO,WAG9C,kBAAC,GAAD,CACEgS,UAAWgF,EACX1V,UAAWA,EACX2U,OAAQmB,EACRlB,KAAMoB,O,oBCjECE,GAlDgB,SAAC,GAAwC,IAAtC1X,EAAqC,EAArCA,KAAM2X,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,YAGnD,OADAvW,QAAQC,IAAItB,GAEV,kBAAC,KAAD,CACEA,KAAMA,EACN6X,SAAU3F,GAAU2F,SACpBhkB,OAAQ,CAAEN,IAAK,EAAGG,MAAO,EAAGF,OAAQ,EAAGC,KAAM,GAC7CuZ,OAAQ4K,EACRE,OAAQ,CAAC,EAAGH,GACZI,aAAa,UACb7a,MAAM,kBACN8a,YAAY,MACZC,sBAAuB,CAAC,IAAM,IAC9BC,mBAAoB,CAAC,EAAG,EAAG,GAC3BC,iBAAiB,EACjBC,mBAAmB,UACnBlL,YAAa,GACbxK,YAAY,UACZ2V,eAAe,gBACfC,gBAAgB,MAChB/J,QAAS,CACP,CACEC,OAAQ,cACRpH,UAAW,SACXyJ,SAAS,EACTnC,WAAY,GACZD,YAAa,IACbsC,aAAc,EACdpC,UAAW,GACXC,WAAY,GACZoC,cAAe,gBACfnC,cAAe,UACf0J,YAAa,IACbzJ,WAAY,GACZE,QAAS,CACP,CACEC,GAAI,QACJ7c,MAAO,CACLyc,cAAe,UACf0J,YAAa,UC+CdC,I,OArFU,WAAO,IAAD,EACK3W,mBAAS,IADd,mBACtBqQ,EADsB,KACXC,EADW,OAEKtQ,mBAAS,SAFd,mBAEtBL,EAFsB,KAEX4V,EAFW,OAGSvV,mBAAS,KAHlB,mBAGtB8V,EAHsB,KAGTc,EAHS,OAIS5W,mBAAS,UAJlB,mBAItB+V,EAJsB,KAITc,EAJS,KAM7B3W,qBAAU,YACc,uCAAG,sBAAAE,EAAA,sDACvBC,MAAM,4CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACnC,GACL,GAAkB,UAAdwB,EAAuB,CACzB,IAAMiK,EAAQzL,EAAK/D,KAAI,SAACoP,GAAD,MAAc,CACnC5S,GAAI4S,EAAQ/G,YAAYqU,KACxBhhB,MAAO0T,EAAQrK,UAEjBmR,EAAa1G,GACbgN,EAAe,KACfC,EAAe,UAEjB,GAAkB,WAAdlX,EAAwB,CAC1B,IAAMiK,EAAQzL,EAAK/D,KAAI,SAACoP,GAAD,MAAc,CACnC5S,GAAI4S,EAAQ/G,YAAYqU,KACxBhhB,MAAO0T,EAAQpG,WAEjBkN,EAAa1G,GACbgN,EAAe,KACfC,EAAe,UAEjB,GAAkB,cAAdlX,EAA2B,CAC7B,IAAMiK,EAAQzL,EAAK/D,KAAI,SAACoP,GAAD,MAAc,CACnC5S,GAAI4S,EAAQ/G,YAAYqU,KACxBhhB,MAAO0T,EAAQtG,cAEjBoN,EAAa1G,GACbgN,EAAe,KACfC,EAAe,UAGjBrX,QAAQC,IAAIE,MAhCO,2CAAH,qDAoCtBkL,KACC,CAAClL,IAEJH,QAAQC,IAAI4Q,GAEZ,IAAM0G,EAAgB,uCAAG,WAAOxgB,GAAP,SAAA6J,EAAA,sDACvBmV,EAAahf,EAAE8K,OAAOvL,OADC,2CAAH,sDAItB,OACE,yBAAKgD,UAAU,sBACb,kBAAC,KAAD,KACE,kBAACyJ,GAAA,EAAD,KACE,yBAAKzJ,UAAU,mBACb,0BAAMA,UAAU,kBAAhB,iBACA,kBAACmI,GAAA,EAAD,CAAanI,UAAU,qBACrB,kBAACoI,GAAA,EAAD,CACEC,QAAQ,WACRrL,MAAO6J,EACPhE,SAAUob,EACVje,UAAU,mBAEV,kBAACyI,GAAA,EAAD,CAAUzL,MAAM,SAAhB,SACA,kBAACyL,GAAA,EAAD,CAAUzL,MAAM,UAAhB,UACA,kBAACyL,GAAA,EAAD,CAAUzL,MAAM,aAAhB,gBAKN,yBAAKvF,MAAO,CAAEU,OAAQ,MACpB,kBAAC,GAAD,CACEkN,KAAMkS,EACNyF,YAAaA,EACbC,YAAaA,UC1CZiB,GAxBS,CACtB,CACErc,KAAM,aACNI,KAAM,qBACND,KAAM,cACN+L,UAAWqH,GACXxT,OAAQ,UAEV,CACEC,KAAM,QACNI,KAAM,wBACND,KAAM,iBACN+L,UAAW2M,GACX9Y,OAAQ,UAEV,CACEC,KAAM,SACNI,KAAM,eACND,KAAM,eACN+L,U,uKC9BA,OACE,yBAAK/N,UAAU,WACb,kBAACC,EAAA,EAAD,CAAMT,OAAK,GACT,kBAACkJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACP,4BACE,0DAEF,kBAAC,GAAD,OAGF,kBAACD,EAAA,EAAD,CAAKC,GAAI,IACP,kBAAC,GAAD,c,GAdU1K,aDiCpB0D,OAAQ,W,qBEsGGuc,G,kDAhIb,WAAY/f,GAAQ,IAAD,8BACjB,cAAMA,IASRggB,wBAA0B,SAACvmB,GACzB,IACIwmB,EACJ,OAFY/O,KAAKgP,MAAsB,EAAhBhP,KAAKiP,SAAe,IAGzC,KAAK,EACHF,EAAQ,UACR,MACF,KAAK,EACHA,EAAQ,UACR,MACF,KAAK,EACHA,EAAQ,QACR,MACF,KAAK,EACHA,EAAQ,OAKZ,EAAK9f,MAAMigB,oBAAoBC,gBAAgB,CAC7Cxa,MAAO,0BAAMya,cAAY,OAAO1e,UAAU,eAC1CuY,QACE,2CACa,iDADb,0BAIF8F,MAAOA,EACPxmB,SAAUA,EACV8mB,YAAa,MAtCE,EAyCnBC,UAAY,SAACvd,GACX,OAAOA,EAAOC,KAAI,SAACC,EAAMC,GACvB,MAAoB,WAAhBD,EAAKK,OAEL,kBAAC,IAAD,CACEC,KAAMN,EAAKK,OAASL,EAAKM,KACzBgd,OAAQ,SAACzgB,GAAD,OACN,kBAACmD,EAAKwM,UAAN,iBACM3P,EADN,CAEEiE,YAAa,EAAK+b,4BAGtB5c,IAAKA,IAIF,SAzDM,EA6DnBsd,aAAe,SAACjd,GACd,IAAK,IAAIwT,EAAI,EAAGA,EAAIhU,GAAOuG,OAAQyN,IACjC,IAGS,IAFP,EAAKjX,MAAMmC,SAASC,SAASC,QAC3BY,GAAOgU,GAAGzT,OAASP,GAAOgU,GAAGxT,MAG/B,OAAOR,GAAOgU,GAAGpT,KAGrB,MAAO,SAvEU,EAyEnB8c,iBAAmB,SAACje,GAClB,EAAKpC,SAAS,CAAEoC,MAAOA,KA1EN,EA4EnBke,iBAAmB,SAACtmB,GAClB,EAAKgG,SAAS,CAAEhG,MAAOA,KA7EN,EA+EnBumB,eAAiB,SAAChe,GAChB,EAAKvC,SAAS,CAAEuC,SAAUA,KAhFT,EAkFnBie,iBAAmB,WACe,aAA5B,EAAK3gB,MAAM4gB,aACb,EAAKzgB,SAAS,CAAEygB,aAAc,gCAE9B,EAAKzgB,SAAS,CAAEygB,aAAc,cApFhC,EAAK5gB,MAAQ,CACXigB,oBAAqB,KACrB1d,MAAOA,KACPpI,MAAO,QACPuI,UAAU,EACVke,aAAc,+BAPC,E,4GA0FA1hB,GAEfnG,OAAO+I,WAAa,KACpB5C,EAAE2hB,QAAQ7e,SAASC,WAAa/C,EAAE8C,SAASC,WACiB,IAA5D5B,SAASC,gBAAgBmB,UAAUS,QAAQ,aAE3C7B,SAASC,gBAAgBC,UAAUC,OAAO,YAEnB,SAArBtB,EAAE2hB,QAAQC,SACZzgB,SAASC,gBAAgBygB,UAAY,EACrC1gB,SAAS2gB,iBAAiBD,UAAY,EACtC7gB,KAAK+gB,KAAKC,UAAUH,UAAY,K,+BAIlC,OACE,yBAAKtf,UAAU,WACb,kBAAC,IAAD,CAAoB0f,IAAI,qBAAqBjoB,MAAOA,UACpD,kBAAC,EAAD,iBACMgH,KAAKL,MADX,CAEEiD,OAAQA,GACRP,MAAOrC,KAAKF,MAAMuC,MAClBpI,MAAO+F,KAAKF,MAAM7F,MAClBuI,SAAUxC,KAAKF,MAAM0C,YAEvB,yBAAKnD,GAAG,aAAakC,UAAU,aAAa0f,IAAI,aAC9C,kBAACC,EAAD,iBACMlhB,KAAKL,MADX,CAEEuB,UAAWlB,KAAKqgB,aAAargB,KAAKL,MAAMmC,SAASC,aAEnD,kBAAC,IAAD,KAAS/B,KAAKmgB,UAAUvd,KACxB,kBAAC,EAAD,Y,GA1HUnD,aCgBpB0hB,IAASf,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOhd,KAAK,SAASgd,OAAQ,SAAAzgB,GAAK,OAAI,kBAAC,GAAgBA,MACvD,kBAAC,IAAD,CAAUoU,KAAK,IAAI1Q,GAAG,uBAG1BlD,SAASihB,eAAe,W","file":"static/js/main.a03f6ebd.chunk.js","sourcesContent":["var defaultWidth =\r\n  window.screen.width > 768\r\n    ? (window.screen.width * 1) / 3\r\n    : window.screen.width;\r\n\r\nvar style = {\r\n  Wrapper: {},\r\n  Containers: {\r\n    DefaultStyle: {\r\n      position: \"fixed\",\r\n      width: defaultWidth,\r\n      padding: \"10px 10px 10px 20px\",\r\n      zIndex: 9998,\r\n      WebkitBoxSizing: \"\",\r\n      MozBoxSizing: \"\",\r\n      boxSizing: \"\",\r\n      height: \"auto\",\r\n      display: \"inline-block\",\r\n      border: \"0\",\r\n      fontSize: \"14px\",\r\n      WebkitFontSmoothing: \"antialiased\",\r\n      fontFamily: '\"Roboto\",\"Helvetica Neue\",Arial,sans-serif',\r\n      fontWeight: \"400\",\r\n      color: \"#FFFFFF\",\r\n    },\r\n\r\n    tl: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"0px\",\r\n      right: \"auto\",\r\n    },\r\n\r\n    tr: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      left: \"auto\",\r\n      right: \"0px\",\r\n    },\r\n\r\n    tc: {\r\n      top: \"0px\",\r\n      bottom: \"auto\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2),\r\n    },\r\n\r\n    bl: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"0px\",\r\n      right: \"auto\",\r\n    },\r\n\r\n    br: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      left: \"auto\",\r\n      right: \"0px\",\r\n    },\r\n\r\n    bc: {\r\n      top: \"auto\",\r\n      bottom: \"0px\",\r\n      margin: \"0 auto\",\r\n      left: \"50%\",\r\n      marginLeft: -(defaultWidth / 2),\r\n    },\r\n  },\r\n\r\n  NotificationItem: {\r\n    DefaultStyle: {\r\n      position: \"relative\",\r\n      width: \"100%\",\r\n      cursor: \"pointer\",\r\n      borderRadius: \"4px\",\r\n      fontSize: \"14px\",\r\n      margin: \"10px 0 0\",\r\n      padding: \"10px\",\r\n      display: \"block\",\r\n      WebkitBoxSizing: \"border-box\",\r\n      MozBoxSizing: \"border-box\",\r\n      boxSizing: \"border-box\",\r\n      opacity: 0,\r\n      transition: \"all 0.5s ease-in-out\",\r\n      WebkitTransform: \"translate3d(0, 0, 0)\",\r\n      transform: \"translate3d(0, 0, 0)\",\r\n      willChange: \"transform, opacity\",\r\n\r\n      isHidden: {\r\n        opacity: 0,\r\n      },\r\n\r\n      isVisible: {\r\n        opacity: 1,\r\n      },\r\n    },\r\n\r\n    success: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#a1e82c\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0,\r\n    },\r\n\r\n    error: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#fc727a\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0,\r\n    },\r\n\r\n    warning: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#ffbc67\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0,\r\n    },\r\n\r\n    info: {\r\n      borderTop: 0,\r\n      backgroundColor: \"#63d8f1\",\r\n      WebkitBoxShadow: 0,\r\n      MozBoxShadow: 0,\r\n      boxShadow: 0,\r\n    },\r\n  },\r\n\r\n  Title: {\r\n    DefaultStyle: {\r\n      fontSize: \"30px\",\r\n      margin: \"0\",\r\n      padding: 0,\r\n      fontWeight: \"bold\",\r\n      color: \"#FFFFFF\",\r\n      display: \"block\",\r\n      left: \"15px\",\r\n      position: \"absolute\",\r\n      top: \"50%\",\r\n      marginTop: \"-15px\",\r\n    },\r\n  },\r\n\r\n  MessageWrapper: {\r\n    DefaultStyle: {\r\n      marginLeft: \"55px\",\r\n      marginRight: \"30px\",\r\n      padding: \"0 12px 0 0\",\r\n      color: \"#FFFFFF\",\r\n      maxWidthwidth: \"89%\",\r\n    },\r\n  },\r\n\r\n  Dismiss: {\r\n    DefaultStyle: {\r\n      fontFamily: \"inherit\",\r\n      fontSize: \"21px\",\r\n      color: \"#000\",\r\n      float: \"right\",\r\n      position: \"absolute\",\r\n      right: \"10px\",\r\n      top: \"50%\",\r\n      marginTop: \"-13px\",\r\n      backgroundColor: \"#FFFFFF\",\r\n      display: \"block\",\r\n      borderRadius: \"50%\",\r\n      opacity: \".4\",\r\n      lineHeight: \"11px\",\r\n      width: \"25px\",\r\n      height: \"25px\",\r\n      outline: \"0 !important\",\r\n      textAlign: \"center\",\r\n      padding: \"6px 3px 3px 3px\",\r\n      fontWeight: \"300\",\r\n      marginLeft: \"65px\",\r\n    },\r\n\r\n    success: {\r\n      // color: '#f0f5ea',\r\n      // backgroundColor: '#a1e82c'\r\n    },\r\n\r\n    error: {\r\n      // color: '#f4e9e9',\r\n      // backgroundColor: '#fc727a'\r\n    },\r\n\r\n    warning: {\r\n      // color: '#f9f6f0',\r\n      // backgroundColor: '#ffbc67'\r\n    },\r\n\r\n    info: {\r\n      // color: '#e8f0f4',\r\n      // backgroundColor: '#63d8f1'\r\n    },\r\n  },\r\n\r\n  Action: {\r\n    DefaultStyle: {\r\n      background: \"#ffffff\",\r\n      borderRadius: \"2px\",\r\n      padding: \"6px 20px\",\r\n      fontWeight: \"bold\",\r\n      margin: \"10px 0 0 0\",\r\n      border: 0,\r\n    },\r\n\r\n    success: {\r\n      backgroundColor: \"#a1e82c\",\r\n      color: \"#ffffff\",\r\n    },\r\n\r\n    error: {\r\n      backgroundColor: \"#fc727a\",\r\n      color: \"#ffffff\",\r\n    },\r\n\r\n    warning: {\r\n      backgroundColor: \"#ffbc67\",\r\n      color: \"#ffffff\",\r\n    },\r\n\r\n    info: {\r\n      backgroundColor: \"#63d8f1\",\r\n      color: \"#ffffff\",\r\n    },\r\n  },\r\n\r\n  ActionWrapper: {\r\n    DefaultStyle: {\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n  },\r\n};\r\n\r\n//\r\n// //\r\n// // // For tables\r\n// //\r\n//\r\nconst thArray = [\"ID\", \"Name\", \"Salary\", \"Country\", \"City\"];\r\nconst tdArray = [\r\n  [\"1\", \"Dakota Rice\", \"$36,738\", \"Niger\", \"Oud-Turnhout\"],\r\n  [\"2\", \"Minerva Hooper\", \"$23,789\", \"Curaçao\", \"Sinaai-Waas\"],\r\n  [\"3\", \"Sage Rodriguez\", \"$56,142\", \"Netherlands\", \"Baileux\"],\r\n  [\"4\", \"Philip Chaney\", \"$38,735\", \"Korea, South\", \"Overland Park\"],\r\n  [\"5\", \"Doris Greene\", \"$63,542\", \"Malawi\", \"Feldkirchen in Kärnten\"],\r\n  [\"6\", \"Mason Porter\", \"$78,615\", \"Chile\", \"Gloucester\"],\r\n];\r\n\r\n//\r\n// //\r\n// // // For icons\r\n// //\r\n//\r\nconst iconsArray = [\r\n  \"pe-7s-album\",\r\n  \"pe-7s-arc\",\r\n  \"pe-7s-back-2\",\r\n  \"pe-7s-bandaid\",\r\n  \"pe-7s-car\",\r\n  \"pe-7s-diamond\",\r\n  \"pe-7s-door-lock\",\r\n  \"pe-7s-eyedropper\",\r\n  \"pe-7s-female\",\r\n  \"pe-7s-gym\",\r\n  \"pe-7s-hammer\",\r\n  \"pe-7s-headphones\",\r\n  \"pe-7s-helm\",\r\n  \"pe-7s-hourglass\",\r\n  \"pe-7s-leaf\",\r\n  \"pe-7s-magic-wand\",\r\n  \"pe-7s-male\",\r\n  \"pe-7s-map-2\",\r\n  \"pe-7s-next-2\",\r\n  \"pe-7s-paint-bucket\",\r\n  \"pe-7s-pendrive\",\r\n  \"pe-7s-photo\",\r\n  \"pe-7s-piggy\",\r\n  \"pe-7s-plugin\",\r\n  \"pe-7s-refresh-2\",\r\n  \"pe-7s-rocket\",\r\n  \"pe-7s-settings\",\r\n  \"pe-7s-shield\",\r\n  \"pe-7s-smile\",\r\n  \"pe-7s-usb\",\r\n  \"pe-7s-vector\",\r\n  \"pe-7s-wine\",\r\n  \"pe-7s-cloud-upload\",\r\n  \"pe-7s-cash\",\r\n  \"pe-7s-close\",\r\n  \"pe-7s-bluetooth\",\r\n  \"pe-7s-cloud-download\",\r\n  \"pe-7s-way\",\r\n  \"pe-7s-close-circle\",\r\n  \"pe-7s-id\",\r\n  \"pe-7s-angle-up\",\r\n  \"pe-7s-wristwatch\",\r\n  \"pe-7s-angle-up-circle\",\r\n  \"pe-7s-world\",\r\n  \"pe-7s-angle-right\",\r\n  \"pe-7s-volume\",\r\n  \"pe-7s-angle-right-circle\",\r\n  \"pe-7s-users\",\r\n  \"pe-7s-angle-left\",\r\n  \"pe-7s-user-female\",\r\n  \"pe-7s-angle-left-circle\",\r\n  \"pe-7s-up-arrow\",\r\n  \"pe-7s-angle-down\",\r\n  \"pe-7s-switch\",\r\n  \"pe-7s-angle-down-circle\",\r\n  \"pe-7s-scissors\",\r\n  \"pe-7s-wallet\",\r\n  \"pe-7s-safe\",\r\n  \"pe-7s-volume2\",\r\n  \"pe-7s-volume1\",\r\n  \"pe-7s-voicemail\",\r\n  \"pe-7s-video\",\r\n  \"pe-7s-user\",\r\n  \"pe-7s-upload\",\r\n  \"pe-7s-unlock\",\r\n  \"pe-7s-umbrella\",\r\n  \"pe-7s-trash\",\r\n  \"pe-7s-tools\",\r\n  \"pe-7s-timer\",\r\n  \"pe-7s-ticket\",\r\n  \"pe-7s-target\",\r\n  \"pe-7s-sun\",\r\n  \"pe-7s-study\",\r\n  \"pe-7s-stopwatch\",\r\n  \"pe-7s-star\",\r\n  \"pe-7s-speaker\",\r\n  \"pe-7s-signal\",\r\n  \"pe-7s-shuffle\",\r\n  \"pe-7s-shopbag\",\r\n  \"pe-7s-share\",\r\n  \"pe-7s-server\",\r\n  \"pe-7s-search\",\r\n  \"pe-7s-film\",\r\n  \"pe-7s-science\",\r\n  \"pe-7s-disk\",\r\n  \"pe-7s-ribbon\",\r\n  \"pe-7s-repeat\",\r\n  \"pe-7s-refresh\",\r\n  \"pe-7s-add-user\",\r\n  \"pe-7s-refresh-cloud\",\r\n  \"pe-7s-paperclip\",\r\n  \"pe-7s-radio\",\r\n  \"pe-7s-note2\",\r\n  \"pe-7s-print\",\r\n  \"pe-7s-network\",\r\n  \"pe-7s-prev\",\r\n  \"pe-7s-mute\",\r\n  \"pe-7s-power\",\r\n  \"pe-7s-medal\",\r\n  \"pe-7s-portfolio\",\r\n  \"pe-7s-like2\",\r\n  \"pe-7s-plus\",\r\n  \"pe-7s-left-arrow\",\r\n  \"pe-7s-play\",\r\n  \"pe-7s-key\",\r\n  \"pe-7s-plane\",\r\n  \"pe-7s-joy\",\r\n  \"pe-7s-photo-gallery\",\r\n  \"pe-7s-pin\",\r\n  \"pe-7s-phone\",\r\n  \"pe-7s-plug\",\r\n  \"pe-7s-pen\",\r\n  \"pe-7s-right-arrow\",\r\n  \"pe-7s-paper-plane\",\r\n  \"pe-7s-delete-user\",\r\n  \"pe-7s-paint\",\r\n  \"pe-7s-bottom-arrow\",\r\n  \"pe-7s-notebook\",\r\n  \"pe-7s-note\",\r\n  \"pe-7s-next\",\r\n  \"pe-7s-news-paper\",\r\n  \"pe-7s-musiclist\",\r\n  \"pe-7s-music\",\r\n  \"pe-7s-mouse\",\r\n  \"pe-7s-more\",\r\n  \"pe-7s-moon\",\r\n  \"pe-7s-monitor\",\r\n  \"pe-7s-micro\",\r\n  \"pe-7s-menu\",\r\n  \"pe-7s-map\",\r\n  \"pe-7s-map-marker\",\r\n  \"pe-7s-mail\",\r\n  \"pe-7s-mail-open\",\r\n  \"pe-7s-mail-open-file\",\r\n  \"pe-7s-magnet\",\r\n  \"pe-7s-loop\",\r\n  \"pe-7s-look\",\r\n  \"pe-7s-lock\",\r\n  \"pe-7s-lintern\",\r\n  \"pe-7s-link\",\r\n  \"pe-7s-like\",\r\n  \"pe-7s-light\",\r\n  \"pe-7s-less\",\r\n  \"pe-7s-keypad\",\r\n  \"pe-7s-junk\",\r\n  \"pe-7s-info\",\r\n  \"pe-7s-home\",\r\n  \"pe-7s-help2\",\r\n  \"pe-7s-help1\",\r\n  \"pe-7s-graph3\",\r\n  \"pe-7s-graph2\",\r\n  \"pe-7s-graph1\",\r\n  \"pe-7s-graph\",\r\n  \"pe-7s-global\",\r\n  \"pe-7s-gleam\",\r\n  \"pe-7s-glasses\",\r\n  \"pe-7s-gift\",\r\n  \"pe-7s-folder\",\r\n  \"pe-7s-flag\",\r\n  \"pe-7s-filter\",\r\n  \"pe-7s-file\",\r\n  \"pe-7s-expand1\",\r\n  \"pe-7s-exapnd2\",\r\n  \"pe-7s-edit\",\r\n  \"pe-7s-drop\",\r\n  \"pe-7s-drawer\",\r\n  \"pe-7s-download\",\r\n  \"pe-7s-display2\",\r\n  \"pe-7s-display1\",\r\n  \"pe-7s-diskette\",\r\n  \"pe-7s-date\",\r\n  \"pe-7s-cup\",\r\n  \"pe-7s-culture\",\r\n  \"pe-7s-crop\",\r\n  \"pe-7s-credit\",\r\n  \"pe-7s-copy-file\",\r\n  \"pe-7s-config\",\r\n  \"pe-7s-compass\",\r\n  \"pe-7s-comment\",\r\n  \"pe-7s-coffee\",\r\n  \"pe-7s-cloud\",\r\n  \"pe-7s-clock\",\r\n  \"pe-7s-check\",\r\n  \"pe-7s-chat\",\r\n  \"pe-7s-cart\",\r\n  \"pe-7s-camera\",\r\n  \"pe-7s-call\",\r\n  \"pe-7s-calculator\",\r\n  \"pe-7s-browser\",\r\n  \"pe-7s-box2\",\r\n  \"pe-7s-box1\",\r\n  \"pe-7s-bookmarks\",\r\n  \"pe-7s-bicycle\",\r\n  \"pe-7s-bell\",\r\n  \"pe-7s-battery\",\r\n  \"pe-7s-ball\",\r\n  \"pe-7s-back\",\r\n  \"pe-7s-attention\",\r\n  \"pe-7s-anchor\",\r\n  \"pe-7s-albums\",\r\n  \"pe-7s-alarm\",\r\n  \"pe-7s-airplay\",\r\n];\r\n\r\n//\r\n// //\r\n// // // // For dashboard's charts\r\n// //\r\n//\r\n// Data for Pie Chart\r\nvar dataPie = {\r\n  labels: [\"40%\", \"20%\", \"40%\"],\r\n  series: [40, 20, 40],\r\n};\r\nvar legendPie = {\r\n  names: [\"Open\", \"Bounce\", \"Unsubscribe\"],\r\n  types: [\"info\", \"danger\", \"warning\"],\r\n};\r\n\r\n// Data for Line Chart\r\nvar dataSales = {\r\n  labels: [\r\n    \"9:00AM\",\r\n    \"12:00AM\",\r\n    \"3:00PM\",\r\n    \"6:00PM\",\r\n    \"9:00PM\",\r\n    \"12:00PM\",\r\n    \"3:00AM\",\r\n    \"6:00AM\",\r\n  ],\r\n  series: [\r\n    [287, 385, 490, 492, 554, 586, 698, 695],\r\n    [67, 152, 143, 240, 287, 335, 435, 437],\r\n    [23, 113, 67, 108, 190, 239, 307, 308],\r\n  ],\r\n};\r\nvar optionsSales = {\r\n  low: 0,\r\n  high: 800,\r\n  showArea: false,\r\n  height: \"245px\",\r\n  axisX: {\r\n    showGrid: false,\r\n  },\r\n  lineSmooth: true,\r\n  showLine: true,\r\n  showPoint: true,\r\n  fullWidth: true,\r\n  chartPadding: {\r\n    right: 50,\r\n  },\r\n};\r\nvar responsiveSales = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      axisX: {\r\n        labelInterpolationFnc: function (value) {\r\n          return value[0];\r\n        },\r\n      },\r\n    },\r\n  ],\r\n];\r\nvar legendSales = {\r\n  names: [\"Open\", \"Click\", \"Click Second Time\"],\r\n  types: [\"info\", \"danger\", \"warning\"],\r\n};\r\n\r\n// Data for Bar Chart\r\nvar dataBar = {\r\n  labels: [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"Mai\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ],\r\n  series: [\r\n    [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895],\r\n    [412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636, 695],\r\n  ],\r\n};\r\nvar optionsBar = {\r\n  seriesBarDistance: 10,\r\n  axisX: {\r\n    showGrid: false,\r\n  },\r\n  height: \"245px\",\r\n};\r\nvar responsiveBar = [\r\n  [\r\n    \"screen and (max-width: 640px)\",\r\n    {\r\n      seriesBarDistance: 5,\r\n      axisX: {\r\n        labelInterpolationFnc: function (value) {\r\n          return value[0];\r\n        },\r\n      },\r\n    },\r\n  ],\r\n];\r\nvar legendBar = {\r\n  names: [\"Tesla Model S\", \"BMW 5 Series\"],\r\n  types: [\"info\", \"danger\"],\r\n};\r\n\r\nmodule.exports = {\r\n  style, // For notifications (App container and Notifications view)\r\n  thArray,\r\n  tdArray, // For tables (TableList view)\r\n  iconsArray, // For icons (Icons view)\r\n  dataPie,\r\n  legendPie,\r\n  dataSales,\r\n  optionsSales,\r\n  responsiveSales,\r\n  legendSales,\r\n  dataBar,\r\n  optionsBar,\r\n  responsiveBar,\r\n  legendBar, // For charts (Dashboard view)\r\n};\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 531;","module.exports = __webpack_public_path__ + \"static/media/reactlogo.f173f966.png\";","module.exports = __webpack_public_path__ + \"static/media/face-3.ce7a6b79.jpg\";","module.exports = __webpack_public_path__ + \"static/media/virus.13a9fbc1.png\";","module.exports = __webpack_public_path__ + \"static/media/patient.d6882a51.png\";","module.exports = __webpack_public_path__ + \"static/media/toxic.3c47a5d7.png\";","module.exports = __webpack_public_path__ + \"static/media/chemistry.626d3a56.png\";","module.exports = __webpack_public_path__ + \"static/media/virus2.0fb82262.png\";","module.exports = __webpack_public_path__ + \"static/media/sidebar-3.0107dd9e.jpg\";","import React, { Component } from \"react\";\r\nimport { Nav } from \"react-bootstrap\";\r\n\r\nclass AdminNavbarLinks extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav></Nav>\r\n        <Nav pullRight></Nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminNavbarLinks;\r\n","import React, { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nimport AdminNavbarLinks from \"./AdminNavbarLinks.jsx\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mobileSidebarToggle = this.mobileSidebarToggle.bind(this);\r\n    this.state = {\r\n      sidebarExists: false,\r\n    };\r\n  }\r\n  mobileSidebarToggle(e) {\r\n    if (this.state.sidebarExists === false) {\r\n      this.setState({\r\n        sidebarExists: true,\r\n      });\r\n    }\r\n    e.preventDefault();\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    var node = document.createElement(\"div\");\r\n    node.id = \"bodyClick\";\r\n    node.onclick = function () {\r\n      this.parentElement.removeChild(this);\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    };\r\n    document.body.appendChild(node);\r\n  }\r\n  render() {\r\n    return (\r\n      <Navbar fluid>\r\n        <Navbar.Header>\r\n          <Navbar.Brand>\r\n            <a href='#pablo'>{this.props.brandText}</a>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle onClick={this.mobileSidebarToggle} />\r\n        </Navbar.Header>\r\n        <Navbar.Collapse>\r\n          <AdminNavbarLinks />\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Grid } from \"react-bootstrap\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className='footer'>\r\n        <Grid fluid>\r\n          <p className='copyright pull-right'>\r\n            &copy; {new Date().getFullYear()} <a href='#'>Robolyx</a>\r\n            Stay Informed, Stay Safe\r\n          </p>\r\n        </Grid>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Slidebar.css\";\r\n\r\nimport AdminNavbarLinks from \"../Navbars/AdminNavbarLinks.jsx\";\r\n\r\nimport logo from \"assets/img/reactlogo.png\";\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      width: window.innerWidth,\r\n    };\r\n  }\r\n  activeRoute(routeName) {\r\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\r\n  }\r\n  updateDimensions() {\r\n    this.setState({ width: window.innerWidth });\r\n  }\r\n  componentDidMount() {\r\n    this.updateDimensions();\r\n    window.addEventListener(\"resize\", this.updateDimensions.bind(this));\r\n  }\r\n  render() {\r\n    const sidebarBackground = {\r\n      backgroundImage: \"url(\" + this.props.image + \")\",\r\n    };\r\n    return (\r\n      <div\r\n        id='sidebar'\r\n        className='sidebar'\r\n        data-color={this.props.color}\r\n        data-image={this.props.image}\r\n      >\r\n        {this.props.hasImage ? (\r\n          <div className='sidebar-background' style={sidebarBackground} />\r\n        ) : null}\r\n        <div className='logo'>\r\n          <a href='#' className='simple-text logo-mini'>\r\n            <div className='logo-img'>\r\n              <img src={logo} alt='logo_image' />\r\n            </div>\r\n          </a>\r\n          <a href='#' className='simple-text logo-normal'>\r\n            <div className='robo_name'>\r\n              <span style={{ fontSize: 8 }}>Powered By</span>\r\n              <span className='robolyx'>Robolyx</span>\r\n            </div>\r\n          </a>\r\n        </div>\r\n        <div className='sidebar-wrapper'>\r\n          <ul className='nav'>\r\n            {this.state.width <= 991 ? <AdminNavbarLinks /> : null}\r\n            {this.props.routes.map((prop, key) => {\r\n              if (!prop.redirect)\r\n                return (\r\n                  <li\r\n                    className={\r\n                      prop.upgrade\r\n                        ? \"active active-pro\"\r\n                        : this.activeRoute(prop.layout + prop.path)\r\n                    }\r\n                    key={key}\r\n                  >\r\n                    <NavLink\r\n                      to={prop.layout + prop.path}\r\n                      className='nav-link'\r\n                      activeClassName='active'\r\n                    >\r\n                      <i className={prop.icon} />\r\n                      <p>{prop.name}</p>\r\n                    </NavLink>\r\n                  </li>\r\n                );\r\n              return null;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport \"./card.css\";\r\nimport { Clearfix } from \"react-bootstrap\";\r\nimport kk from \"../../assets/img/faces/face-3.jpg\";\r\n\r\nexport class Card extends Component {\r\n  render() {\r\n    return (\r\n      <div className={\"card\" + (this.props.plain ? \" card-plain\" : \"\")}>\r\n        <div className={\"header\" + (this.props.hCenter ? \" text-center\" : \"\")}>\r\n          <div className='card__header'>\r\n            <img style={{ height: 35, padding: 0, margin: 0 }} src={kk} />\r\n\r\n            <div>\r\n              <h4 className='title'>{this.props.title}</h4>\r\n              <p className='category'>{this.props.category}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={\r\n            \"content\" +\r\n            (this.props.ctAllIcons ? \" all-icons\" : \"\") +\r\n            (this.props.ctTableFullWidth ? \" table-full-width\" : \"\") +\r\n            (this.props.ctTableResponsive ? \" table-responsive\" : \"\") +\r\n            (this.props.ctTableUpgrade ? \" table-upgrade\" : \"\")\r\n          }\r\n        >\r\n          {this.props.content}\r\n\r\n          <div className='footer'>\r\n            {this.props.legend}\r\n            {this.props.stats != null ? <hr /> : \"\"}\r\n            <div className='stats'>\r\n              <i className={this.props.statsIcon} /> {this.props.stats}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { Component } from \"react\";\r\n\r\nclass CustomCheckbox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      is_checked: props.isChecked ? true : false\r\n    };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  handleClick() {\r\n    this.setState({ is_checked: !this.state.is_checked });\r\n  }\r\n  render() {\r\n    const { isChecked, number, label, inline, ...rest } = this.props;\r\n    const classes =\r\n      inline !== undefined ? \"checkbox checkbox-inline\" : \"checkbox\";\r\n    return (\r\n      <div className={classes}>\r\n        <input\r\n          id={number}\r\n          type=\"checkbox\"\r\n          onChange={this.handleClick}\r\n          checked={this.state.is_checked}\r\n          {...rest}\r\n        />\r\n        <label htmlFor={number}>{label}</label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomCheckbox;\r\n","/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React, { Component } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport cx from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass CustomButton extends Component {\r\n  render() {\r\n    const { fill, simple, pullRight, round, block, ...rest } = this.props;\r\n\r\n    const btnClasses = cx({\r\n      \"btn-fill\": fill,\r\n      \"btn-simple\": simple,\r\n      \"pull-right\": pullRight,\r\n      \"btn-block\": block,\r\n      \"btn-round\": round\r\n    });\r\n\r\n    return <Button className={btnClasses} {...rest} />;\r\n  }\r\n}\r\n\r\nCustomButton.propTypes = {\r\n  fill: PropTypes.bool,\r\n  simple: PropTypes.bool,\r\n  pullRight: PropTypes.bool,\r\n  block: PropTypes.bool,\r\n  round: PropTypes.bool\r\n};\r\n\r\nexport default CustomButton;\r\n","import React, { Component } from \"react\";\r\nimport { Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport Checkbox from \"components/CustomCheckbox/CustomCheckbox.jsx\";\r\nimport Button from \"components/CustomButton/CustomButton.jsx\";\r\n\r\nexport class Tasks extends Component {\r\n  handleCheckbox = (event) => {\r\n    const target = event.target;\r\n    console.log(event.target);\r\n    this.setState({\r\n      [target.name]: target.checked,\r\n    });\r\n  };\r\n  render() {\r\n    const edit = <Tooltip id='edit_tooltip'>Edit Task</Tooltip>;\r\n    const remove = <Tooltip id='remove_tooltip'>Remove</Tooltip>;\r\n    const tasks_title = [\r\n      'Sign contract for \"What are conference organizers afraid of?\"',\r\n      \"Lines From Great Russian Literature? Or E-mails From My Boss?\",\r\n      \"Flooded: One year later, assessing what was lost and what was found when a ravaging rain swept through metro Detroi\",\r\n      \"Create 4 Invisible User Experiences you Never Knew About\",\r\n      'Read \"Following makes Medium better\"',\r\n      \"Unfollow 5 enemies from twitter\",\r\n    ];\r\n    var tasks = [];\r\n    var number;\r\n    for (var i = 0; i < tasks_title.length; i++) {\r\n      number = \"checkbox\" + i;\r\n      tasks.push(\r\n        <tr key={i}>\r\n          <td>\r\n            <Checkbox\r\n              number={number}\r\n              isChecked={i === 1 || i === 2 ? true : false}\r\n            />\r\n          </td>\r\n          <td>{tasks_title[i]}</td>\r\n          <td className='td-actions text-right'>\r\n            <OverlayTrigger placement='top' overlay={edit}>\r\n              <Button bsStyle='info' simple type='button' bsSize='xs'>\r\n                <i className='fa fa-edit' />\r\n              </Button>\r\n            </OverlayTrigger>\r\n\r\n            <OverlayTrigger placement='top' overlay={remove}>\r\n              <Button bsStyle='danger' simple type='button' bsSize='xs'>\r\n                <i className='fa fa-times' />\r\n              </Button>\r\n            </OverlayTrigger>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    return <tbody>{tasks}</tbody>;\r\n  }\r\n}\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport \"./cardtrend.css\";\r\nimport vir from \"../../assets/img/faces/virus.png\";\r\nimport pat from \"../../assets/img/faces/patient.png\";\r\nimport death from \"../../assets/img/faces/toxic.png\";\r\nimport deathrate from \"../../assets/img/faces/chemistry.png\";\r\nimport virus2 from \"../../assets/img/faces/virus2.png\";\r\n\r\nconst CardTrend = ({ ...props }) => (\r\n  <div className={\"card\" + (props.plain ? \" card-plain\" : \"\")}>\r\n    <div className={\"header\" + (props.hCenter ? \" text-center\" : \"\")}>\r\n      <div className='card__header'>\r\n        {props.img_url === \"virus\" ? (\r\n          <img\r\n            style={{ height: 35, width: 35, padding: 4, margin: 0 }}\r\n            src={vir}\r\n          />\r\n        ) : props.img_url === \"death\" ? (\r\n          <img\r\n            style={{ height: 35, width: 35, padding: 4, margin: 0 }}\r\n            src={death}\r\n          />\r\n        ) : props.img_url === \"pat\" ? (\r\n          <img\r\n            style={{ height: 35, width: 35, padding: 4, margin: 0 }}\r\n            src={pat}\r\n          />\r\n        ) : props.img_url === \"deathrate\" ? (\r\n          <img\r\n            style={{ height: 35, width: 35, padding: 4, margin: 0 }}\r\n            src={deathrate}\r\n          />\r\n        ) : props.img_url === \"virus2\" ? (\r\n          <img\r\n            style={{ height: 35, width: 35, padding: 4, margin: 0 }}\r\n            src={virus2}\r\n          />\r\n        ) : null}\r\n\r\n        <div>\r\n          <h4 className='title'>{props.title}</h4>\r\n          <p className='category'>{props.category}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div\r\n      className={\r\n        \"content\" +\r\n        (props.ctAllIcons ? \" all-icons\" : \"\") +\r\n        (props.ctTableFullWidth ? \" table-full-width\" : \"\") +\r\n        (props.ctTableResponsive ? \" table-responsive\" : \"\") +\r\n        (props.ctTableUpgrade ? \" table-upgrade\" : \"\")\r\n      }\r\n    >\r\n      {props.content}\r\n\r\n      <div className='footer'>\r\n        {props.legend}\r\n        {props.stats != null ? <hr /> : \"\"}\r\n        <div className='stats'>\r\n          <i className={props.statsIcon} /> {props.stats}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default CardTrend;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\nimport \"./linegraph.css\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildDeathRate = (data) => {\r\n  let chartData1 = [];\r\n  for (let date in data.cases) {\r\n    let newDataPoint = {\r\n      x: date,\r\n      y: (data[\"deaths\"][date] / data[\"recovered\"][date]) * 100,\r\n    };\r\n    chartData1.push(newDataPoint);\r\n  }\r\n  console.log(chartData1);\r\n  return chartData1;\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType, noOfDays, ...props }) {\r\n  const [data, setData] = useState({});\r\n  console.log(props);\r\n  useEffect(() => {\r\n    if (props.deathRate) {\r\n      const fetchData = async () => {\r\n        await fetch(\r\n          `https://disease.sh/v3/covid-19/historical/all?lastdays=${noOfDays}`\r\n        )\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            let chartData = buildDeathRate(data, casesType);\r\n            setData(chartData);\r\n            console.log(chartData);\r\n            // buildChart(chartData);\r\n          });\r\n      };\r\n\r\n      fetchData();\r\n    } else {\r\n      const fetchData = async () => {\r\n        await fetch(\r\n          `https://disease.sh/v3/covid-19/historical/all?lastdays=${noOfDays}`\r\n        )\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          .then((data) => {\r\n            let chartData = buildChartData(data, casesType);\r\n            setData(chartData);\r\n            console.log(chartData);\r\n            // buildChart(chartData);\r\n          });\r\n      };\r\n\r\n      fetchData();\r\n    }\r\n  }, [casesType, noOfDays]);\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: `${props.lineCh_bgColor}`,\r\n                borderColor: `${props.lineCh_brColor}`,\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import { Row, Col } from \"react-bootstrap\";\r\nimport CardTrend from \"../CardTrend/CardTrend\";\r\nimport LineGraph from \"../LineGraph/LineGraph\";\r\nimport \"./dailychart.css\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { MenuItem, FormControl, Select } from \"@material-ui/core\";\r\n\r\nconst DailyChart = () => {\r\n  const [noOfDays, setNoOfDays] = useState(\"400\");\r\n\r\n  const onCountryChange = (e) => {\r\n    const noOfDaySelected = e.target.value;\r\n    setNoOfDays(noOfDaySelected);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='dailyChart_header'>\r\n        <span className='dailyChart_label'>Select No Of Days </span>\r\n        <FormControl className='dailyChart_dropdown'>\r\n          <Select\r\n            variant='outlined'\r\n            value={noOfDays}\r\n            onChange={onCountryChange}\r\n            style={{ maxHeight: \"40px\" }}\r\n          >\r\n            <MenuItem value='30'>30</MenuItem>\r\n            <MenuItem value='60'>60</MenuItem>\r\n            <MenuItem value='90'>90</MenuItem>\r\n            <MenuItem value='120'>120</MenuItem>\r\n            <MenuItem value='150'>150</MenuItem>\r\n            <MenuItem value='200'>200</MenuItem>\r\n            <MenuItem value='300'>300</MenuItem>\r\n            <MenuItem value='400'>400</MenuItem>\r\n            <MenuItem value='500'>500</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <Row>\r\n        <Col md={6}>\r\n          <CardTrend\r\n            statsIcon='fa fa-history'\r\n            id='chartHours'\r\n            title='Daily Covid Cases'\r\n            category='Cases Per Day'\r\n            stats='Updated 10 minutes ago'\r\n            img_url='virus'\r\n            content={\r\n              <div className='ct-chart'>\r\n                <LineGraph\r\n                  className='app__graph'\r\n                  casesType='cases'\r\n                  lineCh_bgColor='rgba(38, 84, 124, 0.5)'\r\n                  lineCh_brColor='#26547C'\r\n                  noOfDays={noOfDays}\r\n                />\r\n              </div>\r\n            }\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          <CardTrend\r\n            statsIcon='fa fa-history'\r\n            id='chartHours'\r\n            title='Daily Deaths'\r\n            category='Deaths Per Day'\r\n            stats='Updated 10 minutes ago'\r\n            img_url='death'\r\n            content={\r\n              <div className='ct-chart'>\r\n                <LineGraph\r\n                  className='app__graph'\r\n                  casesType='deaths'\r\n                  lineCh_bgColor='rgba(209, 73, 91, 0.5)'\r\n                  lineCh_brColor='#D1495B'\r\n                  noOfDays={noOfDays}\r\n                />\r\n              </div>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col md={6}>\r\n          <CardTrend\r\n            statsIcon='fa fa-history'\r\n            id='chartHours'\r\n            title='Daily Recovered Patients'\r\n            category='24 Hours performance'\r\n            stats='Updated 10 minutes ago'\r\n            img_url='pat'\r\n            content={\r\n              <div className='ct-chart'>\r\n                <LineGraph\r\n                  className='app__graph'\r\n                  casesType='recovered'\r\n                  lineCh_bgColor='rgba(27, 153, 139, 0.5)'\r\n                  lineCh_brColor='#1B998B'\r\n                  noOfDays={noOfDays}\r\n                />\r\n              </div>\r\n            }\r\n          />\r\n        </Col>\r\n        <Col md={6}>\r\n          <CardTrend\r\n            statsIcon='fa fa-history'\r\n            id='chartHours'\r\n            title='Death Rate'\r\n            category='Total Death / Total Recovered'\r\n            stats='Updated 10 minutes ago'\r\n            img_url='deathrate'\r\n            content={\r\n              <div className='ct-chart'>\r\n                <LineGraph\r\n                  className='app__graph'\r\n                  casesType='cases'\r\n                  deathRate\r\n                  lineCh_bgColor='rgba(237, 174, 73, 0.5)'\r\n                  lineCh_brColor='#EDAE49'\r\n                  noOfDays={noOfDays}\r\n                />\r\n              </div>\r\n            }\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyChart;\r\n","import React from \"react\";\r\nimport \"./mainstatscard.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nconst MainStatsCard = ({\r\n  cases1,\r\n  cases2,\r\n  cases3,\r\n  title,\r\n  subheading1,\r\n  subheading2,\r\n  subheading3,\r\n  imageUrl,\r\n  percentage1,\r\n  percentage2,\r\n  isRed,\r\n  isGreen,\r\n  ...props\r\n}) => (\r\n  <Card className=\"stats__card\">\r\n    <CardContent>\r\n      <div className=\"stats___header\">\r\n        <img className=\"stats__imgage\" src={imageUrl} alt=\"icon\" />\r\n        <h5 className=\"stats__title\" style={{ marginTop: 5 }}>\r\n          {title}\r\n        </h5>\r\n      </div>\r\n      <hr />\r\n      <div className=\"stats__cases\">{cases1}</div>\r\n      <div className=\"subheading\">{subheading1}</div>\r\n\r\n      <div className=\"left\">\r\n        <div>\r\n          <span className={`cases1 ${isGreen ? \"green\" : \"\"}`}>{cases2}</span>\r\n          {percentage1 ? <span className=\"percent\">({percentage1})</span> : \"\"}\r\n        </div>\r\n        <div className=\"subheading\">{subheading2}</div>\r\n      </div>\r\n\r\n      <div className=\"right\">\r\n        <div>\r\n          <span className={`cases1 ${isRed ? \"red\" : \"\"}`}>{cases3} </span>\r\n          {percentage2 ? <span className=\"percent\">({percentage2})</span> : \"\"}\r\n        </div>\r\n\r\n        <div className=\"subheading\">{subheading3}</div>\r\n      </div>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\nexport default MainStatsCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MainStatsCard from \"../MainStatsCard/MainStatsCard\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport numeral from \"numeral\";\r\n\r\nconst HeaderStats = () => {\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      });\r\n  }, []);\r\n\r\n  const mildCases =\r\n    parseInt(countryInfo.active) - parseInt(countryInfo.critical);\r\n  const casesWithOutcome =\r\n    parseInt(countryInfo.cases) - parseInt(countryInfo.active);\r\n\r\n  const mildPercentage = parseInt(mildCases) / parseInt(countryInfo.active);\r\n  const recoveredPercentage =\r\n    parseInt(countryInfo.recovered) / parseInt(casesWithOutcome);\r\n  const deathsPercentage =\r\n    parseInt(countryInfo.deaths) / parseInt(casesWithOutcome);\r\n\r\n  const criticalPercentage =\r\n    parseInt(countryInfo.critical) / parseInt(countryInfo.active);\r\n  console.log(criticalPercentage);\r\n\r\n  const prettyPrintStat = (stat) =>\r\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"TOTAL ACTIVE CASES\"\r\n          cases1={numeral(countryInfo.active).format(\"0,0\")}\r\n          subheading1=\"Total infected patients\"\r\n          cases2={numeral(mildCases).format(\"0,0\")}\r\n          subheading2=\"in Mild condition\"\r\n          cases3={numeral(countryInfo.critical).format(\"0,0\")}\r\n          subheading3=\"Serious/Critical\"\r\n          imageUrl=\"https://i.ibb.co/GQsmvsc/cell.png\"\r\n          percentage1={numeral(mildPercentage).format(\"0%\")}\r\n          percentage2={numeral(criticalPercentage).format(\"0%\")}\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"TOTAL CLOSED CASES\"\r\n          cases1={numeral(casesWithOutcome).format(\"0,0\")}\r\n          subheading1=\"Cases with an outcome\"\r\n          cases2={numeral(countryInfo.recovered).format(\"0,0\")}\r\n          subheading2=\"Recovered\"\r\n          cases3={numeral(countryInfo.deaths).format(\"0,0\")}\r\n          subheading3=\"Deaths\"\r\n          imageUrl=\"https://i.ibb.co/S5T920n/recovered.png\"\r\n          percentage1={numeral(recoveredPercentage).format(\"0%\")}\r\n          percentage2={numeral(deathsPercentage).format(\"0%\")}\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"TODAY CASES\"\r\n          cases1={numeral(countryInfo.todayCases).format(\"0,0\")}\r\n          subheading1=\"Active cases\"\r\n          cases2={numeral(countryInfo.todayRecovered).format(\"0,0\")}\r\n          subheading2=\"Recovered cases\"\r\n          cases3={numeral(countryInfo.todayDeaths).format(\"0,0\")}\r\n          subheading3=\"Deaths\"\r\n          imageUrl=\"https://i.ibb.co/hKd6xQs/chemistry.png\"\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"CASES PER 1 MILLION\"\r\n          cases1={numeral(countryInfo.casesPerOneMillion).format(\"0,0\")}\r\n          subheading1=\"Cases/1Mil\"\r\n          cases2={numeral(countryInfo.recoveredPerOneMillion).format(\"0,0\")}\r\n          subheading2=\"Recovered/1Mil\"\r\n          cases3={numeral(countryInfo.deathsPerOneMillion).format(\"0,0\")}\r\n          subheading3=\"Deaths/1Mil\"\r\n          imageUrl=\"https://i.ibb.co/RCNGsm8/patient.png\"\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default HeaderStats;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MaterialTable from \"material-table\";\r\nimport QueueIcon from '@material-ui/icons/Queue';\r\nimport Search from '@material-ui/icons/Search';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    tableFont: {\r\n      fontSize: 15,\r\n    },\r\n  }));\r\n\r\nconst Table = props => {\r\n  const [gridData, setGridData] = useState({\r\n    data: props.data,\r\n    columns: props.col,\r\n    resolve: () => {},\r\n    updatedAt: new Date()\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    gridData.resolve();\r\n    console.log(\"RESOLVE AT:\", gridData.updatedAt);\r\n  }, [gridData]);\r\n\r\n\r\n  return (\r\n    <>\r\n    {\r\n      console.log(props.data)\r\n    }\r\n      <MaterialTable\r\n        title=\"Reported Cases and Deaths by Country\"\r\n        columns={gridData.columns}\r\n        data={props.data}\r\n\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, {useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n//const rows = [];\r\n\r\n// const rows = [\r\n//   createData('India', 'IN', 1324171354, 3287263),\r\n//   createData('China', 'CN', 1403500365, 9596961),\r\n//   createData('Italy', 'IT', 60483973, 301340),\r\n//   createData('United States', 'US', 327167434, 9833520),\r\n//   createData('Canada', 'CA', 37602103, 9984670),\r\n//   createData('Australia', 'AU', 25475400, 7692024),\r\n//   createData('Germany', 'DE', 83019200, 357578),\r\n//   createData('Ireland', 'IE', 4857000, 70273),\r\n//   createData('Mexico', 'MX', 126577691, 1972550),\r\n//   createData('Japan', 'JP', 126317000, 377973),\r\n//   createData('France', 'FR', 67022000, 640679),\r\n//   createData('United Kingdom', 'GB', 67545757, 242495),\r\n//   createData('Russia', 'RU', 146793744, 17098246),\r\n//   createData('Nigeria', 'NG', 200962417, 923768),\r\n//   createData('Brazil', 'BR', 210147125, 8515767),\r\n// ];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n  tableFont: {\r\n      fontSize: 15,\r\n  }\r\n});\r\n\r\n\r\nexport default function StickyHeadTable({columns, rows}) {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  \r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                  className={classes.tableFont}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align} className={classes.tableFont}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Donut', 452, 25.0, 51, 4.9),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n//   createData('KitKat', 518, 26.0, 65, 7.0),\r\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\r\n//   createData('Marshmallow', 318, 0, 81, 2.0),\r\n//   createData('Nougat', 360, 19.0, 9, 37.0),\r\n//   createData('Oreo', 437, 18.0, 63, 4.0),\r\n// ];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: \"country\", numeric: false, disablePadding: false, label: \"Country\" },\r\n  {\r\n    id: \"todayCases\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"New Cases\",\r\n  },\r\n  { id: \"cases\", numeric: true, disablePadding: false, label: \"Total Cases\" },\r\n  { id: \"deaths\", numeric: true, disablePadding: false, label: \"Total Deaths\" },\r\n  {\r\n    id: \"todayDeaths\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"New Deaths\",\r\n  },\r\n  {\r\n    id: \"todayRecovered\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"New Recovered\",\r\n  },\r\n  {\r\n    id: \"recovered\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Total Recovered\",\r\n  },\r\n  { id: \"active\", numeric: true, disablePadding: false, label: \"Active\" },\r\n  { id: \"critical\", numeric: true, disablePadding: false, label: \"Critical\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={\"center\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{ fontSize: 13, color: \"#333\", fontWeight: \"bold\" }}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          className={classes.title}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          Reported Cases and Deaths by Country\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  tableFont: {\r\n    fontSize: 13,\r\n    color: \"#333\",\r\n    textAlign: \"left\",\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable({ rows }) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(true);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(100);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell className={classes.tableFont} align=\"left\">\r\n                        {row.country}\r\n                      </TableCell>\r\n                      <TableCell className={classes.tableFont} align=\"left\">\r\n                        {row.todayCases}\r\n                      </TableCell>\r\n                      <TableCell className={classes.tableFont} align=\"left\">\r\n                        {row.cases}\r\n                      </TableCell>\r\n                      <TableCell className={classes.tableFont} align=\"left\">\r\n                        {row.deaths}\r\n                      </TableCell>\r\n                      <TableCell className={classes.tableFont} align=\"left\">\r\n                        {row.todayDeaths}\r\n                      </TableCell>\r\n                      <TableCell className={classes.tableFont} align=\"left\">\r\n                        {row.todayRecovered}\r\n                      </TableCell>\r\n                      <TableCell className={classes.tableFont} align=\"left\">\r\n                        {row.recovered}\r\n                      </TableCell>\r\n                      <TableCell className={classes.tableFont} align=\"left\">\r\n                        {row.active}\r\n                      </TableCell>\r\n                      <TableCell className={classes.tableFont} align=\"left\">\r\n                        {row.critical}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, 50, 100, 200]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport StickyHeadTable from \"./Table2\";\r\nimport EnhancedTable from \"./sortedTable\";\r\nimport \"./table.css\";\r\n\r\nconst rows = [];\r\nconst columns = [\r\n  { id: \"country\", label: \"Country\", minWidth: 100, textAlign: \"right\" },\r\n  { id: \"todayCases\", label: \"New Cases\", minWidth: 100 },\r\n  { id: \"cases\", label: \"Total Cases\", minWidth: 100 },\r\n  { id: \"deaths\", label: \"Total Deaths\", minWidth: 100 },\r\n  { id: \"todayDeaths\", label: \"New Deaths\", minWidth: 100 },\r\n  { id: \"todayRecovered\", label: \"New Recovered\", minWidth: 100 },\r\n  { id: \"recovered\", label: \"Total Recovered\", minWidth: 100 },\r\n  { id: \"active\", label: \"Active\", minWidth: 100 },\r\n  { id: \"critical\", label: \"Critical\", minWidth: 100 },\r\n];\r\n\r\nfunction createData(\r\n  country,\r\n  todayCases,\r\n  cases,\r\n  deaths,\r\n  todayDeaths,\r\n  todayRecovered,\r\n  recovered,\r\n  active,\r\n  critical\r\n) {\r\n  return {\r\n    country,\r\n    todayCases,\r\n    cases,\r\n    deaths,\r\n    todayDeaths,\r\n    todayRecovered,\r\n    recovered,\r\n    active,\r\n    critical,\r\n  };\r\n}\r\n\r\nconst TableContainer = () => {\r\n  const [rows, setRows] = React.useState([]);\r\n  const [searchResult, setSearchResult] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          console.log(searchResult);\r\n          console.log(response[0].country);\r\n          if (searchResult) {\r\n            const filteredData = response.filter((cty) =>\r\n              cty.country.toLowerCase().includes(searchResult)\r\n            );\r\n            console.log(filteredData);\r\n            setRows(filteredData);\r\n          } else {\r\n            setRows(response);\r\n          }\r\n          console.log(searchResult);\r\n          console.log(rows);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, [searchResult]);\r\n\r\n  console.log(rows);\r\n\r\n  return (\r\n    <div className=\"main_table\" style={{ maxHeight: 800, overflow: \"scroll\" }}>\r\n      <input\r\n        type=\"Search\"\r\n        placeholder=\"Search Country\"\r\n        onChange={(e) => setSearchResult(e.target.value)}\r\n        className=\"table__search\"\r\n      />\r\n      <EnhancedTable columns={columns} rows={rows} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableContainer;\r\n","import React from \"react\";\r\nimport { ResponsivePie } from \"@nivo/pie\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst MyResponsivePie = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <ResponsivePie\r\n      data={data}\r\n      margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n      innerRadius={0.5}\r\n      padAngle={0.7}\r\n      cornerRadius={3}\r\n      colors={{ scheme: \"nivo\" }}\r\n      borderWidth={1}\r\n      borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\r\n      radialLabelsSkipAngle={10}\r\n      radialLabelsTextXOffset={6}\r\n      radialLabelsTextColor=\"#333333\"\r\n      radialLabelsLinkOffset={0}\r\n      radialLabelsLinkDiagonalLength={16}\r\n      radialLabelsLinkHorizontalLength={24}\r\n      radialLabelsLinkStrokeWidth={1}\r\n      radialLabelsLinkColor={{ from: \"color\" }}\r\n      slicesLabelsSkipAngle={10}\r\n      slicesLabelsTextColor=\"#333333\"\r\n      animate={true}\r\n      motionStiffness={90}\r\n      motionDamping={15}\r\n      defs={[\r\n        {\r\n          id: \"dots\",\r\n          type: \"patternDots\",\r\n          background: \"inherit\",\r\n          color: \"rgba(255, 255, 255, 0.3)\",\r\n          size: 4,\r\n          padding: 1,\r\n          stagger: true,\r\n        },\r\n        {\r\n          id: \"lines\",\r\n          type: \"patternLines\",\r\n          background: \"inherit\",\r\n          color: \"rgba(255, 255, 255, 0.3)\",\r\n          rotation: -45,\r\n          lineWidth: 6,\r\n          spacing: 10,\r\n        },\r\n      ]}\r\n      fill={[\r\n        {\r\n          match: {\r\n            id: \"North America\",\r\n          },\r\n          id: \"dots\",\r\n        },\r\n        {\r\n          match: {\r\n            id: \"South America\",\r\n          },\r\n          id: \"dots\",\r\n        },\r\n        {\r\n          match: {\r\n            id: \"Asia\",\r\n          },\r\n          id: \"dots\",\r\n        },\r\n        {\r\n          match: {\r\n            id: \"Europe\",\r\n          },\r\n          id: \"dots\",\r\n        },\r\n        {\r\n          match: {\r\n            id: \"Africa\",\r\n          },\r\n          id: \"lines\",\r\n        },\r\n        {\r\n          match: {\r\n            id: \"Australia/Oceania\",\r\n          },\r\n          id: \"lines\",\r\n        },\r\n      ]}\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-left\",\r\n          direction: \"column\",\r\n          translateY: 60,\r\n          translateX: -35,\r\n          itemWidth: 100,\r\n          itemHeight: 18,\r\n          itemTextColor: \"#999\",\r\n          symbolSize: 14,\r\n          symbolShape: \"circle\",\r\n          effects: [\r\n            {\r\n              on: \"hover\",\r\n              style: {\r\n                itemTextColor: \"#000\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyResponsivePie;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MyResponsivePie from \"./PieChart\";\r\nimport \"./piechartcontainer.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst PieChartContainer = () => {\r\n  const [continents, setcontinents] = useState([]);\r\n\r\n  const continentColors = {\r\n    \"North America\": \"hsl(197, 37%, 24%)\",\r\n    \"South America\": \"hsl(197, 37%, 24%)\",\r\n    Asia: \"hsl(0, 0%, 0%)\",\r\n    Europe: \"hsl(197, 37%, 24%)\",\r\n    Africa: \"hsl(197, 37%, 24%)\",\r\n    \"Australia/Oceania\": \"hsl(197, 37%, 24%)\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getContinentData = () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/continents\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const continents = data.map((cont) => ({\r\n            id: cont.continent,\r\n            label: cont.continent,\r\n            value: cont.cases,\r\n            color: continentColors[cont[\"continent\"]],\r\n          }));\r\n\r\n          setcontinents(continents);\r\n        });\r\n    };\r\n\r\n    getContinentData();\r\n  }, []);\r\n\r\n  return (\r\n    <Card className=\"chart\">\r\n      <div className=\"pie__header\">\r\n        <div className=\"pie__image\">\r\n          <img\r\n            src=\"https://i.ibb.co/HpkJcDT/globe.png\"\r\n            alt=\"icon\"\r\n            className=\"pie__icon\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <h5 className=\"pie__title\">Case Count Per Continent</h5>\r\n        </div>\r\n      </div>\r\n      <div className=\"pie__chart\" style={{ height: 400 }}>\r\n        <MyResponsivePie data={continents} />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PieChartContainer;\r\n","import React from \"react\";\r\nimport { ResponsivePie } from \"@nivo/pie\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst MyResponsivePie = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <ResponsivePie\r\n      data={data}\r\n      margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n      innerRadius={0.5}\r\n      padAngle={0.7}\r\n      cornerRadius={3}\r\n      colors={{ scheme: \"set2\" }}\r\n      borderWidth={1}\r\n      borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\r\n      radialLabelsSkipAngle={10}\r\n      radialLabelsTextXOffset={6}\r\n      radialLabelsTextColor=\"#333333\"\r\n      radialLabelsLinkOffset={0}\r\n      radialLabelsLinkDiagonalLength={16}\r\n      radialLabelsLinkHorizontalLength={24}\r\n      radialLabelsLinkStrokeWidth={1}\r\n      radialLabelsLinkColor={{ from: \"color\" }}\r\n      slicesLabelsSkipAngle={10}\r\n      slicesLabelsTextColor=\"#333333\"\r\n      animate={true}\r\n      motionStiffness={90}\r\n      motionDamping={15}\r\n      defs={[\r\n        {\r\n          id: \"dots\",\r\n          type: \"patternDots\",\r\n          background: \"inherit\",\r\n          color: \"rgba(255, 255, 255, 0.3)\",\r\n          size: 4,\r\n          padding: 1,\r\n          stagger: true,\r\n        },\r\n        {\r\n          id: \"lines\",\r\n          type: \"patternLines\",\r\n          background: \"inherit\",\r\n          color: \"rgba(255, 255, 255, 0.3)\",\r\n          rotation: -45,\r\n          lineWidth: 6,\r\n          spacing: 10,\r\n        },\r\n      ]}\r\n      fill={[\r\n        {\r\n          match: {\r\n            id: \"nonCritical\",\r\n          },\r\n          id: \"dots\",\r\n        },\r\n        {\r\n          match: {\r\n            id: \"critical\",\r\n          },\r\n          id: \"lines\",\r\n        },\r\n      ]}\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-left\",\r\n          direction: \"row\",\r\n          translateY: 56,\r\n          itemWidth: 100,\r\n          itemHeight: 18,\r\n          itemTextColor: \"#999\",\r\n          symbolSize: 18,\r\n          symbolShape: \"circle\",\r\n          effects: [\r\n            {\r\n              on: \"hover\",\r\n              style: {\r\n                itemTextColor: \"#000\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyResponsivePie;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MyResponsivePie from \"./CaseDistPie\";\r\nimport \"./casedistpiecont.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\n\r\nconst CaseDistPieContain = () => {\r\n  const [severityDistState, setSeverityDistState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getContinentData = () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/all\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const severityDist = [\r\n            {\r\n              id: \"critical\",\r\n              label: \"Critical\",\r\n              value: data.critical,\r\n              color: \"hsl(37, 98%, 53%)\",\r\n            },\r\n            {\r\n              id: \"nonCritical\",\r\n              label: \"Non-Critical\",\r\n              value: data.active - data.critical,\r\n              color: \"hsl(197, 37%, 24%)\",\r\n            },\r\n          ];\r\n          setSeverityDistState(severityDist);\r\n        });\r\n    };\r\n\r\n    getContinentData();\r\n  }, []);\r\n\r\n  return (\r\n    <Card className=\"chart\">\r\n      <div className=\"pie__header\">\r\n        <div className=\"pie__image\">\r\n          <img\r\n            src=\"https://i.ibb.co/30J0jwY/man.png\"\r\n            alt=\"icon\"\r\n            className=\"pie__icon1\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <h5 className=\"pie__title\">Case Severity Distribution </h5>\r\n        </div>\r\n      </div>\r\n      <div className=\"pie__chart\" style={{ height: 400 }}>\r\n        <MyResponsivePie data={severityDistState} />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CaseDistPieContain;\r\n","import React, { Component } from \"react\";\r\nimport ChartistGraph from \"react-chartist\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { Card } from \"components/Card/Card.jsx\";\r\nimport { Tasks } from \"components/Tasks/Tasks.jsx\";\r\nimport DailyChart from \"../components/DailyChart/DailyChart\";\r\nimport HeaderStats from \"../components/HeaderStats/HeaderStats\";\r\nimport TableContainer from \"../components/Table/TableContainer\";\r\nimport TableContainer2 from \"../components/Table/TableContainer2\";\r\nimport PieChartContainer from \"../components/PieChart/PieChartContainer\";\r\nimport CaseDistPieContain from \"../components/PieChart/CaseDistPieContain\";\r\n\r\nimport {\r\n  dataPie,\r\n  legendPie,\r\n  dataSales,\r\n  optionsSales,\r\n  responsiveSales,\r\n  legendSales,\r\n} from \"variables/Variables.jsx\";\r\n\r\nclass Dashboard extends Component {\r\n  createLegend(json) {\r\n    var legend = [];\r\n    for (var i = 0; i < json[\"names\"].length; i++) {\r\n      var type = \"fa fa-circle text-\" + json[\"types\"][i];\r\n      legend.push(<i className={type} key={i} />);\r\n      legend.push(\" \");\r\n      legend.push(json[\"names\"][i]);\r\n    }\r\n    return legend;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='content' style={{ paddingTop: 0 }}>\r\n        <Grid fluid>\r\n          <br />\r\n          <HeaderStats />\r\n          <DailyChart />\r\n          <Row>\r\n            <Col md={6}>\r\n              <CaseDistPieContain />\r\n            </Col>\r\n            <Col md={6}>\r\n              <PieChartContainer />\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col md={12}>\r\n              <TableContainer2 />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\r\n//import Calender_Data from \"./data\";\r\n//import Calender_Data from \"./data\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst MyResponsiveCalendar = ({ data, maxVal }) => {\r\n  //data = Calender_Data;\r\n  console.log(data);\r\n  return (\r\n    <ResponsiveCalendar\r\n      data={data}\r\n      from=\"2020-01-01\"\r\n      to=\"2020-12-30\"\r\n      emptyColor=\"#eeeeee\"\r\n      colors={[\r\n        \"#a8dadc\",\r\n        \"#e9c46a\",\r\n        \"#f4a261\",\r\n        \"#e76f51\",\r\n        \"#2a9d8f\",\r\n        \"#264653\",\r\n        \"#e63946\",\r\n      ]}\r\n      margin={{ top: 5, right: 40, bottom: 30, left: 40 }}\r\n      yearSpacing={0}\r\n      monthBorderColor=\"#ffffff\"\r\n      dayBorderWidth={2}\r\n      dayBorderColor=\"#ffffff\"\r\n      minValue={0}\r\n      maxValue={maxVal}\r\n      xFormat=\"time:%m/%d/%Y\"\r\n      justify={true}\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-right\",\r\n          direction: \"row\",\r\n          translateY: 36,\r\n          itemCount: 4,\r\n          itemWidth: 42,\r\n          itemHeight: 36,\r\n          itemsSpacing: 35,\r\n          itemDirection: \"right-to-left\",\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyResponsiveCalendar;\r\n","import React from \"react\";\r\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\r\n//import Calender_Data from \"./data\";\r\n//import Calender_Data from \"./data\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst CalenderCountryDeaths = ({ data, maxVal }) => {\r\n  //data = Calender_Data;\r\n  return (\r\n    <ResponsiveCalendar\r\n      data={data}\r\n      from=\"2020-01-01\"\r\n      to=\"2020-12-30\"\r\n      emptyColor=\"#eeeeee\"\r\n      colors={[\r\n        \"#a8dadc\",\r\n        \"#e9c46a\",\r\n        \"#f4a261\",\r\n        \"#e76f51\",\r\n        \"#2a9d8f\",\r\n        \"#264653\",\r\n        \"#e63946\",\r\n      ]}\r\n      margin={{ top: 20, right: 40, bottom: 40, left: 40 }}\r\n      yearSpacing={0}\r\n      monthBorderColor=\"#ffffff\"\r\n      dayBorderWidth={2}\r\n      dayBorderColor=\"#ffffff\"\r\n      minValue={0}\r\n      maxValue={maxVal}\r\n      xFormat=\"time:%m/%d/%Y\"\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-right\",\r\n          direction: \"row\",\r\n          translateY: 36,\r\n          itemCount: 4,\r\n          itemWidth: 42,\r\n          itemHeight: 36,\r\n          itemsSpacing: 35,\r\n          itemDirection: \"right-to-left\",\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CalenderCountryDeaths;\r\n","import React from \"react\";\r\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\r\n//import Calender_Data from \"./data\";\r\n//import Calender_Data from \"./data\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst CalendarCountryRecovered = ({ data, maxVal }) => {\r\n  //data = Calender_Data;\r\n  return (\r\n    <ResponsiveCalendar\r\n      data={data}\r\n      from=\"2020-01-01\"\r\n      to=\"2020-12-30\"\r\n      emptyColor=\"#eeeeee\"\r\n      colors={[\r\n        \"#a8dadc\",\r\n        \"#e9c46a\",\r\n        \"#f4a261\",\r\n        \"#e76f51\",\r\n        \"#2a9d8f\",\r\n        \"#264653\",\r\n        \"#e63946\",\r\n      ]}\r\n      margin={{ top: 20, right: 40, bottom: 40, left: 40 }}\r\n      yearSpacing={0}\r\n      monthBorderColor=\"#ffffff\"\r\n      dayBorderWidth={2}\r\n      dayBorderColor=\"#ffffff\"\r\n      minValue={0}\r\n      maxValue={maxVal}\r\n      xFormat=\"time:%m/%d/%Y\"\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-right\",\r\n          direction: \"row\",\r\n          translateY: 36,\r\n          itemCount: 4,\r\n          itemWidth: 42,\r\n          itemHeight: 36,\r\n          itemsSpacing: 35,\r\n          itemDirection: \"right-to-left\",\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CalendarCountryRecovered;\r\n","export const buildChartData = (data, casesTypes) => {\r\n  console.log(data);\r\n  const chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      const newDataPoint = {\r\n        x: date,\r\n        y: data[casesTypes][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesTypes][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nexport function convertDate(date) {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n}\r\n\r\nexport function findMax(array) {\r\n  return Math.max.apply(\r\n    Math,\r\n    array.map(function (o) {\r\n      return o.value;\r\n    })\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MenuItem, FormControl, Select } from \"@material-ui/core\";\r\nimport \"./calender.css\";\r\n\r\nimport MyResponsiveCalendar from \"./CalenderTotalCases\";\r\nimport CalenderCountryDeaths from \"./CalenderTotalDeaths\";\r\nimport CalendarCountryRecovered from \"./CalenderTotalRecovered\";\r\n\r\nimport { findMax, convertDate } from \"./utils\";\r\n\r\nconst CalenderCountriesContainer = () => {\r\n  const [country, setInputCountry] = useState(\"USA\");\r\n  const [countries, setCountries] = useState([]);\r\n  const [countryData, setCountryData] = useState([]);\r\n  const [countryDeaths, setCountryDeaths] = useState([]);\r\n  const [countryRecovered, setCountryRecovered] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCountryData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/historical/USA?lastdays=400\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const cases = data.timeline.cases;\r\n          const dataArr = Object.keys(cases).map((key) => ({\r\n            day: convertDate(key),\r\n            value: cases[key],\r\n          }));\r\n          setCountryData(dataArr);\r\n\r\n          const deaths = data.timeline.deaths;\r\n          const dataArrDeaths = Object.keys(deaths).map((key) => ({\r\n            day: convertDate(key),\r\n            value: deaths[key],\r\n          }));\r\n\r\n          setCountryDeaths(dataArrDeaths);\r\n\r\n          const recovered = data.timeline.recovered;\r\n          const dataArrRecovered = Object.keys(recovered).map((key) => ({\r\n            day: convertDate(key),\r\n            value: recovered[key],\r\n          }));\r\n\r\n          setCountryRecovered(dataArrRecovered);\r\n        });\r\n    };\r\n\r\n    getCountryData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (e) => {\r\n    const countryCode = e.target.value;\r\n\r\n    fetch(\r\n      `https://disease.sh/v3/covid-19/historical/${countryCode}?lastdays=400`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (\r\n          data.message ===\r\n          \"Country not found or doesn't have any historical data\"\r\n        ) {\r\n          alert(\"Doesn't have any historical data\");\r\n        } else {\r\n          const cases = data.timeline.cases;\r\n          const dataArr = Object.keys(cases).map((key) => ({\r\n            day: convertDate(key),\r\n            value: cases[key],\r\n          }));\r\n          setInputCountry(countryCode);\r\n          setCountryData(dataArr);\r\n          console.log(countryCode, country, countryData);\r\n\r\n          const maxValCases = findMax(dataArr);\r\n          console.log(maxValCases);\r\n\r\n          const deaths = data.timeline.deaths;\r\n          const dataArrDeaths = Object.keys(deaths).map((key) => ({\r\n            day: convertDate(key),\r\n            value: deaths[key],\r\n          }));\r\n\r\n          setCountryDeaths(dataArrDeaths);\r\n\r\n          const maxValDeaths = findMax(dataArrDeaths);\r\n          console.log(maxValDeaths);\r\n\r\n          const recovered = data.timeline.recovered;\r\n          const dataArrRecovered = Object.keys(recovered).map((key) => ({\r\n            day: convertDate(key),\r\n            value: recovered[key],\r\n          }));\r\n\r\n          setCountryRecovered(dataArrRecovered);\r\n          const maxValRecovered = findMax(dataArrRecovered);\r\n          console.log(maxValRecovered);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n          setCountries(countries);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calender__container\">\r\n      <div className=\"calender__header\">\r\n        <span className=\"piechart_label\">Select Country </span>\r\n        <FormControl className=\"calender__dropdown\">\r\n          <Select\r\n            variant=\"outlined\"\r\n            value={country}\r\n            onChange={onCountryChange}\r\n            className=\"calender__select\"\r\n          >\r\n            <MenuItem value=\"USA\">USA</MenuItem>\r\n            {countries.map((country) => (\r\n              <MenuItem value={country.value}>{country.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <div className=\"calender__graphs\">\r\n        <div style={{ height: 250, marginBottom: 60 }}>\r\n          <h5 className=\"calenderchart__title\">\r\n            Total COVID Cases - Per Day Distribution\r\n          </h5>\r\n          <MyResponsiveCalendar data={countryData} maxValCases />\r\n        </div>\r\n        <hr />\r\n\r\n        <div style={{ height: 250, marginBottom: 60 }}>\r\n          <h5 className=\"calenderchart__title\">\r\n            Total COVID Deaths - Per Day Distribution\r\n          </h5>\r\n          <CalenderCountryDeaths data={countryDeaths} maxValDeaths />\r\n        </div>\r\n        <hr />\r\n\r\n        <div style={{ height: 250, marginBottom: 60 }}>\r\n          <h5 className=\"calenderchart__title\">\r\n            Total COVID Recovered - Per Day Distribution\r\n          </h5>\r\n          <CalendarCountryRecovered data={countryRecovered} maxValRecovered />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalenderCountriesContainer;\r\n","import React from \"react\";\r\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\r\n//import Calender_Data from \"./data\";\r\n//import Calender_Data from \"./data\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst TodayCasesCalendar = ({ data, maxVal }) => {\r\n  //data = Calender_Data;\r\n  console.log(data);\r\n  return (\r\n    <ResponsiveCalendar\r\n      data={data}\r\n      from=\"2020-01-01\"\r\n      to=\"2020-12-30\"\r\n      emptyColor=\"#eeeeee\"\r\n      colors={[\r\n        \"#a8dadc\",\r\n        \"#e9c46a\",\r\n        \"#f4a261\",\r\n        \"#e76f51\",\r\n        \"#2a9d8f\",\r\n        \"#264653\",\r\n        \"#e63946\",\r\n      ]}\r\n      margin={{ top: 20, right: 40, bottom: 40, left: 40 }}\r\n      yearSpacing={0}\r\n      monthBorderColor=\"#ffffff\"\r\n      dayBorderWidth={2}\r\n      dayBorderColor=\"#ffffff\"\r\n      minValue={0}\r\n      maxValue={maxVal}\r\n      xFormat=\"time:%m/%d/%Y\"\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-right\",\r\n          direction: \"row\",\r\n          translateY: 36,\r\n          itemCount: 4,\r\n          itemWidth: 42,\r\n          itemHeight: 36,\r\n          itemsSpacing: 35,\r\n          itemDirection: \"right-to-left\",\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TodayCasesCalendar;\r\n","import React from \"react\";\r\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\r\n//import Calender_Data from \"./data\";\r\n//import Calender_Data from \"./data\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst TodayDeathsCalendar = ({ data, maxVal }) => {\r\n  //data = Calender_Data;\r\n  console.log(data);\r\n  return (\r\n    <ResponsiveCalendar\r\n      data={data}\r\n      from=\"2020-01-01\"\r\n      to=\"2020-12-30\"\r\n      emptyColor=\"#eeeeee\"\r\n      colors={[\r\n        \"#a8dadc\",\r\n        \"#e9c46a\",\r\n        \"#f4a261\",\r\n        \"#e76f51\",\r\n        \"#2a9d8f\",\r\n        \"#264653\",\r\n        \"#e63946\",\r\n      ]}\r\n      margin={{ top: 20, right: 40, bottom: 40, left: 40 }}\r\n      yearSpacing={0}\r\n      monthBorderColor=\"#ffffff\"\r\n      dayBorderWidth={2}\r\n      dayBorderColor=\"#ffffff\"\r\n      minValue={0}\r\n      maxValue={maxVal}\r\n      xFormat=\"time:%m/%d/%Y\"\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-right\",\r\n          direction: \"row\",\r\n          translateY: 36,\r\n          itemCount: 4,\r\n          itemWidth: 42,\r\n          itemHeight: 36,\r\n          itemsSpacing: 35,\r\n          itemDirection: \"right-to-left\",\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TodayDeathsCalendar;\r\n","import React from \"react\";\r\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\r\n//import Calender_Data from \"./data\";\r\n//import Calender_Data from \"./data\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst TodayRecoveredCalendar = ({ data, maxVal }) => {\r\n  //data = Calender_Data;\r\n  console.log(data, maxVal);\r\n  return (\r\n    <ResponsiveCalendar\r\n      data={data}\r\n      from=\"2020-01-01\"\r\n      to=\"2020-12-30\"\r\n      emptyColor=\"#eeeeee\"\r\n      colors={[\r\n        \"#a8dadc\",\r\n        \"#e9c46a\",\r\n        \"#f4a261\",\r\n        \"#e76f51\",\r\n        \"#2a9d8f\",\r\n        \"#264653\",\r\n        \"#e63946\",\r\n      ]}\r\n      margin={{ top: 20, right: 40, bottom: 40, left: 40 }}\r\n      yearSpacing={0}\r\n      monthBorderColor=\"#ffffff\"\r\n      dayBorderWidth={2}\r\n      dayBorderColor=\"#ffffff\"\r\n      minValue={0}\r\n      maxValue={maxVal}\r\n      xFormat=\"time:%m/%d/%Y\"\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-right\",\r\n          direction: \"row\",\r\n          translateY: 36,\r\n          itemCount: 4,\r\n          itemWidth: 42,\r\n          itemHeight: 36,\r\n          itemsSpacing: 35,\r\n          itemDirection: \"right-to-left\",\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TodayRecoveredCalendar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { MenuItem, FormControl, Select } from \"@material-ui/core\";\r\nimport TodayCasesCalendar from \"./TodayCasesGraph\";\r\nimport TodayDeathsCalendar from \"./TodayDeathsGraph\";\r\nimport TodayRecoveredCalendar from \"./TodayRecoveredGraph\";\r\nimport \"./calender.css\";\r\n\r\nimport { findMax, convertDate, buildChartData } from \"./utils\";\r\n\r\nconst TodayCalenderContainer = () => {\r\n  const [country, setInputCountry] = useState(\"USA\");\r\n  const [countries, setCountries] = useState([]);\r\n  const [todayCases, setTodayCases] = useState([]);\r\n  const [todayDeaths, setTodayDeaths] = useState([]);\r\n  const [todayRecovered, setTodayRecovered] = useState([]);\r\n  const [maxCases, setMaxCases] = useState();\r\n  const [maxDeaths, setMaxDeaths] = useState();\r\n  const [maxRecovered, setMaxRecovered] = useState();\r\n\r\n  useEffect(() => {\r\n    const getCountryData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/historical/USA?lastdays=400\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const dataForToday = data.timeline;\r\n          //console.log(\"raw data for cases, deaths, recov\", dataForToday); //Work from here\r\n          const todayCasesCalenderData = buildChartData(dataForToday, \"cases\");\r\n          //console.log(\"cases values for each day\", todayCasesCalenderData);\r\n          const formatedTodayCases = todayCasesCalenderData.map((data) => ({\r\n            day: convertDate(data.x),\r\n            value: data.y,\r\n          }));\r\n          setTodayCases(formatedTodayCases);\r\n          const maxVal = findMax(formatedTodayCases);\r\n          setMaxCases(maxVal);\r\n          //console.log(\"formatted data for calender\", formatedTodayCases);\r\n\r\n          const todayDeathsCalenderData = buildChartData(\r\n            dataForToday,\r\n            \"deaths\"\r\n          );\r\n          //console.log(\"deaths values for each day\", todayDeathsCalenderData);\r\n          const formatedTodayDeaths = todayDeathsCalenderData.map((data) => ({\r\n            day: convertDate(data.x),\r\n            value: data.y,\r\n          }));\r\n          setTodayDeaths(formatedTodayDeaths);\r\n          const maxValDeaths = findMax(formatedTodayDeaths);\r\n          setMaxDeaths(maxValDeaths);\r\n\r\n          const todayRecoveredCalenderData = buildChartData(\r\n            dataForToday,\r\n            \"recovered\"\r\n          );\r\n          //console.log(\"cases values for each day\", todayCasesCalenderData);\r\n          const formatedTodayRecovered = todayRecoveredCalenderData.map(\r\n            (data) => ({\r\n              day: convertDate(data.x),\r\n              value: data.y,\r\n            })\r\n          );\r\n          setTodayRecovered(formatedTodayRecovered);\r\n          const maxValRecovered = findMax(formatedTodayRecovered);\r\n          setMaxRecovered(maxValRecovered);\r\n        });\r\n    };\r\n\r\n    getCountryData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (e) => {\r\n    const countryCode = e.target.value;\r\n\r\n    fetch(\r\n      `https://disease.sh/v3/covid-19/historical/${countryCode}?lastdays=400`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (\r\n          data.message ===\r\n          \"Country not found or doesn't have any historical data\"\r\n        ) {\r\n          alert(\"Doesn't have any historical data\");\r\n        } else {\r\n          const dataForToday = data.timeline;\r\n          //console.log(\"raw data for cases, deaths, recov\", dataForToday); //Work from here\r\n          const todayCasesCalenderData = buildChartData(dataForToday, \"cases\");\r\n          //console.log(\"cases values for each day\", todayCasesCalenderData);\r\n          const formatedTodayCases = todayCasesCalenderData.map((data) => ({\r\n            day: convertDate(data.x),\r\n            value: data.y,\r\n          }));\r\n          setTodayCases(formatedTodayCases);\r\n          const maxVal = findMax(formatedTodayCases);\r\n          setMaxCases(maxVal);\r\n          //console.log(\"formatted data for calender\", formatedTodayCases);\r\n\r\n          const todayDeathsCalenderData = buildChartData(\r\n            dataForToday,\r\n            \"deaths\"\r\n          );\r\n          //console.log(\"deaths values for each day\", todayDeathsCalenderData);\r\n          const formatedTodayDeaths = todayDeathsCalenderData.map((data) => ({\r\n            day: convertDate(data.x),\r\n            value: data.y,\r\n          }));\r\n          setTodayDeaths(formatedTodayDeaths);\r\n          const maxValDeaths = findMax(formatedTodayDeaths);\r\n          setMaxDeaths(maxValDeaths);\r\n\r\n          const todayRecoveredCalenderData = buildChartData(\r\n            dataForToday,\r\n            \"recovered\"\r\n          );\r\n          //console.log(\"cases values for each day\", todayCasesCalenderData);\r\n          const formatedTodayRecovered = todayRecoveredCalenderData.map(\r\n            (data) => ({\r\n              day: convertDate(data.x),\r\n              value: data.y,\r\n            })\r\n          );\r\n          setTodayRecovered(formatedTodayRecovered);\r\n          const maxValRecovered = findMax(formatedTodayRecovered);\r\n          setMaxRecovered(maxValRecovered);\r\n\r\n          setInputCountry(countryCode);\r\n          //console.log(country);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n          setCountries(countries);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  console.log(\"These are today cases\", todayCases, maxCases);\r\n\r\n  console.log(\"These are today deaths\", todayDeaths, maxDeaths);\r\n  console.log(\"These are today recovered\", todayRecovered, maxRecovered);\r\n\r\n  return (\r\n    <div className=\"calender__container\">\r\n      <div className=\"calender-header\">\r\n        <span className=\"piechart_label\">Select Country </span>\r\n        <FormControl className=\"calender__dropdown\">\r\n          <Select\r\n            variant=\"outlined\"\r\n            value={country}\r\n            onChange={onCountryChange}\r\n            className=\"calender__select\"\r\n          >\r\n            <MenuItem value=\"USA\">USA</MenuItem>\r\n            {countries.map((country) => (\r\n              <MenuItem value={country.value}>{country.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"calender__graphs\">\r\n        <div style={{ height: 250, marginBottom: 20, padding: 0 }}>\r\n          <h5 className=\"calenderchart__title\">\r\n            Today COVID Cases - Per Day Distribution\r\n          </h5>\r\n          <TodayCasesCalendar data={todayCases} maxCases />\r\n        </div>\r\n        <hr />\r\n\r\n        <div style={{ height: 250, marginBottom: 20, padding: 0 }}>\r\n          <h5 className=\"calenderchart__title\">\r\n            Today COVID Deaths - Per Day Distribution\r\n          </h5>\r\n          <TodayDeathsCalendar data={todayDeaths} maxDeaths />\r\n        </div>\r\n        <hr />\r\n\r\n        <div style={{ height: 250, marginBottom: 20, padding: 0 }}>\r\n          <h5 className=\"calenderchart__title\">\r\n            Today COVID Recovered - Per Day Distribution\r\n          </h5>\r\n          <TodayRecoveredCalendar data={todayRecovered} maxRecovered />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodayCalenderContainer;\r\n","import React from \"react\";\r\nimport { ResponsivePie } from \"@nivo/pie\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst PieChartForTotals = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <ResponsivePie\r\n      data={data}\r\n      margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n      innerRadius={0.5}\r\n      padAngle={0.7}\r\n      cornerRadius={3}\r\n      colors={{ scheme: \"purple_orange\" }}\r\n      borderWidth={1}\r\n      borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\r\n      radialLabelsSkipAngle={10}\r\n      radialLabelsTextXOffset={6}\r\n      radialLabelsTextColor=\"#333333\"\r\n      radialLabelsLinkOffset={0}\r\n      radialLabelsLinkDiagonalLength={16}\r\n      radialLabelsLinkHorizontalLength={24}\r\n      radialLabelsLinkStrokeWidth={1}\r\n      radialLabelsLinkColor={{ from: \"color\" }}\r\n      slicesLabelsSkipAngle={10}\r\n      slicesLabelsTextColor=\"#333333\"\r\n      animate={true}\r\n      motionStiffness={90}\r\n      motionDamping={15}\r\n      defs={[\r\n        {\r\n          id: \"dots\",\r\n          type: \"patternDots\",\r\n          background: \"inherit\",\r\n          color: \"rgba(255, 255, 255, 0.3)\",\r\n          size: 4,\r\n          padding: 1,\r\n          stagger: true,\r\n        },\r\n        {\r\n          id: \"lines\",\r\n          type: \"patternLines\",\r\n          background: \"inherit\",\r\n          color: \"rgba(255, 255, 255, 0.3)\",\r\n          rotation: -45,\r\n          lineWidth: 6,\r\n          spacing: 10,\r\n        },\r\n      ]}\r\n      fill={[\r\n        {\r\n          match: {\r\n            id: \"recovered\",\r\n          },\r\n          id: \"dots\",\r\n        },\r\n        {\r\n          match: {\r\n            id: \"deaths\",\r\n          },\r\n          id: \"lines\",\r\n        },\r\n      ]}\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-left\",\r\n          direction: \"row\",\r\n          translateY: 56,\r\n          itemWidth: 100,\r\n          itemHeight: 18,\r\n          itemTextColor: \"#999\",\r\n          symbolSize: 18,\r\n          symbolShape: \"circle\",\r\n          effects: [\r\n            {\r\n              on: \"hover\",\r\n              style: {\r\n                itemTextColor: \"#000\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PieChartForTotals;\r\n","import React from \"react\";\r\nimport { ResponsivePie } from \"@nivo/pie\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst PieChartForToday = ({ data }) => {\r\n  console.log(data);\r\n  return (\r\n    <ResponsivePie\r\n      data={data}\r\n      margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n      innerRadius={0.5}\r\n      padAngle={0.7}\r\n      cornerRadius={3}\r\n      colors={{ scheme: \"pink_yellowGreen\" }}\r\n      borderWidth={1}\r\n      borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\r\n      radialLabelsSkipAngle={10}\r\n      radialLabelsTextXOffset={6}\r\n      radialLabelsTextColor=\"#333333\"\r\n      radialLabelsLinkOffset={0}\r\n      radialLabelsLinkDiagonalLength={16}\r\n      radialLabelsLinkHorizontalLength={24}\r\n      radialLabelsLinkStrokeWidth={1}\r\n      radialLabelsLinkColor={{ from: \"color\" }}\r\n      slicesLabelsSkipAngle={10}\r\n      slicesLabelsTextColor=\"#333333\"\r\n      animate={true}\r\n      motionStiffness={90}\r\n      motionDamping={15}\r\n      defs={[\r\n        {\r\n          id: \"dots\",\r\n          type: \"patternDots\",\r\n          background: \"inherit\",\r\n          color: \"rgba(255, 255, 255, 0.3)\",\r\n          size: 4,\r\n          padding: 1,\r\n          stagger: true,\r\n        },\r\n        {\r\n          id: \"lines\",\r\n          type: \"patternLines\",\r\n          background: \"inherit\",\r\n          color: \"rgba(255, 255, 255, 0.3)\",\r\n          rotation: -45,\r\n          lineWidth: 6,\r\n          spacing: 10,\r\n        },\r\n      ]}\r\n      fill={[\r\n        {\r\n          match: {\r\n            id: \"todayRecovered\",\r\n          },\r\n          id: \"dots\",\r\n        },\r\n        {\r\n          match: {\r\n            id: \"cases\",\r\n          },\r\n          id: \"lines\",\r\n        },\r\n      ]}\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-left\",\r\n          direction: \"row\",\r\n          translateY: 56,\r\n          itemWidth: 100,\r\n          itemHeight: 18,\r\n          itemTextColor: \"#999\",\r\n          symbolSize: 18,\r\n          symbolShape: \"circle\",\r\n          effects: [\r\n            {\r\n              on: \"hover\",\r\n              style: {\r\n                itemTextColor: \"#000\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PieChartForToday;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n\r\nimport PieChartForTotals from \"./PieChartForTotals\";\r\nimport PieChartForToday from \"./PieChartForToday\";\r\nimport \"./piechartforcountry.css\";\r\n\r\nconst PieChartForCountryContainer = () => {\r\n  const [country, setInputCountry] = useState(\"USA\");\r\n  const [countries, setCountries] = useState([]);\r\n  const [totalCaseDistState, setTotalCaseDistState] = useState([]);\r\n  const [todayCaseDistState, setTodayCaseDistState] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCountryData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries/USA\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const totalCaseDist = [\r\n            {\r\n              id: \"cases\",\r\n              label: \"Cases\",\r\n              value: data.cases,\r\n              color: \"hsl(37, 98%, 53%)\",\r\n            },\r\n            {\r\n              id: \"deaths\",\r\n              label: \"Deaths\",\r\n              value: data.deaths,\r\n              color: \"hsl(197, 37%, 24%)\",\r\n            },\r\n            {\r\n              id: \"recovered\",\r\n              label: \"Recovered\",\r\n              value: data.recovered,\r\n              color: \"hsl(197, 37%, 24%)\",\r\n            },\r\n          ];\r\n          setTotalCaseDistState(totalCaseDist);\r\n\r\n          const todayCaseDist = [\r\n            {\r\n              id: \"todayCases\",\r\n              label: \"Cases Today\",\r\n              value: data.todayCases,\r\n              color: \"hsl(37, 98%, 53%)\",\r\n            },\r\n            {\r\n              id: \"todayDeaths\",\r\n              label: \"Deaths Today\",\r\n              value: data.todayDeaths,\r\n              color: \"hsl(197, 37%, 24%)\",\r\n            },\r\n            {\r\n              id: \"todayRecovered\",\r\n              label: \"Recovered Today\",\r\n              value: data.todayRecovered,\r\n              color: \"hsl(197, 37%, 24%)\",\r\n            },\r\n          ];\r\n          setTodayCaseDistState(todayCaseDist);\r\n        });\r\n    };\r\n\r\n    getCountryData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (e) => {\r\n    const countryCode = e.target.value;\r\n\r\n    fetch(`https://disease.sh/v3/covid-19/countries/${countryCode}`)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        const totalCaseDist = [\r\n          {\r\n            id: \"cases\",\r\n            label: \"Cases\",\r\n            value: data.cases,\r\n            color: \"hsl(37, 98%, 53%)\",\r\n          },\r\n          {\r\n            id: \"deaths\",\r\n            label: \"Deaths\",\r\n            value: data.deaths,\r\n            color: \"hsl(197, 37%, 24%)\",\r\n          },\r\n          {\r\n            id: \"recovered\",\r\n            label: \"Recovered\",\r\n            value: data.recovered,\r\n            color: \"hsl(197, 37%, 24%)\",\r\n          },\r\n        ];\r\n        setTotalCaseDistState(totalCaseDist);\r\n\r\n        const todayCaseDist = [\r\n          {\r\n            id: \"todayCases\",\r\n            label: \"Cases Today\",\r\n            value: data.todayCases,\r\n            color: \"hsl(37, 98%, 53%)\",\r\n          },\r\n          {\r\n            id: \"todayDeaths\",\r\n            label: \"Deaths Today\",\r\n            value: data.todayDeaths,\r\n            color: \"hsl(197, 37%, 24%)\",\r\n          },\r\n          {\r\n            id: \"todayRecovered\",\r\n            label: \"Recovered Today\",\r\n            value: data.todayRecovered,\r\n            color: \"hsl(197, 34%, 24%)\",\r\n          },\r\n        ];\r\n        setTodayCaseDistState(todayCaseDist);\r\n\r\n        setInputCountry(countryCode);\r\n        //console.log(country);\r\n        //}\r\n      });\r\n  };\r\n\r\n  console.log(\"this is total case disct\", totalCaseDistState);\r\n  console.log(\"this is today case disct\", todayCaseDistState);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n          setCountries(countries);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calender__container\">\r\n      <div className=\"countryPieChart__header\">\r\n        <span className=\"piechart_label\">\r\n          Select country for below Pie Chart:{\" \"}\r\n        </span>\r\n        <FormControl className=\"countryPieChart__dropdown\">\r\n          <Select\r\n            variant=\"outlined\"\r\n            value={country}\r\n            onChange={onCountryChange}\r\n            className=\"countryPieChart__select\"\r\n          >\r\n            <MenuItem value=\"USA\">USA</MenuItem>\r\n            {countries.map((country) => (\r\n              <MenuItem value={country.value}>{country.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <Grid fluid>\r\n        <Row>\r\n          <Col lg={6} md={12}>\r\n            <Card className=\"chart\">\r\n              <div className=\"pie__header\">\r\n                <div className=\"pie__image\">\r\n                  <img\r\n                    src=\"https://i.ibb.co/zf8Sdqk/virus.png\"\r\n                    alt=\"icon\"\r\n                    className=\"pie__icon\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <h5 className=\"pie__title\">Total Cases Count</h5>\r\n                </div>\r\n              </div>\r\n              <div className=\"pie__chart\" style={{ height: 400 }}>\r\n                <PieChartForTotals data={totalCaseDistState} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col lg={6} md={12}>\r\n            <Card className=\"chart\">\r\n              <div className=\"pie__header\">\r\n                <div className=\"pie__image\">\r\n                  <img\r\n                    src=\"https://i.ibb.co/RCNGsm8/patient.png\"\r\n                    alt=\"icon\"\r\n                    className=\"pie__icon\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <h5 className=\"pie__title\">Today Cases Count</h5>\r\n                </div>\r\n              </div>\r\n              <div className=\"pie__chart\" style={{ height: 400 }}>\r\n                <PieChartForToday data={todayCaseDistState} />\r\n              </div>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PieChartForCountryContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\nimport \"./linegraph.css\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType, countryCode, ...props }) {\r\n  const [data, setData] = useState({});\r\n  console.log(props, countryCode);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\r\n        `https://disease.sh/v3/covid-19/historical/${countryCode}?lastdays=400`\r\n      )\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          const allData = data.timeline;\r\n          let chartData = buildChartData(allData, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType, countryCode]);\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: `${props.lineCh_bgColor}`,\r\n                borderColor: `${props.lineCh_brColor}`,\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\nimport \"./linegraph.css\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartDataForTotal = (data, casesType) => {\r\n  let chartData = [];\r\n  for (let date in data.cases) {\r\n    let newDataPoint = {\r\n      x: date,\r\n      y: data[casesType][date],\r\n    };\r\n    chartData.push(newDataPoint);\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraphForTotal({ casesType, countryCode, ...props }) {\r\n  const [data, setData] = useState({});\r\n  console.log(props, countryCode);\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\r\n        `https://disease.sh/v3/covid-19/historical/${countryCode}?lastdays=60`\r\n      )\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          const allData = data.timeline;\r\n          let chartData = buildChartDataForTotal(allData, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n          // buildChart(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType, countryCode]);\r\n\r\n  return (\r\n    <div className={props.className}>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: `${props.lineCh_bgColor}`,\r\n                borderColor: `${props.lineCh_brColor}`,\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraphForTotal;\r\n","import { Row, Col } from \"react-bootstrap\";\r\nimport CardTrend from \"../CardTrend/CardTrend\";\r\nimport LineGraph from \"./CountryLineGraphForToday\";\r\nimport LineGraphForTotal from \"./CountryLineGraphForTotal\";\r\nimport \"./linegraph.css\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { MenuItem, FormControl, Select } from \"@material-ui/core\";\r\n\r\nconst DailyChart = () => {\r\n  const [country, setInputCountry] = useState(\"USA\");\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n          setCountries(countries);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  const onCountryChange = (e) => {\r\n    const countryCode = e.target.value;\r\n    setInputCountry(countryCode);\r\n  };\r\n\r\n  console.log(country);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"dailyChart_header\">\r\n        <span className=\"dailyChart_label\">Select Country </span>\r\n        <FormControl className=\"app__dropdown\">\r\n          <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\r\n            <MenuItem value=\"USA\">USA</MenuItem>\r\n            {countries.map((country) => (\r\n              <MenuItem value={country.value}>{country.name}</MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <Row>\r\n        <Col md={6}>\r\n          <Row>\r\n            <Col md={12}>\r\n              <CardTrend\r\n                statsIcon=\"fa fa-history\"\r\n                id=\"chartHours\"\r\n                title=\"Daily Covid Cases\"\r\n                category=\"Cases Per Day\"\r\n                stats=\"Updated 10 minutes ago\"\r\n                img_url=\"virus2\"\r\n                content={\r\n                  <div className=\"ct-chart\">\r\n                    <LineGraph\r\n                      className=\"app__graph\"\r\n                      casesType=\"cases\"\r\n                      lineCh_bgColor=\"rgba(38, 84, 124, 0.5)\"\r\n                      lineCh_brColor=\"#26547C\"\r\n                      countryCode={country}\r\n                    />\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <CardTrend\r\n                statsIcon=\"fa fa-history\"\r\n                id=\"chartHours\"\r\n                title=\"Daily Deaths\"\r\n                category=\"Deaths Per Day\"\r\n                stats=\"Updated 10 minutes ago\"\r\n                img_url=\"death\"\r\n                content={\r\n                  <div className=\"ct-chart\">\r\n                    <LineGraph\r\n                      className=\"app__graph\"\r\n                      casesType=\"deaths\"\r\n                      lineCh_bgColor=\"rgba(209, 73, 91, 0.5)\"\r\n                      lineCh_brColor=\"#D1495B\"\r\n                      countryCode={country}\r\n                    />\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <CardTrend\r\n                statsIcon=\"fa fa-history\"\r\n                id=\"chartHours\"\r\n                title=\"Daily Recovered Patients\"\r\n                category=\"Recovered Per Day\"\r\n                stats=\"Updated 10 minutes ago\"\r\n                img_url=\"pat\"\r\n                content={\r\n                  <div className=\"ct-chart\">\r\n                    <LineGraph\r\n                      className=\"app__graph\"\r\n                      casesType=\"recovered\"\r\n                      lineCh_bgColor=\"rgba(27, 153, 139, 0.5)\"\r\n                      lineCh_brColor=\"#1B998B\"\r\n                      countryCode={country}\r\n                    />\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col md={6}>\r\n          <Row>\r\n            <Col md={12}>\r\n              <CardTrend\r\n                statsIcon=\"fa fa-history\"\r\n                id=\"chartHours\"\r\n                title=\"Total Covid Cases\"\r\n                category=\"Cumulative Sum\"\r\n                stats=\"Updated 10 minutes ago\"\r\n                img_url=\"virus2\"\r\n                content={\r\n                  <div className=\"ct-chart\">\r\n                    <LineGraphForTotal\r\n                      className=\"app__graph\"\r\n                      casesType=\"cases\"\r\n                      lineCh_bgColor=\"rgba(38, 84, 124, 0.5)\"\r\n                      lineCh_brColor=\"#26547C\"\r\n                      countryCode={country}\r\n                    />\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <CardTrend\r\n                statsIcon=\"fa fa-history\"\r\n                id=\"chartHours\"\r\n                title=\"Total Deaths\"\r\n                category=\"Cumulative Sum\"\r\n                stats=\"Updated 10 minutes ago\"\r\n                img_url=\"death\"\r\n                content={\r\n                  <div className=\"ct-chart\">\r\n                    <LineGraphForTotal\r\n                      className=\"app__graph\"\r\n                      casesType=\"deaths\"\r\n                      lineCh_bgColor=\"rgba(209, 73, 91, 0.5)\"\r\n                      lineCh_brColor=\"#D1495B\"\r\n                      countryCode={country}\r\n                    />\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <CardTrend\r\n                statsIcon=\"fa fa-history\"\r\n                id=\"chartHours\"\r\n                title=\"Total Recovered Patients\"\r\n                category=\"Cumulative Sum\"\r\n                stats=\"Updated 10 minutes ago\"\r\n                img_url=\"pat\"\r\n                content={\r\n                  <div className=\"ct-chart\">\r\n                    <LineGraphForTotal\r\n                      className=\"app__graph\"\r\n                      casesType=\"recovered\"\r\n                      lineCh_bgColor=\"rgba(27, 153, 139, 0.5)\"\r\n                      lineCh_brColor=\"#1B998B\"\r\n                      countryCode={country}\r\n                    />\r\n                  </div>\r\n                }\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyChart;\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\nimport CalenderCountriesContainer from \"../components/CalenderCharts/CalenderTotalContainer\";\r\nimport TodayCalenderContainer from \"../components/CalenderCharts/TodayCalenderContainer\";\r\nimport PieChartForCountryContainer from \"../components/PieChartForCountry/PieChartForCountryContainer\";\r\nimport DailyChart from \"../components/CountryLineGraph/DailyChartsForCountry\";\r\n\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\n\r\nconst CovidCountryTracker = () => {\r\n  return (\r\n    <div className='covidcountry__tracker'>\r\n      <Grid fluid>\r\n        <br />\r\n        <Row>\r\n          <Col md={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <TodayCalenderContainer />\r\n              </CardContent>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col md={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <CalenderCountriesContainer />\r\n              </CardContent>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n\r\n        <Row>\r\n          <Col md={12}>\r\n            <PieChartForCountryContainer />\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <Col md={12}>\r\n            <DailyChart />\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CovidCountryTracker;\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport \"./infobox.css\";\r\n\r\nfunction InfoBox({ title, cases, total, active, isRed, ...props }) {\r\n  console.log(title, active);\r\n  return (\r\n    <Card\r\n      onClick={props.onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${\r\n        isRed && \"infoBox--red\"\r\n      }`}\r\n    >\r\n      <CardContent className=\"infobox__content\">\r\n        <Typography\r\n          className=\"infoBox__title\"\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          {title}\r\n        </Typography>\r\n        <h2 className={`infoBox__cases ${!isRed && \"infoBox__cases--green\"}`}>\r\n          {cases}\r\n        </h2>\r\n\r\n        <Typography className=\"infoBox__total\" color=\"textSecondary\">\r\n          {total} Total\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    rgb: \"rgb(204, 16, 52)\",\r\n    half_op: \"rgba(204, 16, 52, 0.5)\",\r\n    multiplier: 600,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 1000,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    rgb: \"rgb(251, 68, 67)\",\r\n    half_op: \"rgba(251, 68, 67, 0.5)\",\r\n    multiplier: 1800,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  let sortedData = [...data];\r\n  sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      color={casesTypeColors[casesType].hex}\r\n      fillColor={casesTypeColors[casesType].hex}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","import React from \"react\";\r\nimport { Map as LeafletMap, TileLayer } from \"react-leaflet\";\r\nimport \"./map.css\";\r\nimport { showDataOnMap } from \"./util\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <LeafletMap center={center} zoom={zoom}>\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./mapcontainer.css\";\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport InfoBox from \"./InfoBox\";\r\nimport { sortData, prettyPrintStat } from \"./util\";\r\nimport numeral from \"numeral\";\r\nimport Map from \"./Map\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst MapContainer = () => {\r\n  const [country, setInputCountry] = useState(\"worldwide\");\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [countries, setCountries] = useState([]);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\r\n  const [mapZoom, setMapZoom] = useState(3);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n          let sortedData = sortData(data);\r\n          setCountries(countries);\r\n          setMapCountries(data);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  console.log(casesType);\r\n\r\n  const onCountryChange = async (e) => {\r\n    const countryCode = e.target.value;\r\n\r\n    const url =\r\n      countryCode === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setInputCountry(countryCode);\r\n        setCountryInfo(data);\r\n        countryCode === \"worldwide\"\r\n          ? setMapCenter([34.80746, -40.4796])\r\n          : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\r\n\r\n        countryCode === \"worldwide\" ? setMapZoom(3) : setMapZoom(4);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='leafletmap__container'>\r\n      <div className='app__header'>\r\n        <h1>Geographical Mapping</h1>\r\n        <div className='leafletmap__subheader'>\r\n          <span className='leafletmap__label'>\r\n            Select any country to zoom-in\r\n          </span>\r\n          <FormControl className='leafletmap__dropdown'>\r\n            <Select\r\n              variant='outlined'\r\n              value={country}\r\n              onChange={onCountryChange}\r\n            >\r\n              <MenuItem value='worldwide'>Worldwide</MenuItem>\r\n              {countries.map((country) => (\r\n                <MenuItem value={country.value}>{country.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n      <div className='app__stats'>\r\n        <InfoBox\r\n          onClick={(e) => setCasesType(\"cases\")}\r\n          title='Coronavirus Cases'\r\n          isRed\r\n          active={casesType === \"cases\"}\r\n          cases={prettyPrintStat(countryInfo.todayCases)}\r\n          total={numeral(countryInfo.cases).format(\"0.0a\")}\r\n        />\r\n        <InfoBox\r\n          onClick={(e) => setCasesType(\"recovered\")}\r\n          title='Recovered'\r\n          active={casesType === \"recovered\"}\r\n          cases={prettyPrintStat(countryInfo.todayRecovered)}\r\n          total={numeral(countryInfo.recovered).format(\"0.0a\")}\r\n        />\r\n        <InfoBox\r\n          onClick={(e) => setCasesType(\"deaths\")}\r\n          title='Deaths'\r\n          isRed\r\n          active={casesType === \"deaths\"}\r\n          cases={prettyPrintStat(countryInfo.todayDeaths)}\r\n          total={numeral(countryInfo.deaths).format(\"0.0a\")}\r\n        />\r\n      </div>\r\n      <Map\r\n        countries={mapCountries}\r\n        casesType={casesType}\r\n        center={mapCenter}\r\n        zoom={mapZoom}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapContainer;\r\n","import React from \"react\";\r\nimport { ResponsiveChoropleth } from \"@nivo/geo\";\r\nimport countries from \"./world_countries.json\";\r\n//import MAP_DATA from \"./data\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst MyResponsiveChoropleth = ({ data, domainValue, colorScheme }) => {\r\n  //const data = MAP_DATA;\r\n  console.log(data);\r\n  return (\r\n    <ResponsiveChoropleth\r\n      data={data}\r\n      features={countries.features}\r\n      margin={{ top: 0, right: 0, bottom: 0, left: 0 }}\r\n      colors={colorScheme}\r\n      domain={[0, domainValue]}\r\n      unknownColor=\"#666666\"\r\n      label=\"properties.name\"\r\n      valueFormat=\".2s\"\r\n      projectionTranslation={[0.55, 0.5]}\r\n      projectionRotation={[0, 0, 0]}\r\n      enableGraticule={true}\r\n      graticuleLineColor=\"#dddddd\"\r\n      borderWidth={0.5}\r\n      borderColor=\"#152538\"\r\n      projectionType=\"naturalEarth1\"\r\n      projectionScale=\"150\"\r\n      legends={[\r\n        {\r\n          anchor: \"bottom-left\",\r\n          direction: \"column\",\r\n          justify: true,\r\n          translateX: 20,\r\n          translateY: -100,\r\n          itemsSpacing: 0,\r\n          itemWidth: 94,\r\n          itemHeight: 18,\r\n          itemDirection: \"left-to-right\",\r\n          itemTextColor: \"#444444\",\r\n          itemOpacity: 0.85,\r\n          symbolSize: 18,\r\n          effects: [\r\n            {\r\n              on: \"hover\",\r\n              style: {\r\n                itemTextColor: \"#000000\",\r\n                itemOpacity: 1,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MyResponsiveChoropleth;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MyResponsiveChoropleth from \"./NivoMap\";\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport \"./nivomap.css\";\r\n\r\nconst NivoMapContainer = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const [domainValue, setDomainValue] = useState(5000000);\r\n  const [colorScheme, setColorScheme] = useState(\"YlOrRd\");\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (casesType === \"cases\") {\r\n            const count = data.map((country) => ({\r\n              id: country.countryInfo.iso3,\r\n              value: country.cases,\r\n            }));\r\n            setCountries(count);\r\n            setDomainValue(200000);\r\n            setColorScheme(\"YlOrRd\");\r\n          }\r\n          if (casesType === \"deaths\") {\r\n            const count = data.map((country) => ({\r\n              id: country.countryInfo.iso3,\r\n              value: country.deaths,\r\n            }));\r\n            setCountries(count);\r\n            setDomainValue(20000);\r\n            setColorScheme(\"YlOrRd\");\r\n          }\r\n          if (casesType === \"recovered\") {\r\n            const count = data.map((country) => ({\r\n              id: country.countryInfo.iso3,\r\n              value: country.recovered,\r\n            }));\r\n            setCountries(count);\r\n            setDomainValue(100000);\r\n            setColorScheme(\"greens\");\r\n          }\r\n\r\n          console.log(casesType);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, [casesType]);\r\n\r\n  console.log(countries);\r\n\r\n  const onCaseTypeChange = async (e) => {\r\n    setCasesType(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"nivomap__container\">\r\n      <Card>\r\n        <CardContent>\r\n          <div className=\"nivomap__header\">\r\n            <span className=\"nivomap__title\">Select Type: </span>\r\n            <FormControl className=\"nivomap__dropdown\">\r\n              <Select\r\n                variant=\"outlined\"\r\n                value={casesType}\r\n                onChange={onCaseTypeChange}\r\n                className=\"nivomap__select\"\r\n              >\r\n                <MenuItem value=\"cases\">Cases</MenuItem>\r\n                <MenuItem value=\"deaths\">Deaths</MenuItem>\r\n                <MenuItem value=\"recovered\">Recovered</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n\r\n          <div style={{ height: 400 }}>\r\n            <MyResponsiveChoropleth\r\n              data={countries}\r\n              domainValue={domainValue}\r\n              colorScheme={colorScheme}\r\n            />\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NivoMapContainer;\r\n","/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport Dashboard from \"views/Dashboard.jsx\";\r\nimport CovidCountryTracker from \"views/CovidCountryTracker.jsx\";\r\nimport GeoAnalysis from \"views/GeoAnalysis.jsx\";\r\n\r\nconst dashboardRoutes = [\r\n  {\r\n    path: \"/dashboard\",\r\n    name: \"Covid Live Tracker\",\r\n    icon: \"pe-7s-graph\",\r\n    component: Dashboard,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/user\",\r\n    name: \"Covid Country Tracker\",\r\n    icon: \"pe-7s-display1\",\r\n    component: CovidCountryTracker,\r\n    layout: \"/admin\",\r\n  },\r\n  {\r\n    path: \"/table\",\r\n    name: \"Geo Analysis\",\r\n    icon: \"pe-7s-global\",\r\n    component: GeoAnalysis,\r\n    layout: \"/admin\",\r\n  },\r\n];\r\n\r\nexport default dashboardRoutes;\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Row, Col } from \"react-bootstrap\";\r\n\r\nimport Card from \"components/Card/Card.jsx\";\r\nimport { thArray, tdArray } from \"variables/Variables.jsx\";\r\nimport MapContainer from \"../components/GeoAnalysis/MapContainer\";\r\nimport NivoMapContainer from \"../components/NivoMap/NivoMapContainer\";\r\n\r\nclass TableList extends Component {\r\n  render() {\r\n    return (\r\n      <div className='content'>\r\n        <Grid fluid>\r\n          <Row>\r\n            <Col md={12}>\r\n              <h3>\r\n                <strong>Geographical Analysis</strong>\r\n              </h3>\r\n              <NivoMapContainer />\r\n            </Col>\r\n\r\n            <Col md={12}>\r\n              <MapContainer />\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableList;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport NotificationSystem from \"react-notification-system\";\r\n\r\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\r\nimport Footer from \"components/Footer/Footer\";\r\nimport Sidebar from \"components/Sidebar/Sidebar\";\r\n\r\nimport { style } from \"variables/Variables.jsx\";\r\n\r\nimport routes from \"routes.js\";\r\n\r\nimport image from \"assets/img/sidebar-3.jpg\";\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      _notificationSystem: null,\r\n      image: image,\r\n      color: \"black\",\r\n      hasImage: true,\r\n      fixedClasses: \"dropdown show-dropdown open\",\r\n    };\r\n  }\r\n  handleNotificationClick = (position) => {\r\n    var color = Math.floor(Math.random() * 4 + 1);\r\n    var level;\r\n    switch (color) {\r\n      case 1:\r\n        level = \"success\";\r\n        break;\r\n      case 2:\r\n        level = \"warning\";\r\n        break;\r\n      case 3:\r\n        level = \"error\";\r\n        break;\r\n      case 4:\r\n        level = \"info\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.state._notificationSystem.addNotification({\r\n      title: <span data-notify='icon' className='pe-7s-gift' />,\r\n      message: (\r\n        <div>\r\n          Welcome to <b>Covid Live Tracker</b> - Stay Home Stay Safe\r\n        </div>\r\n      ),\r\n      level: level,\r\n      position: position,\r\n      autoDismiss: 15,\r\n    });\r\n  };\r\n  getRoutes = (routes) => {\r\n    return routes.map((prop, key) => {\r\n      if (prop.layout === \"/admin\") {\r\n        return (\r\n          <Route\r\n            path={prop.layout + prop.path}\r\n            render={(props) => (\r\n              <prop.component\r\n                {...props}\r\n                handleClick={this.handleNotificationClick}\r\n              />\r\n            )}\r\n            key={key}\r\n          />\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n  };\r\n  getBrandText = (path) => {\r\n    for (let i = 0; i < routes.length; i++) {\r\n      if (\r\n        this.props.location.pathname.indexOf(\r\n          routes[i].layout + routes[i].path\r\n        ) !== -1\r\n      ) {\r\n        return routes[i].name;\r\n      }\r\n    }\r\n    return \"Brand\";\r\n  };\r\n  handleImageClick = (image) => {\r\n    this.setState({ image: image });\r\n  };\r\n  handleColorClick = (color) => {\r\n    this.setState({ color: color });\r\n  };\r\n  handleHasImage = (hasImage) => {\r\n    this.setState({ hasImage: hasImage });\r\n  };\r\n  handleFixedClick = () => {\r\n    if (this.state.fixedClasses === \"dropdown\") {\r\n      this.setState({ fixedClasses: \"dropdown show-dropdown open\" });\r\n    } else {\r\n      this.setState({ fixedClasses: \"dropdown\" });\r\n    }\r\n  };\r\n  componentDidMount() {}\r\n  componentDidUpdate(e) {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      e.history.location.pathname !== e.location.pathname &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n    }\r\n    if (e.history.action === \"PUSH\") {\r\n      document.documentElement.scrollTop = 0;\r\n      document.scrollingElement.scrollTop = 0;\r\n      this.refs.mainPanel.scrollTop = 0;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='wrapper'>\r\n        <NotificationSystem ref='notificationSystem' style={style} />\r\n        <Sidebar\r\n          {...this.props}\r\n          routes={routes}\r\n          image={this.state.image}\r\n          color={this.state.color}\r\n          hasImage={this.state.hasImage}\r\n        />\r\n        <div id='main-panel' className='main-panel' ref='mainPanel'>\r\n          <AdminNavbar\r\n            {...this.props}\r\n            brandText={this.getBrandText(this.props.location.pathname)}\r\n          />\r\n          <Switch>{this.getRoutes(routes)}</Switch>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","/*!\r\n\r\n=========================================================\r\n* Light Bootstrap Dashboard React - v1.3.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\r\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./assets/css/animate.min.css\";\r\nimport \"./assets/sass/light-bootstrap-dashboard-react.scss?v=1.3.0\";\r\nimport \"./assets/css/demo.css\";\r\nimport \"./assets/css/pe-icon-7-stroke.css\";\r\n\r\nimport AdminLayout from \"layouts/Admin.jsx\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\r\n      <Redirect from=\"/\" to=\"/admin/dashboard\" />\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}