{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jazii\\\\Desktop\\\\covid\\\\covid-tracker\\\\src\\\\components\\\\HeaderStats\\\\HeaderStats.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport MainStatsCard from \"../MainStatsCard/MainStatsCard\";\nimport { Row, Col } from \"react-bootstrap\";\nimport numeral from \"numeral\";\n\nconst HeaderStats = () => {\n  const [countryInfo, setCountryInfo] = useState({});\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  const mildCases = parseInt(countryInfo.active) - parseInt(countryInfo.critical);\n  const casesWithOutcome = parseInt(countryInfo.cases) - parseInt(countryInfo.active);\n  const mildPercentage = parseInt(mildCases) / parseInt(countryInfo.active);\n  const recoveredPercentage = parseInt(countryInfo.recovered) / parseInt(casesWithOutcome);\n  const deathsPercentage = parseInt(countryInfo.deaths) / parseInt(casesWithOutcome);\n  const criticalPercentage = parseInt(countryInfo.critical) / parseInt(countryInfo.active);\n  console.log(criticalPercentage);\n\n  const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    md: 6,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MainStatsCard, {\n    title: \"TOTAL ACTIVE CASES\",\n    cases1: numeral(countryInfo.active).format(\"0,0\"),\n    subheading1: \"Total infected patients\",\n    cases2: numeral(mildCases).format(\"0,0\"),\n    subheading2: \"in Mild condition\",\n    cases3: numeral(countryInfo.critical).format(\"0,0\"),\n    subheading3: \"Serious/Critical\",\n    imageUrl: \"https://i.ibb.co/GQsmvsc/cell.png\",\n    percentage1: numeral(mildPercentage).format(\"0%\"),\n    percentage2: numeral(criticalPercentage).format(\"0%\"),\n    isRed: true,\n    isGreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    md: 6,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MainStatsCard, {\n    title: \"TOTAL CLOSED CASES\",\n    cases1: numeral(casesWithOutcome).format(\"0,0\"),\n    subheading1: \"Cases with an outcome\",\n    cases2: numeral(countryInfo.recovered).format(\"0,0\"),\n    subheading2: \"Recovered\",\n    cases3: numeral(countryInfo.deaths).format(\"0,0\"),\n    subheading3: \"Deaths\",\n    imageUrl: \"https://i.ibb.co/S5T920n/recovered.png\",\n    percentage1: numeral(recoveredPercentage).format(\"0%\"),\n    percentage2: numeral(deathsPercentage).format(\"0%\"),\n    isRed: true,\n    isGreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    md: 6,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MainStatsCard, {\n    title: \"TODAY CASES\",\n    cases1: numeral(countryInfo.todayCases).format(\"0,0\"),\n    subheading1: \"Active cases\",\n    cases2: numeral(countryInfo.todayRecovered).format(\"0,0\"),\n    subheading2: \"Recovered cases\",\n    cases3: numeral(countryInfo.todayDeaths).format(\"0,0\"),\n    subheading3: \"Deaths\",\n    imageUrl: \"https://i.ibb.co/hKd6xQs/chemistry.png\",\n    isRed: true,\n    isGreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: 3,\n    md: 6,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MainStatsCard, {\n    title: \"CASES PER 1 MILLION\",\n    cases1: numeral(countryInfo.casesPerOneMillion).format(\"0,0\"),\n    subheading1: \"Cases/1Mil\",\n    cases2: numeral(countryInfo.recoveredPerOneMillion).format(\"0,0\"),\n    subheading2: \"Recovered/1Mil\",\n    cases3: numeral(countryInfo.deathsPerOneMillion).format(\"0,0\"),\n    subheading3: \"Deaths/1Mil\",\n    imageUrl: \"https://i.ibb.co/RCNGsm8/patient.png\",\n    isRed: true,\n    isGreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default HeaderStats;","map":{"version":3,"sources":["C:/Users/jazii/Desktop/covid/covid-tracker/src/components/HeaderStats/HeaderStats.jsx"],"names":["React","useState","useEffect","MainStatsCard","Row","Col","numeral","HeaderStats","countryInfo","setCountryInfo","fetch","then","response","json","data","mildCases","parseInt","active","critical","casesWithOutcome","cases","mildPercentage","recoveredPercentage","recovered","deathsPercentage","deaths","criticalPercentage","console","log","prettyPrintStat","stat","format","todayCases","todayRecovered","todayDeaths","casesPerOneMillion","recoveredPerOneMillion","deathsPerOneMillion"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MainStatsCard from \"../MainStatsCard/MainStatsCard\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport numeral from \"numeral\";\r\n\r\nconst HeaderStats = () => {\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      });\r\n  }, []);\r\n\r\n  const mildCases =\r\n    parseInt(countryInfo.active) - parseInt(countryInfo.critical);\r\n  const casesWithOutcome =\r\n    parseInt(countryInfo.cases) - parseInt(countryInfo.active);\r\n\r\n  const mildPercentage = parseInt(mildCases) / parseInt(countryInfo.active);\r\n  const recoveredPercentage =\r\n    parseInt(countryInfo.recovered) / parseInt(casesWithOutcome);\r\n  const deathsPercentage =\r\n    parseInt(countryInfo.deaths) / parseInt(casesWithOutcome);\r\n\r\n  const criticalPercentage =\r\n    parseInt(countryInfo.critical) / parseInt(countryInfo.active);\r\n  console.log(criticalPercentage);\r\n\r\n  const prettyPrintStat = (stat) =>\r\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"TOTAL ACTIVE CASES\"\r\n          cases1={numeral(countryInfo.active).format(\"0,0\")}\r\n          subheading1=\"Total infected patients\"\r\n          cases2={numeral(mildCases).format(\"0,0\")}\r\n          subheading2=\"in Mild condition\"\r\n          cases3={numeral(countryInfo.critical).format(\"0,0\")}\r\n          subheading3=\"Serious/Critical\"\r\n          imageUrl=\"https://i.ibb.co/GQsmvsc/cell.png\"\r\n          percentage1={numeral(mildPercentage).format(\"0%\")}\r\n          percentage2={numeral(criticalPercentage).format(\"0%\")}\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"TOTAL CLOSED CASES\"\r\n          cases1={numeral(casesWithOutcome).format(\"0,0\")}\r\n          subheading1=\"Cases with an outcome\"\r\n          cases2={numeral(countryInfo.recovered).format(\"0,0\")}\r\n          subheading2=\"Recovered\"\r\n          cases3={numeral(countryInfo.deaths).format(\"0,0\")}\r\n          subheading3=\"Deaths\"\r\n          imageUrl=\"https://i.ibb.co/S5T920n/recovered.png\"\r\n          percentage1={numeral(recoveredPercentage).format(\"0%\")}\r\n          percentage2={numeral(deathsPercentage).format(\"0%\")}\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"TODAY CASES\"\r\n          cases1={numeral(countryInfo.todayCases).format(\"0,0\")}\r\n          subheading1=\"Active cases\"\r\n          cases2={numeral(countryInfo.todayRecovered).format(\"0,0\")}\r\n          subheading2=\"Recovered cases\"\r\n          cases3={numeral(countryInfo.todayDeaths).format(\"0,0\")}\r\n          subheading3=\"Deaths\"\r\n          imageUrl=\"https://i.ibb.co/hKd6xQs/chemistry.png\"\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"CASES PER 1 MILLION\"\r\n          cases1={numeral(countryInfo.casesPerOneMillion).format(\"0,0\")}\r\n          subheading1=\"Cases/1Mil\"\r\n          cases2={numeral(countryInfo.recoveredPerOneMillion).format(\"0,0\")}\r\n          subheading2=\"Recovered/1Mil\"\r\n          cases3={numeral(countryInfo.deathsPerOneMillion).format(\"0,0\")}\r\n          subheading3=\"Deaths/1Mil\"\r\n          imageUrl=\"https://i.ibb.co/RCNGsm8/patient.png\"\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default HeaderStats;\r\n"]},"metadata":{},"sourceType":"module"}