{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\jazii\\\\Desktop\\\\covid\\\\covid-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\jazii\\\\Desktop\\\\covid\\\\covid-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\jazii\\\\Desktop\\\\covid\\\\covid-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import\"./mapcontainer.css\";import{MenuItem,FormControl,Select,Card,CardContent}from\"@material-ui/core\";import InfoBox from\"./InfoBox\";import{sortData,prettyPrintStat}from\"./util\";import numeral from\"numeral\";import Map from\"./Map\";import\"leaflet/dist/leaflet.css\";var MapContainer=function MapContainer(){var _useState=useState(\"worldwide\"),_useState2=_slicedToArray(_useState,2),country=_useState2[0],setInputCountry=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),countryInfo=_useState4[0],setCountryInfo=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),countries=_useState6[0],setCountries=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),mapCountries=_useState8[0],setMapCountries=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),tableData=_useState10[0],setTableData=_useState10[1];var _useState11=useState(\"cases\"),_useState12=_slicedToArray(_useState11,2),casesType=_useState12[0],setCasesType=_useState12[1];var _useState13=useState({lat:34.80746,lng:-40.4796}),_useState14=_slicedToArray(_useState13,2),mapCenter=_useState14[0],setMapCenter=_useState14[1];var _useState15=useState(3),_useState16=_slicedToArray(_useState15,2),mapZoom=_useState16[0],setMapZoom=_useState16[1];useEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});var sortedData=sortData(data);setCountries(countries);setMapCountries(data);});case 1:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);console.log(casesType);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=e.target.value;url=countryCode===\"worldwide\"?\"https://disease.sh/v3/covid-19/all\":\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=4;return fetch(url).then(function(response){return response.json();}).then(function(data){setInputCountry(countryCode);setCountryInfo(data);countryCode===\"worldwide\"?setMapCenter([34.80746,-40.4796]):setMapCenter([data.countryInfo.lat,data.countryInfo.long]);countryCode===\"worldwide\"?setMapZoom(3):setMapZoom(4);});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:\"leafletmap__container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"app__header\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Geographical Mapping\"),/*#__PURE__*/React.createElement(\"div\",{className:\"leafletmap__subheader\"},/*#__PURE__*/React.createElement(\"span\",{className:\"leafletmap__label\"},\"Select any country to zoom-in\"),/*#__PURE__*/React.createElement(FormControl,{className:\"leafletmap__dropdown\"},/*#__PURE__*/React.createElement(Select,{variant:\"outlined\",value:country,onChange:onCountryChange},/*#__PURE__*/React.createElement(MenuItem,{value:\"worldwide\"},\"Worldwide\"),countries.map(function(country){return/*#__PURE__*/React.createElement(MenuItem,{value:country.value},country.name);}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"app__stats\"},/*#__PURE__*/React.createElement(InfoBox,{onClick:function onClick(e){return setCasesType(\"cases\");},title:\"Coronavirus Cases\",isRed:true,active:casesType===\"cases\",cases:prettyPrintStat(countryInfo.todayCases),total:numeral(countryInfo.cases).format(\"0.0a\")}),/*#__PURE__*/React.createElement(InfoBox,{onClick:function onClick(e){return setCasesType(\"recovered\");},title:\"Recovered\",active:casesType===\"recovered\",cases:prettyPrintStat(countryInfo.todayRecovered),total:numeral(countryInfo.recovered).format(\"0.0a\")}),/*#__PURE__*/React.createElement(InfoBox,{onClick:function onClick(e){return setCasesType(\"deaths\");},title:\"Deaths\",isRed:true,active:casesType===\"deaths\",cases:prettyPrintStat(countryInfo.todayDeaths),total:numeral(countryInfo.deaths).format(\"0.0a\")})),/*#__PURE__*/React.createElement(Map,{countries:mapCountries,casesType:casesType,center:mapCenter,zoom:mapZoom}));};export default MapContainer;","map":{"version":3,"sources":["C:/Users/jazii/Desktop/covid/covid-tracker/src/components/GeoAnalysis/MapContainer.jsx"],"names":["React","useState","useEffect","MenuItem","FormControl","Select","Card","CardContent","InfoBox","sortData","prettyPrintStat","numeral","Map","MapContainer","country","setInputCountry","countryInfo","setCountryInfo","countries","setCountries","mapCountries","setMapCountries","tableData","setTableData","casesType","setCasesType","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","console","log","onCountryChange","e","countryCode","target","url","long","todayCases","cases","format","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./mapcontainer.css\";\r\nimport {\r\n  MenuItem,\r\n  FormControl,\r\n  Select,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport InfoBox from \"./InfoBox\";\r\nimport { sortData, prettyPrintStat } from \"./util\";\r\nimport numeral from \"numeral\";\r\nimport Map from \"./Map\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nconst MapContainer = () => {\r\n  const [country, setInputCountry] = useState(\"worldwide\");\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [countries, setCountries] = useState([]);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\r\n  const [mapZoom, setMapZoom] = useState(3);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n          let sortedData = sortData(data);\r\n          setCountries(countries);\r\n          setMapCountries(data);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  console.log(casesType);\r\n\r\n  const onCountryChange = async (e) => {\r\n    const countryCode = e.target.value;\r\n\r\n    const url =\r\n      countryCode === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setInputCountry(countryCode);\r\n        setCountryInfo(data);\r\n        countryCode === \"worldwide\"\r\n          ? setMapCenter([34.80746, -40.4796])\r\n          : setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\r\n\r\n        countryCode === \"worldwide\" ? setMapZoom(3) : setMapZoom(4);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='leafletmap__container'>\r\n      <div className='app__header'>\r\n        <h1>Geographical Mapping</h1>\r\n        <div className='leafletmap__subheader'>\r\n          <span className='leafletmap__label'>\r\n            Select any country to zoom-in\r\n          </span>\r\n          <FormControl className='leafletmap__dropdown'>\r\n            <Select\r\n              variant='outlined'\r\n              value={country}\r\n              onChange={onCountryChange}\r\n            >\r\n              <MenuItem value='worldwide'>Worldwide</MenuItem>\r\n              {countries.map((country) => (\r\n                <MenuItem value={country.value}>{country.name}</MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n      </div>\r\n      <div className='app__stats'>\r\n        <InfoBox\r\n          onClick={(e) => setCasesType(\"cases\")}\r\n          title='Coronavirus Cases'\r\n          isRed\r\n          active={casesType === \"cases\"}\r\n          cases={prettyPrintStat(countryInfo.todayCases)}\r\n          total={numeral(countryInfo.cases).format(\"0.0a\")}\r\n        />\r\n        <InfoBox\r\n          onClick={(e) => setCasesType(\"recovered\")}\r\n          title='Recovered'\r\n          active={casesType === \"recovered\"}\r\n          cases={prettyPrintStat(countryInfo.todayRecovered)}\r\n          total={numeral(countryInfo.recovered).format(\"0.0a\")}\r\n        />\r\n        <InfoBox\r\n          onClick={(e) => setCasesType(\"deaths\")}\r\n          title='Deaths'\r\n          isRed\r\n          active={casesType === \"deaths\"}\r\n          cases={prettyPrintStat(countryInfo.todayDeaths)}\r\n          total={numeral(countryInfo.deaths).format(\"0.0a\")}\r\n        />\r\n      </div>\r\n      <Map\r\n        countries={mapCountries}\r\n        casesType={casesType}\r\n        center={mapCenter}\r\n        zoom={mapZoom}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapContainer;\r\n"]},"metadata":{},"sourceType":"module"}