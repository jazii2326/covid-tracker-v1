{"ast":null,"code":"export const buildChartData = (data, casesTypes) => {\n  console.log(data);\n  const chartData = [];\n  let lastDataPoint;\n\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      const newDataPoint = {\n        x: date,\n        y: data[casesTypes][date] - lastDataPoint\n      };\n      chartData.push(newDataPoint);\n    }\n\n    lastDataPoint = data[casesTypes][date];\n  }\n\n  return chartData;\n};\nexport function convertDate(date) {\n  var d = new Date(date),\n      month = \"\" + (d.getMonth() + 1),\n      day = \"\" + d.getDate(),\n      year = d.getFullYear();\n  if (month.length < 2) month = \"0\" + month;\n  if (day.length < 2) day = \"0\" + day;\n  return [year, month, day].join(\"-\");\n}\nexport function findMax(array) {\n  return Math.max.apply(Math, array.map(function (o) {\n    return o.value;\n  }));\n}","map":{"version":3,"sources":["C:/Users/jazii/Desktop/covid/covid-tracker/src/components/CalenderCharts/utils.js"],"names":["buildChartData","data","casesTypes","console","log","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","convertDate","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","findMax","array","Math","max","apply","map","o","value"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAMI,SAAS,GAAG,EAAlB;AACA,MAAIC,aAAJ;;AACA,OAAK,IAAIC,IAAT,IAAiBN,IAAI,CAACO,KAAtB,EAA6B;AAC3B,QAAIF,aAAJ,EAAmB;AACjB,YAAMG,YAAY,GAAG;AACnBC,QAAAA,CAAC,EAAEH,IADgB;AAEnBI,QAAAA,CAAC,EAAEV,IAAI,CAACC,UAAD,CAAJ,CAAiBK,IAAjB,IAAyBD;AAFT,OAArB;AAIAD,MAAAA,SAAS,CAACO,IAAV,CAAeH,YAAf;AACD;;AACDH,IAAAA,aAAa,GAAGL,IAAI,CAACC,UAAD,CAAJ,CAAiBK,IAAjB,CAAhB;AACD;;AACD,SAAOF,SAAP;AACD,CAfM;AAiBP,OAAO,SAASQ,WAAT,CAAqBN,IAArB,EAA2B;AAChC,MAAIO,CAAC,GAAG,IAAIC,IAAJ,CAASR,IAAT,CAAR;AAAA,MACES,KAAK,GAAG,MAAMF,CAAC,CAACG,QAAF,KAAe,CAArB,CADV;AAAA,MAEEC,GAAG,GAAG,KAAKJ,CAAC,CAACK,OAAF,EAFb;AAAA,MAGEC,IAAI,GAAGN,CAAC,CAACO,WAAF,EAHT;AAKA,MAAIL,KAAK,CAACM,MAAN,GAAe,CAAnB,EAAsBN,KAAK,GAAG,MAAMA,KAAd;AACtB,MAAIE,GAAG,CAACI,MAAJ,GAAa,CAAjB,EAAoBJ,GAAG,GAAG,MAAMA,GAAZ;AAEpB,SAAO,CAACE,IAAD,EAAOJ,KAAP,EAAcE,GAAd,EAAmBK,IAAnB,CAAwB,GAAxB,CAAP;AACD;AAED,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,SAAOC,IAAI,CAACC,GAAL,CAASC,KAAT,CACLF,IADK,EAELD,KAAK,CAACI,GAAN,CAAU,UAAUC,CAAV,EAAa;AACrB,WAAOA,CAAC,CAACC,KAAT;AACD,GAFD,CAFK,CAAP;AAMD","sourcesContent":["export const buildChartData = (data, casesTypes) => {\r\n  console.log(data);\r\n  const chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      const newDataPoint = {\r\n        x: date,\r\n        y: data[casesTypes][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesTypes][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nexport function convertDate(date) {\r\n  var d = new Date(date),\r\n    month = \"\" + (d.getMonth() + 1),\r\n    day = \"\" + d.getDate(),\r\n    year = d.getFullYear();\r\n\r\n  if (month.length < 2) month = \"0\" + month;\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return [year, month, day].join(\"-\");\r\n}\r\n\r\nexport function findMax(array) {\r\n  return Math.max.apply(\r\n    Math,\r\n    array.map(function (o) {\r\n      return o.value;\r\n    })\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}