{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\jazii\\\\Desktop\\\\covid\\\\covid-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import MainStatsCard from\"../MainStatsCard/MainStatsCard\";import{Row,Col}from\"react-bootstrap\";import numeral from\"numeral\";var HeaderStats=function HeaderStats(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),countryInfo=_useState2[0],setCountryInfo=_useState2[1];useEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);var mildCases=parseInt(countryInfo.active)-parseInt(countryInfo.critical);var casesWithOutcome=parseInt(countryInfo.cases)-parseInt(countryInfo.active);var mildPercentage=parseInt(mildCases)/parseInt(countryInfo.active);var recoveredPercentage=parseInt(countryInfo.recovered)/parseInt(casesWithOutcome);var deathsPercentage=parseInt(countryInfo.deaths)/parseInt(casesWithOutcome);var criticalPercentage=parseInt(countryInfo.critical)/parseInt(countryInfo.active);console.log(criticalPercentage);var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{lg:3,md:6,sm:6,xs:12},/*#__PURE__*/React.createElement(MainStatsCard,{title:\"TOTAL ACTIVE CASES\",cases1:numeral(countryInfo.active).format(\"0,0\"),subheading1:\"Total infected patients\",cases2:numeral(mildCases).format(\"0,0\"),subheading2:\"in Mild condition\",cases3:numeral(countryInfo.critical).format(\"0,0\"),subheading3:\"Serious/Critical\",imageUrl:\"https://i.ibb.co/GQsmvsc/cell.png\",percentage1:numeral(mildPercentage).format(\"0%\"),percentage2:numeral(criticalPercentage).format(\"0%\"),isRed:true,isGreen:true})),/*#__PURE__*/React.createElement(Col,{lg:3,md:6,sm:6,xs:12},/*#__PURE__*/React.createElement(MainStatsCard,{title:\"TOTAL CLOSED CASES\",cases1:numeral(casesWithOutcome).format(\"0,0\"),subheading1:\"Cases with an outcome\",cases2:numeral(countryInfo.recovered).format(\"0,0\"),subheading2:\"Recovered\",cases3:numeral(countryInfo.deaths).format(\"0,0\"),subheading3:\"Deaths\",imageUrl:\"https://i.ibb.co/S5T920n/recovered.png\",percentage1:numeral(recoveredPercentage).format(\"0%\"),percentage2:numeral(deathsPercentage).format(\"0%\"),isRed:true,isGreen:true})),/*#__PURE__*/React.createElement(Col,{lg:3,md:6,sm:6,xs:12},/*#__PURE__*/React.createElement(MainStatsCard,{title:\"TODAY CASES\",cases1:numeral(countryInfo.todayCases).format(\"0,0\"),subheading1:\"Active cases\",cases2:numeral(countryInfo.todayRecovered).format(\"0,0\"),subheading2:\"Recovered cases\",cases3:numeral(countryInfo.todayDeaths).format(\"0,0\"),subheading3:\"Deaths\",imageUrl:\"https://i.ibb.co/hKd6xQs/chemistry.png\",isRed:true,isGreen:true})),/*#__PURE__*/React.createElement(Col,{lg:3,md:6,sm:6,xs:12},/*#__PURE__*/React.createElement(MainStatsCard,{title:\"CASES PER 1 MILLION\",cases1:numeral(countryInfo.casesPerOneMillion).format(\"0,0\"),subheading1:\"Cases/1Mil\",cases2:numeral(countryInfo.recoveredPerOneMillion).format(\"0,0\"),subheading2:\"Recovered/1Mil\",cases3:numeral(countryInfo.deathsPerOneMillion).format(\"0,0\"),subheading3:\"Deaths/1Mil\",imageUrl:\"https://i.ibb.co/RCNGsm8/patient.png\",isRed:true,isGreen:true})));};export default HeaderStats;","map":{"version":3,"sources":["C:/Users/jazii/Desktop/covid/covid-tracker/src/components/HeaderStats/HeaderStats.jsx"],"names":["React","useState","useEffect","MainStatsCard","Row","Col","numeral","HeaderStats","countryInfo","setCountryInfo","fetch","then","response","json","data","mildCases","parseInt","active","critical","casesWithOutcome","cases","mildPercentage","recoveredPercentage","recovered","deathsPercentage","deaths","criticalPercentage","console","log","prettyPrintStat","stat","format","todayCases","todayRecovered","todayDeaths","casesPerOneMillion","recoveredPerOneMillion","deathsPerOneMillion"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport MainStatsCard from \"../MainStatsCard/MainStatsCard\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport numeral from \"numeral\";\r\n\r\nconst HeaderStats = () => {\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      });\r\n  }, []);\r\n\r\n  const mildCases =\r\n    parseInt(countryInfo.active) - parseInt(countryInfo.critical);\r\n  const casesWithOutcome =\r\n    parseInt(countryInfo.cases) - parseInt(countryInfo.active);\r\n\r\n  const mildPercentage = parseInt(mildCases) / parseInt(countryInfo.active);\r\n  const recoveredPercentage =\r\n    parseInt(countryInfo.recovered) / parseInt(casesWithOutcome);\r\n  const deathsPercentage =\r\n    parseInt(countryInfo.deaths) / parseInt(casesWithOutcome);\r\n\r\n  const criticalPercentage =\r\n    parseInt(countryInfo.critical) / parseInt(countryInfo.active);\r\n  console.log(criticalPercentage);\r\n\r\n  const prettyPrintStat = (stat) =>\r\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\n  return (\r\n    <Row>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"TOTAL ACTIVE CASES\"\r\n          cases1={numeral(countryInfo.active).format(\"0,0\")}\r\n          subheading1=\"Total infected patients\"\r\n          cases2={numeral(mildCases).format(\"0,0\")}\r\n          subheading2=\"in Mild condition\"\r\n          cases3={numeral(countryInfo.critical).format(\"0,0\")}\r\n          subheading3=\"Serious/Critical\"\r\n          imageUrl=\"https://i.ibb.co/GQsmvsc/cell.png\"\r\n          percentage1={numeral(mildPercentage).format(\"0%\")}\r\n          percentage2={numeral(criticalPercentage).format(\"0%\")}\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"TOTAL CLOSED CASES\"\r\n          cases1={numeral(casesWithOutcome).format(\"0,0\")}\r\n          subheading1=\"Cases with an outcome\"\r\n          cases2={numeral(countryInfo.recovered).format(\"0,0\")}\r\n          subheading2=\"Recovered\"\r\n          cases3={numeral(countryInfo.deaths).format(\"0,0\")}\r\n          subheading3=\"Deaths\"\r\n          imageUrl=\"https://i.ibb.co/S5T920n/recovered.png\"\r\n          percentage1={numeral(recoveredPercentage).format(\"0%\")}\r\n          percentage2={numeral(deathsPercentage).format(\"0%\")}\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"TODAY CASES\"\r\n          cases1={numeral(countryInfo.todayCases).format(\"0,0\")}\r\n          subheading1=\"Active cases\"\r\n          cases2={numeral(countryInfo.todayRecovered).format(\"0,0\")}\r\n          subheading2=\"Recovered cases\"\r\n          cases3={numeral(countryInfo.todayDeaths).format(\"0,0\")}\r\n          subheading3=\"Deaths\"\r\n          imageUrl=\"https://i.ibb.co/hKd6xQs/chemistry.png\"\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n      <Col lg={3} md={6} sm={6} xs={12}>\r\n        <MainStatsCard\r\n          title=\"CASES PER 1 MILLION\"\r\n          cases1={numeral(countryInfo.casesPerOneMillion).format(\"0,0\")}\r\n          subheading1=\"Cases/1Mil\"\r\n          cases2={numeral(countryInfo.recoveredPerOneMillion).format(\"0,0\")}\r\n          subheading2=\"Recovered/1Mil\"\r\n          cases3={numeral(countryInfo.deathsPerOneMillion).format(\"0,0\")}\r\n          subheading3=\"Deaths/1Mil\"\r\n          imageUrl=\"https://i.ibb.co/RCNGsm8/patient.png\"\r\n          isRed\r\n          isGreen\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default HeaderStats;\r\n"]},"metadata":{},"sourceType":"module"}