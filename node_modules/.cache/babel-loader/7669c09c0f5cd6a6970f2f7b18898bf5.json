{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\jazii\\\\Desktop\\\\covid\\\\covid-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\jazii\\\\Desktop\\\\covid\\\\covid-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\jazii\\\\Desktop\\\\covid\\\\covid-tracker\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect}from\"react\";import ReactDOM from\"react-dom\";import StickyHeadTable from\"./Table2\";import EnhancedTable from\"./sortedTable\";import\"./table.css\";var rows=[];var columns=[{id:\"country\",label:\"Country\",minWidth:100,textAlign:\"right\"},{id:\"todayCases\",label:\"New Cases\",minWidth:100},{id:\"cases\",label:\"Total Cases\",minWidth:100},{id:\"deaths\",label:\"Total Deaths\",minWidth:100},{id:\"todayDeaths\",label:\"New Deaths\",minWidth:100},{id:\"todayRecovered\",label:\"New Recovered\",minWidth:100},{id:\"recovered\",label:\"Total Recovered\",minWidth:100},{id:\"active\",label:\"Active\",minWidth:100},{id:\"critical\",label:\"Critical\",minWidth:100}];function createData(country,todayCases,cases,deaths,todayDeaths,todayRecovered,recovered,active,critical){return{country:country,todayCases:todayCases,cases:cases,deaths:deaths,todayDeaths:todayDeaths,todayRecovered:todayRecovered,recovered:recovered,active:active,critical:critical};}var TableContainer=function TableContainer(){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),rows=_React$useState2[0],setRows=_React$useState2[1];var _React$useState3=React.useState(\"\"),_React$useState4=_slicedToArray(_React$useState3,2),searchResult=_React$useState4[0],setSearchResult=_React$useState4[1];useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(response){console.log(searchResult);console.log(response[0].country);if(searchResult){var filteredData=response.filter(function(cty){return cty.country.toLowerCase().includes(searchResult);});console.log(filteredData);setRows(filteredData);}else{setRows(response);}console.log(searchResult);console.log(rows);});case 1:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[searchResult]);console.log(rows);return/*#__PURE__*/React.createElement(\"div\",{className:\"main_table\",style:{maxHeight:800,overflow:\"scroll\"}},/*#__PURE__*/React.createElement(\"input\",{type:\"Search\",placeholder:\"Search Country\",onChange:function onChange(e){return setSearchResult(e.target.value);},className:\"table__search\"}),/*#__PURE__*/React.createElement(EnhancedTable,{columns:columns,rows:rows}));};export default TableContainer;","map":{"version":3,"sources":["C:/Users/jazii/Desktop/covid/covid-tracker/src/components/Table/TableContainer2.jsx"],"names":["React","useEffect","ReactDOM","StickyHeadTable","EnhancedTable","rows","columns","id","label","minWidth","textAlign","createData","country","todayCases","cases","deaths","todayDeaths","todayRecovered","recovered","active","critical","TableContainer","useState","setRows","searchResult","setSearchResult","getCountriesData","fetch","then","response","json","console","log","filteredData","filter","cty","toLowerCase","includes","maxHeight","overflow","e","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport StickyHeadTable from \"./Table2\";\r\nimport EnhancedTable from \"./sortedTable\";\r\nimport \"./table.css\";\r\n\r\nconst rows = [];\r\nconst columns = [\r\n  { id: \"country\", label: \"Country\", minWidth: 100, textAlign: \"right\" },\r\n  { id: \"todayCases\", label: \"New Cases\", minWidth: 100 },\r\n  { id: \"cases\", label: \"Total Cases\", minWidth: 100 },\r\n  { id: \"deaths\", label: \"Total Deaths\", minWidth: 100 },\r\n  { id: \"todayDeaths\", label: \"New Deaths\", minWidth: 100 },\r\n  { id: \"todayRecovered\", label: \"New Recovered\", minWidth: 100 },\r\n  { id: \"recovered\", label: \"Total Recovered\", minWidth: 100 },\r\n  { id: \"active\", label: \"Active\", minWidth: 100 },\r\n  { id: \"critical\", label: \"Critical\", minWidth: 100 },\r\n];\r\n\r\nfunction createData(\r\n  country,\r\n  todayCases,\r\n  cases,\r\n  deaths,\r\n  todayDeaths,\r\n  todayRecovered,\r\n  recovered,\r\n  active,\r\n  critical\r\n) {\r\n  return {\r\n    country,\r\n    todayCases,\r\n    cases,\r\n    deaths,\r\n    todayDeaths,\r\n    todayRecovered,\r\n    recovered,\r\n    active,\r\n    critical,\r\n  };\r\n}\r\n\r\nconst TableContainer = () => {\r\n  const [rows, setRows] = React.useState([]);\r\n  const [searchResult, setSearchResult] = React.useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n          console.log(searchResult);\r\n          console.log(response[0].country);\r\n          if (searchResult) {\r\n            const filteredData = response.filter((cty) =>\r\n              cty.country.toLowerCase().includes(searchResult)\r\n            );\r\n            console.log(filteredData);\r\n            setRows(filteredData);\r\n          } else {\r\n            setRows(response);\r\n          }\r\n          console.log(searchResult);\r\n          console.log(rows);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, [searchResult]);\r\n\r\n  console.log(rows);\r\n\r\n  return (\r\n    <div className=\"main_table\" style={{ maxHeight: 800, overflow: \"scroll\" }}>\r\n      <input\r\n        type=\"Search\"\r\n        placeholder=\"Search Country\"\r\n        onChange={(e) => setSearchResult(e.target.value)}\r\n        className=\"table__search\"\r\n      />\r\n      <EnhancedTable columns={columns} rows={rows} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableContainer;\r\n"]},"metadata":{},"sourceType":"module"}